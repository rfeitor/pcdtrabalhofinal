PERLTOC(1)             Perl Programmers Reference Guide             PERLTOC(1)



NAME
       perltoc - perl documentation table of contents

DESCRIPTION
       This page provides a brief table of contents for the rest of the Perl
       documentation set.  It is meant to be scanned quickly or grepped
       through to locate the proper section you're looking for.

BASIC DOCUMENTATION
       perl - Practical Extraction and Report Language


       SYNOPSIS
           Overview
           Tutorials
           Reference Manual
           Internals and C Language Interface
           Miscellaneous
           Language-Specific
           Platform-Specific
       DESCRIPTION
       AVAILABILITY
       ENVIRONMENT
       AUTHOR
       FILES
       SEE ALSO
       DIAGNOSTICS
       BUGS
       NOTES

       perlintro -- a brief introduction and overview of Perl


       DESCRIPTION
           What is Perl?
           Running Perl programs
           Safety net
           Basic syntax overview
           Perl variable types
               Scalars, Arrays, Hashes

           Variable scoping
           Conditional and looping constructs
               if, while, for, foreach

           Builtin operators and functions
               Arithmetic, Numeric comparison, String comparison, Boolean
               logic, Miscellaneous

           Files and I/O
           Regular expressions
               Simple matching, Simple substitution, More complex regular
               expressions, Parentheses for capturing, Other regexp features

           Writing subroutines
           OO Perl
           Using Perl modules
       AUTHOR

       perlreftut - Mark's very short tutorial about references


       DESCRIPTION
       Who Needs Complicated Data Structures?
       The Solution
       Syntax
           Making References
           Using References
           An Example
           Arrow Rule
       Solution
       The Rest
       Summary
       Credits
           Distribution Conditions

       perldsc - Perl Data Structures Cookbook


       DESCRIPTION
           arrays of arrays, hashes of arrays, arrays of hashes, hashes of
           hashes, more elaborate constructs

       REFERENCES
       COMMON MISTAKES
       CAVEAT ON PRECEDENCE
       WHY YOU SHOULD ALWAYS "use strict"
       DEBUGGING
       CODE EXAMPLES
       ARRAYS OF ARRAYS
           Declaration of an ARRAY OF ARRAYS
           Generation of an ARRAY OF ARRAYS
           Access and Printing of an ARRAY OF ARRAYS
       HASHES OF ARRAYS
           Declaration of a HASH OF ARRAYS
           Generation of a HASH OF ARRAYS
           Access and Printing of a HASH OF ARRAYS
       ARRAYS OF HASHES
           Declaration of an ARRAY OF HASHES
           Generation of an ARRAY OF HASHES
           Access and Printing of an ARRAY OF HASHES
       HASHES OF HASHES
           Declaration of a HASH OF HASHES
           Generation of a HASH OF HASHES
           Access and Printing of a HASH OF HASHES
       MORE ELABORATE RECORDS
           Declaration of MORE ELABORATE RECORDS
           Declaration of a HASH OF COMPLEX RECORDS
           Generation of a HASH OF COMPLEX RECORDS
       Database Ties
       SEE ALSO
       AUTHOR

       perllol - Manipulating Arrays of Arrays in Perl


       DESCRIPTION
           Declaration and Access of Arrays of Arrays
           Growing Your Own
           Access and Printing
           Slices
       SEE ALSO
       AUTHOR

       perlrequick - Perl regular expressions quick start


       DESCRIPTION
       The Guide
           Simple word matching
           Using character classes
           Matching this or that
           Grouping things and hierarchical matching
           Extracting matches
           Matching repetitions
           More matching
           Search and replace
           The split operator
       BUGS
       SEE ALSO
       AUTHOR AND COPYRIGHT
           Acknowledgments

       perlretut - Perl regular expressions tutorial


       DESCRIPTION
       Part 1: The basics
           Simple word matching
           Using character classes
           Matching this or that
           Grouping things and hierarchical matching
           Extracting matches
           Backreferences
           Relative backreferences
           Named backreferences
           Alternative capture group numbering
           Position information
           Non-capturing groupings
           Matching repetitions
           Possessive quantifiers
           Building a regexp
           Using regular expressions in Perl
       Part 2: Power tools
           More on characters, strings, and character classes
           Compiling and saving regular expressions
           Composing regular expressions at runtime
           Embedding comments and modifiers in a regular expression
           Looking ahead and looking behind
           Using independent subexpressions to prevent backtracking
           Conditional expressions
           Defining named patterns
           Recursive patterns
           A bit of magic: executing Perl code in a regular expression
           Backtracking control verbs
           Pragmas and debugging
       BUGS
       SEE ALSO
       AUTHOR AND COPYRIGHT
           Acknowledgments

       perlboot - Beginner's Object-Oriented Tutorial


       DESCRIPTION
           If we could talk to the animals...
           Introducing the method invocation arrow
           Invoking a barnyard
           The extra parameter of method invocation
           Calling a second method to simplify things
           Inheriting the windpipes
           A few notes about @ISA
           Overriding the methods
           Starting the search from a different place
           The SUPER way of doing things
           Where we're at so far...
           A horse is a horse, of course of course -- or is it?
           Invoking an instance method
           Accessing the instance data
           How to build a horse
           Inheriting the constructor
           Making a method work with either classes or instances
           Adding parameters to a method
           More interesting instances
           A horse of a different color
           Summary
       SEE ALSO
       COPYRIGHT

       perltoot - Tom's object-oriented tutorial for perl


       DESCRIPTION
       Creating a Class
           Object Representation
           Class Interface
           Constructors and Instance Methods
           Planning for the Future: Better Constructors
           Destructors
           Other Object Methods
       Class Data
           Accessing Class Data
           Debugging Methods
           Class Destructors
           Documenting the Interface
       Aggregation
       Inheritance
           Overridden Methods
           Multiple Inheritance
           UNIVERSAL: The Root of All Objects
           Deeper UNIVERSAL details
       Alternate Object Representations
           Arrays as Objects
           Closures as Objects
       AUTOLOAD: Proxy Methods
           Autoloaded Data Methods
           Inherited Autoloaded Data Methods
       Metaclassical Tools
           Class::Struct
           Data Members as Variables
       NOTES
           Object Terminology
       SEE ALSO
       AUTHOR AND COPYRIGHT
       COPYRIGHT
           Acknowledgments

       perltooc - Tom's OO Tutorial for Class Data in Perl


       DESCRIPTION
       Class Data in a Can
       Class Data as Package Variables
           Putting All Your Eggs in One Basket
           Inheritance Concerns
           The Eponymous Meta-Object
           Indirect References to Class Data
           Monadic Classes
           Translucent Attributes
       Class Data as Lexical Variables
           Privacy and Responsibility
           File-Scoped Lexicals
           More Inheritance Concerns
           Locking the Door and Throwing Away the Key
           Translucency Revisited
       NOTES
       SEE ALSO
       AUTHOR AND COPYRIGHT
       ACKNOWLEDGEMENTS
       HISTORY

       perlbot - Bag'o Object Tricks (the BOT)


       DESCRIPTION
       OO SCALING TIPS
       INSTANCE VARIABLES
       SCALAR INSTANCE VARIABLES
       INSTANCE VARIABLE INHERITANCE
       OBJECT RELATIONSHIPS
       OVERRIDING SUPERCLASS METHODS
       USING RELATIONSHIP WITH SDBM
       THINKING OF CODE REUSE
       CLASS CONTEXT AND THE OBJECT
       INHERITING A CONSTRUCTOR
       DELEGATION
       SEE ALSO

       perlstyle - Perl style guide


       DESCRIPTION

       perlcheat - Perl 5 Cheat Sheet

       DESCRIPTION
           The sheet
       ACKNOWLEDGEMENTS
       AUTHOR
       SEE ALSO

       perltrap - Perl traps for the unwary


       DESCRIPTION
           Awk Traps
           C/C++ Traps
           Sed Traps
           Shell Traps
           Perl Traps
           Perl4 to Perl5 Traps
               Discontinuance, Deprecation, and BugFix traps, Parsing Traps,
               Numerical Traps, General data type traps, Context Traps -
               scalar, list contexts, Precedence Traps, General Regular
               Expression Traps using s///, etc, Subroutine, Signal, Sorting
               Traps, OS Traps, DBM Traps, Unclassified Traps

           Discontinuance, Deprecation, and BugFix traps
               Symbols starting with "_" no longer forced into main, Double-
               colon valid package separator in variable name, 2nd and 3rd
               args to "splice()" are now in scalar context, Can't do "goto"
               into a block that is optimized away, Can't use whitespace as
               variable name or quote delimiter, "while/if BLOCK BLOCK" gone,
               "**" binds tighter than unary minus, "foreach" changed when
               iterating over a list, "split" with no args behavior changed,
               -e behavior fixed, "push" returns number of elements in
               resulting list, Some error messages differ, "split()" honors
               subroutine args, Bugs removed

           Parsing Traps
               Space between . and = triggers syntax error, Better parsing in
               perl 5, Function parsing, String interpolation of $#array
               differs, Perl guesses on "map", "grep" followed by "{" if it
               starts BLOCK or hash ref

           Numerical Traps
               Formatted output and significant digits, Auto-increment
               operator over signed int limit deleted, Assignment of return
               values from numeric equality tests doesn't work, Bitwise string
               ops

           General data type traps
               Negative array subscripts now count from the end of array,
               Setting $#array lower now discards array elements, Hashes get
               defined before use, Glob assignment from localized variable to
               variable, Assigning "undef" to glob, Changes in unary negation
               (of strings), Modifying of constants prohibited, "defined $var"
               behavior changed, Variable Suicide

           Context Traps - scalar, list contexts
               Elements of argument lists for formats evaluated in list
               context, "caller()" returns false value in scalar context if no
               caller present, Comma operator in scalar context gives scalar
               context to args, "sprintf()" prototyped as "($;@)"

           Precedence Traps
               LHS vs. RHS of any assignment operator, Semantic errors
               introduced due to precedence, Precedence of assignment
               operators same as the precedence of assignment, "open" requires
               parentheses around filehandle, $: precedence over $:: gone,
               Precedence of file test operators documented, "keys", "each",
               "values" are regular named unary operators

           General Regular Expression Traps using s///, etc.
               "s'$lhs'$rhs'" interpolates on either side, "m//g" attaches its
               state to the searched string, "m//o" used within an anonymous
               sub, $+ isn't set to whole match, Substitution now returns null
               string if it fails, "s`lhs`rhs`" is now a normal substitution,
               Stricter parsing of variables in regular expressions, "m?x?"
               matches only once, Failed matches don't reset the match
               variables

           Subroutine, Signal, Sorting Traps
               Barewords that used to look like strings look like subroutine
               calls, Reverse is no longer allowed as the name of a sort
               subroutine, "warn()" won't let you specify a filehandle

           OS Traps
               SysV resets signal handler correctly, SysV "seek()" appends
               correctly

           Interpolation Traps
               "@" always interpolates an array in double-quotish strings,
               Double-quoted strings may no longer end with an unescaped $,
               Arbitrary expressions are evaluated inside braces within double
               quotes, $$x now tries to dereference $x, Creation of hashes on
               the fly with "eval "EXPR"" requires protection, Bugs in earlier
               perl versions, Array and hash brackets during interpolation,
               Interpolation of "\$$foo{bar}", "qq()" string passed to "eval"
               will not find string terminator

           DBM Traps
               Perl5 must have been linked with same dbm/ndbm as the default
               for "dbmopen()", DBM exceeding limit on the key/value size will
               cause perl5 to exit immediately

           Unclassified Traps
               "require"/"do" trap using returned value, "split" on empty
               string with LIMIT specified

       perldebtut - Perl debugging tutorial


       DESCRIPTION
       use strict
       Looking at data and -w and v
       help
       Stepping through code
       Placeholder for a, w, t, T
       REGULAR EXPRESSIONS
       OUTPUT TIPS
       CGI
       GUIs
       SUMMARY
       SEE ALSO
       AUTHOR
       CONTRIBUTORS

       perlfaq - frequently asked questions about Perl


       DESCRIPTION
           Where to get the perlfaq
           How to contribute to the perlfaq
           What will happen if you mail your Perl programming problems to the
           authors?
       CREDITS
       AUTHOR AND COPYRIGHT
       Table of Contents
           perlfaq  - this document, perlfaq1 - General Questions About Perl,
           perlfaq2 - Obtaining and Learning about Perl, perlfaq3 -
           Programming Tools, perlfaq4 - Data Manipulation, perlfaq5 - Files
           and Formats, perlfaq6 - Regular Expressions, perlfaq7 - General
           Perl Language Issues, perlfaq8 - System Interaction, perlfaq9 -
           Networking

       The Questions
           perlfaq1: General Questions About Perl
           perlfaq2: Obtaining and Learning about Perl
           perlfaq3: Programming Tools
           perlfaq4: Data Manipulation
           perlfaq5: Files and Formats
           perlfaq6: Regular Expressions
           perlfaq7: General Perl Language Issues
           perlfaq8: System Interaction
           perlfaq9: Networking

       perlfaq1 - General Questions About Perl


       DESCRIPTION
           What is Perl?
           Who supports Perl?  Who develops it?  Why is it free?
           Which version of Perl should I use?
           What are Perl 4, Perl 5, or Perl 6?
           What was Ponie?
           What is Perl 6?
           How stable is Perl?
           Is Perl difficult to learn?
           How does Perl compare with other languages like Java, Python, REXX,
           Scheme, or Tcl?
           Can I do [task] in Perl?
           When shouldn't I program in Perl?
           What's the difference between "perl" and "Perl"?
           Is it a Perl program or a Perl script?
           What is a JAPH?
           Where can I get a list of Larry Wall witticisms?
           How can I convince others to use Perl?
               http://perltraining.com.au/whyperl.html,
               http://www.perl.org/advocacy/whyperl.html

       REVISION
       AUTHOR AND COPYRIGHT

       perlfaq2 - Obtaining and Learning about Perl


       DESCRIPTION
           What machines support perl?  Where do I get it?
           How can I get a binary version of perl?
           I don't have a C compiler. How can I build my own Perl interpreter?
           I copied the perl binary from one machine to another, but scripts
           don't work.
           I grabbed the sources and tried to compile but gdbm/dynamic
           loading/malloc/linking/... failed.  How do I make it work?
           What modules and extensions are available for Perl?  What is CPAN?
           What does CPAN/src/... mean?
           Is there an ISO or ANSI certified version of Perl?
           Where can I get information on Perl?
           What are the Perl newsgroups on Usenet?  Where do I post questions?
           Where should I post source code?
           Perl Books
               References, Tutorials, Task-Oriented, Special Topics

           Which magazines have Perl content?
           What mailing lists are there for Perl?
           Where are the archives for comp.lang.perl.misc?
           Where can I buy a commercial version of perl?
           Where do I send bug reports?
           What is perl.com? Perl Mongers? pm.org? perl.org? cpan.org?
       REVISION
       AUTHOR AND COPYRIGHT

       perlfaq3 - Programming Tools


       DESCRIPTION
           How do I do (anything)?
           How can I use Perl interactively?
           Is there a Perl shell?
           How do I find which modules are installed on my system?
           How do I debug my Perl programs?
           How do I profile my Perl programs?
           How do I cross-reference my Perl programs?
           Is there a pretty-printer (formatter) for Perl?
           Is there a ctags for Perl?
           Is there an IDE or Windows Perl Editor?
               Eclipse, Enginsite, Komodo, Open Perl IDE, OptiPerl,
               PerlBuilder, visiPerl+, Visual Perl, Zeus, GNU Emacs,
               MicroEMACS, XEmacs, Jed, Elvis, Vile, Vim, Codewright,
               MultiEdit, SlickEdit, Bash, Ksh, Tcsh, Zsh, Affrus, Alpha,
               BBEdit and BBEdit Lite

           Where can I get Perl macros for vi?
           Where can I get perl-mode for emacs?
           How can I use curses with Perl?
           How can I write a GUI (X, Tk, Gtk, etc.) in Perl?
               Tk, Wx, Gtk and Gtk2, Win32::GUI, CamelBones, Qt, Athena

           How can I make my Perl program run faster?
           How can I make my Perl program take less memory?
               Don't slurp!, Use map and grep selectively, Avoid unnecessary
               quotes and stringification, Pass by reference, Tie large
               variables to disk

           Is it safe to return a reference to local or lexical data?
           How can I free an array or hash so my program shrinks?
           How can I make my CGI script more efficient?
           How can I hide the source for my Perl program?
           How can I compile my Perl program into byte code or C?
           How can I get "#!perl" to work on [MS-DOS,NT,...]?
           Can I write useful Perl programs on the command line?
           Why don't Perl one-liners work on my DOS/Mac/VMS system?
           Where can I learn about CGI or Web programming in Perl?
           Where can I learn about object-oriented Perl programming?
           Where can I learn about linking C with Perl?
           I've read perlembed, perlguts, etc., but I can't embed perl in my C
           program; what am I doing wrong?
           When I tried to run my script, I got this message. What does it
           mean?
           What's MakeMaker?
       REVISION
       AUTHOR AND COPYRIGHT

       perlfaq4 - Data Manipulation


       DESCRIPTION
       Data: Numbers
           Why am I getting long decimals (eg, 19.9499999999999) instead of
           the numbers I should be getting (eg, 19.95)?
           Why is int() broken?
           Why isn't my octal data interpreted correctly?
           Does Perl have a round() function?  What about ceil() and floor()?
           Trig functions?
           How do I convert between numeric representations/bases/radixes?
               How do I convert hexadecimal into decimal, How do I convert
               from decimal to hexadecimal, How do I convert from octal to
               decimal, How do I convert from decimal to octal, How do I
               convert from binary to decimal, How do I convert from decimal
               to binary

           Why doesn't & work the way I want it to?
           How do I multiply matrices?
           How do I perform an operation on a series of integers?
           How can I output Roman numerals?
           Why aren't my random numbers random?
           How do I get a random number between X and Y?
       Data: Dates
           How do I find the day or week of the year?
           How do I find the current century or millennium?
           How can I compare two dates and find the difference?
           How can I take a string and turn it into epoch seconds?
           How can I find the Julian Day?
           How do I find yesterday's date?
           Does Perl have a Year 2000 problem? Is Perl Y2K compliant?
       Data: Strings
           How do I validate input?
           How do I unescape a string?
           How do I remove consecutive pairs of characters?
           How do I expand function calls in a string?
           How do I find matching/nesting anything?
           How do I reverse a string?
           How do I expand tabs in a string?
           How do I reformat a paragraph?
           How can I access or change N characters of a string?
           How do I change the Nth occurrence of something?
           How can I count the number of occurrences of a substring within a
           string?
           How do I capitalize all the words on one line?
           How can I split a [character] delimited string except when inside
           [character]?
           How do I strip blank space from the beginning/end of a string?
           How do I pad a string with blanks or pad a number with zeroes?
           How do I extract selected columns from a string?
           How do I find the soundex value of a string?
           How can I expand variables in text strings?
           What's wrong with always quoting "$vars"?
           Why don't my <<HERE documents work?
               There must be no space after the << part, There (probably)
               should be a semicolon at the end, You can't (easily) have any
               space in front of the tag

       Data: Arrays
           What is the difference between a list and an array?
           What is the difference between $array[1] and @array[1]?
           How can I remove duplicate elements from a list or array?
           How can I tell whether a certain element is contained in a list or
           array?
           How do I compute the difference of two arrays?  How do I compute
           the intersection of two arrays?
           How do I test whether two arrays or hashes are equal?
           How do I find the first array element for which a condition is
           true?
           How do I handle linked lists?
           How do I handle circular lists?
           How do I shuffle an array randomly?
           How do I process/modify each element of an array?
           How do I select a random element from an array?
           How do I permute N elements of a list?
           How do I sort an array by (anything)?
           How do I manipulate arrays of bits?
           Why does defined() return true on empty arrays and hashes?
       Data: Hashes (Associative Arrays)
           How do I process an entire hash?
           What happens if I add or remove keys from a hash while iterating
           over it?
           How do I look up a hash element by value?
           How can I know how many entries are in a hash?
           How do I sort a hash (optionally by value instead of key)?
           How can I always keep my hash sorted?
           What's the difference between "delete" and "undef" with hashes?
           Why don't my tied hashes make the defined/exists distinction?
           How do I reset an each() operation part-way through?
           How can I get the unique keys from two hashes?
           How can I store a multidimensional array in a DBM file?
           How can I make my hash remember the order I put elements into it?
           Why does passing a subroutine an undefined element in a hash create
           it?
           How can I make the Perl equivalent of a C structure/C++ class/hash
           or array of hashes or arrays?
           How can I use a reference as a hash key?
       Data: Misc
           How do I handle binary data correctly?
           How do I determine whether a scalar is a
           number/whole/integer/float?
           How do I keep persistent data across program calls?
           How do I print out or copy a recursive data structure?
           How do I define methods for every class/object?
           How do I verify a credit card checksum?
           How do I pack arrays of doubles or floats for XS code?
       REVISION
       AUTHOR AND COPYRIGHT

       perlfaq5 - Files and Formats


       DESCRIPTION
           How do I flush/unbuffer an output filehandle?  Why must I do this?
           How do I count the number of lines in a file?
           How can I use Perl's "-i" option from within a program?
           How can I copy a file?
           How do I make a temporary file name?
           How can I manipulate fixed-record-length files?
           How can I make a filehandle local to a subroutine?  How do I pass
           filehandles between subroutines?  How do I make an array of
           filehandles?
           How can I use a filehandle indirectly?
           How can I set up a footer format to be used with write()?
           How can I write() into a string?
           How can I open a filehandle to a string? , , ,
           How can I translate tildes (~) in a filename?
           How come when I open a file read-write it wipes it out?
           Why do I sometimes get an "Argument list too long" when I use <*>?
           Is there a leak/bug in glob()?
           How can I open a file with a leading ">" or trailing blanks?
           How can I reliably rename a file?
           How can I lock a file?
           Why can't I just open(FH, ">file.lock")?
           I still don't get locking.  I just want to increment the number in
           the file.  How can I do this?
           All I want to do is append a small amount of text to the end of a
           file.  Do I still have to use locking?
           How do I randomly update a binary file?
           How do I get a file's timestamp in perl?
           How do I set a file's timestamp in perl?
           How do I print to more than one file at once?
           How can I read in an entire file all at once?
           How can I read in a file by paragraphs?
           How can I read a single character from a file?  From the keyboard?
           How can I tell whether there's a character waiting on a filehandle?
           How do I do a "tail -f" in perl?
           How do I dup() a filehandle in Perl?
           How do I close a file descriptor by number?
           Why can't I use "C:\temp\foo" in DOS paths?  Why doesn't
           `C:\temp\foo.exe` work?
           Why doesn't glob("*.*") get all the files?
           Why does Perl let me delete read-only files?  Why does "-i" clobber
           protected files?  Isn't this a bug in Perl?
           How do I select a random line from a file?
           Why do I get weird spaces when I print an array of lines?
       REVISION
       AUTHOR AND COPYRIGHT

       perlfaq6 - Regular Expressions


       DESCRIPTION
           How can I hope to use regular expressions without creating
           illegible and unmaintainable code?
               Comments Outside the Regex, Comments Inside the Regex,
               Different Delimiters

           I'm having trouble matching over more than one line.  What's wrong?
           How can I pull out lines between two patterns that are themselves
           on different lines?
           I put a regular expression into $/ but it didn't work. What's
           wrong?
           How do I substitute case insensitively on the LHS while preserving
           case on the RHS?
           How can I make "\w" match national character sets?
           How can I match a locale-smart version of "/[a-zA-Z]/"?
           How can I quote a variable to use in a regex?
           What is "/o" really for?
           How do I use a regular expression to strip C style comments from a
           file?
           Can I use Perl regular expressions to match balanced text?
           What does it mean that regexes are greedy?  How can I get around
           it?
           How do I process each word on each line?
           How can I print out a word-frequency or line-frequency summary?
           How can I do approximate matching?
           How do I efficiently match many regular expressions at once?
           Why don't word-boundary searches with "\b" work for me?
           Why does using $&, $`, or $' slow my program down?
           What good is "\G" in a regular expression?
           Are Perl regexes DFAs or NFAs?  Are they POSIX compliant?
           What's wrong with using grep in a void context?
           How can I match strings with multibyte characters?
               Martian"
           How do I match a regular expression that's in a variable? ,
       REVISION
       AUTHOR AND COPYRIGHT

       perlfaq7 - General Perl Language Issues


       DESCRIPTION
           Can I get a BNF/yacc/RE for the Perl language?
           What are all these $@%&* punctuation signs, and how do I know when
           to use them?
           Do I always/never have to quote my strings or use semicolons and
           commas?
           How do I skip some return values?
           How do I temporarily block warnings?
           What's an extension?
           Why do Perl operators have different precedence than C operators?
           How do I declare/create a structure?
           How do I create a module?
           How do I adopt or take over a module already on CPAN?
           How do I create a class?
           How can I tell if a variable is tainted?
           What's a closure?
           What is variable suicide and how can I prevent it?
           How can I pass/return a {Function, FileHandle, Array, Hash, Method,
           Regex}?
               Passing Variables and Functions, Passing Filehandles, Passing
               Regexes, Passing Methods

           How do I create a static variable?
           What's the difference between dynamic and lexical (static) scoping?
           Between local() and my()?
           How can I access a dynamic variable while a similarly named lexical
           is in scope?
           What's the difference between deep and shallow binding?
           Why doesn't "my($foo) = <FILE>;" work right?
           How do I redefine a builtin function, operator, or method?
           What's the difference between calling a function as &foo and foo()?
           How do I create a switch or case statement?
           How can I catch accesses to undefined variables, functions, or
           methods?
           Why can't a method included in this same file be found?
           How can I find out my current package?
           How can I comment out a large block of perl code?
           How do I clear a package?
           How can I use a variable as a variable name?
           What does "bad interpreter" mean?
       REVISION
       AUTHOR AND COPYRIGHT

       perlfaq8 - System Interaction


       DESCRIPTION
           How do I find out which operating system I'm running under?
           How come exec() doesn't return?
           How do I do fancy stuff with the keyboard/screen/mouse?
               Keyboard, Screen, Mouse

           How do I print something out in color?
           How do I read just one key without waiting for a return key?
           How do I check whether input is ready on the keyboard?
           How do I clear the screen?
           How do I get the screen size?
           How do I ask the user for a password?
           How do I read and write the serial port?
               lockfiles, open mode, end of line, flushing output, non-
               blocking input

           How do I decode encrypted password files?
           How do I start a process in the background?
               STDIN, STDOUT, and STDERR are shared, Signals, Zombies

           How do I trap control characters/signals?
           How do I modify the shadow password file on a Unix system?
           How do I set the time and date?
           How can I sleep() or alarm() for under a second?
           How can I measure time under a second?
           How can I do an atexit() or setjmp()/longjmp()? (Exception
           handling)
           Why doesn't my sockets program work under System V (Solaris)?  What
           does the error message "Protocol not supported" mean?
           How can I call my system's unique C functions from Perl?
           Where do I get the include files to do ioctl() or syscall()?
           Why do setuid perl scripts complain about kernel problems?
           How can I open a pipe both to and from a command?
           Why can't I get the output of a command with system()?
           How can I capture STDERR from an external command?
           Why doesn't open() return an error when a pipe open fails?
           What's wrong with using backticks in a void context?
           How can I call backticks without shell processing?
           Why can't my script read from STDIN after I gave it EOF (^D on
           Unix, ^Z on MS-DOS)?
           How can I convert my shell script to perl?
           Can I use perl to run a telnet or ftp session?
           How can I write expect in Perl?
           Is there a way to hide perl's command line from programs such as
           "ps"?
           I {changed directory, modified my environment} in a perl
           script. How come the change disappeared when I exited the script?
           How do I get my changes to be visible?
               Unix

           How do I close a process's filehandle without waiting for it to
           complete?
           How do I fork a daemon process?
           How do I find out if I'm running interactively or not?
           How do I timeout a slow event?
           How do I set CPU limits?
           How do I avoid zombies on a Unix system?
           How do I use an SQL database?
           How do I make a system() exit on control-C?
           How do I open a file without blocking?
           How do I tell the difference between errors from the shell and
           perl?
           How do I install a module from CPAN?
           What's the difference between require and use?
           How do I keep my own module/library directory?
           How do I add the directory my program lives in to the
           module/library search path?
           How do I add a directory to my include path (@INC) at runtime?
               the PERLLIB environment variable, the PERL5LIB environment
               variable, the perl -Idir command line flag, the use lib pragma:

           What is socket.ph and where do I get it?
       REVISION
       AUTHOR AND COPYRIGHT

       perlfaq9 - Networking


       DESCRIPTION
           What is the correct form of response from a CGI script?
           My CGI script runs from the command line but not the browser.  (500
           Server Error)
           How can I get better error messages from a CGI program?
           How do I remove HTML from a string?
           How do I extract URLs?
           How do I download a file from the user's machine?  How do I open a
           file on another machine?
           How do I make an HTML pop-up menu with Perl?
           How do I fetch an HTML file?
           How do I automate an HTML form submission?
           How do I decode or create those %-encodings on the web?
           How do I redirect to another page?
           How do I put a password on my web pages?
           How do I edit my .htpasswd and .htgroup files with Perl?
           How do I make sure users can't enter values into a form that cause
           my CGI script to do bad things?
           How do I parse a mail header?
           How do I decode a CGI form?
           How do I check a valid mail address?
           How do I decode a MIME/BASE64 string?
           How do I return the user's mail address?
           How do I send mail?
           How do I use MIME to make an attachment to a mail message?
           How do I read mail?
           How do I find out my hostname, domainname, or IP address?
               gethostbyname, Socket, Net::Domain, Sys::Hostname"
           How do I fetch a news article or the active newsgroups?
           How do I fetch/put an FTP file?
           How can I do RPC in Perl?
       REVISION
       AUTHOR AND COPYRIGHT

       perlsyn - Perl syntax


       DESCRIPTION
           Declarations
           Comments
           Simple Statements
           Truth and Falsehood
           Statement Modifiers
           Compound Statements
           Loop Control
           For Loops
           Foreach Loops
           Basic BLOCKs
           Switch statements
               o, o, o, o, o, o, o

           Goto
           PODs: Embedded Documentation
           Plain Old Comments (Not!)

       perldata - Perl data types


       DESCRIPTION
           Variable names
           Context
           Scalar values
           Scalar value constructors
           List value constructors
           Subscripts
           Slices
           Typeglobs and Filehandles
       SEE ALSO

       perlop - Perl operators and precedence


       DESCRIPTION
           Operator Precedence and Associativity
           Terms and List Operators (Leftward)
           The Arrow Operator
           Auto-increment and Auto-decrement
           Exponentiation
           Symbolic Unary Operators
           Binding Operators
           Multiplicative Operators
           Additive Operators
           Shift Operators
           Named Unary Operators
           Relational Operators
           Equality Operators
           Bitwise And
           Bitwise Or and Exclusive Or
           C-style Logical And
           C-style Logical Or
           C-style Logical Defined-Or
           Range Operators
           Conditional Operator
           Assignment Operators
           Comma Operator
           List Operators (Rightward)
           Logical Not
           Logical And
           Logical or, Defined or, and Exclusive Or
           C Operators Missing From Perl
               unary &, unary *, (TYPE)

           Quote and Quote-like Operators
           Regexp Quote-Like Operators
               qr/STRING/msixpo       , m/PATTERN/msixpogc
                        , /PATTERN/msixpogc, ?PATTERN? ,
               s/PATTERN/REPLACEMENT/msixpogce substitute  m  s  i  x  p  o  g
               c  e"

           Quote-Like Operators
               q/STRING/    , 'STRING', qq/STRING/
                 , "STRING", qx/STRING/ , `STRING`, qw/STRING/   ,
               tr/SEARCHLIST/REPLACEMENTLIST/cds ,
               y/SEARCHLIST/REPLACEMENTLIST/cds, <<EOF
                , Double Quotes, Single Quotes, Backticks

           Gory details of parsing quoted constructs
               Finding the end, Interpolation , "<<'EOF'",  "m''", the pattern
               of "s'''", '', "q//", "tr'''", "y'''", the replacement of
               "s'''", "tr///", "y///", "", "``", "qq//", "qx//",
               "<file*glob>", "<<"EOF"", the replacement of "s///", "RE" in
               "?RE?", "/RE/", "m/RE/", "s/RE/foo/",, parsing regular
               expressions , Optimization of regular expressions

           I/O Operators
           Constant Folding
           No-ops
           Bitwise String Operators
           Integer Arithmetic
           Floating-point Arithmetic
           Bigger Numbers

       perlsub - Perl subroutines


       SYNOPSIS
       DESCRIPTION
           Private Variables via my()
           Persistent Private Variables
               static closure"
           Temporary Values via local()
           Lvalue subroutines
               Lvalue subroutines are EXPERIMENTAL

           Passing Symbol Table Entries (typeglobs)
           When to Still Use local()
           Pass by Reference
           Prototypes
           Constant Functions
           Overriding Built-in Functions
           Autoloading
           Subroutine Attributes
       SEE ALSO

       perlfunc - Perl builtin functions


       DESCRIPTION
           Perl Functions by Category
               Functions for SCALARs or strings   , Regular expressions and
               pattern matching   , Numeric functions    , Functions for real
               @ARRAYs , Functions for list data , Functions for real %HASHes
               , Input and output functions
                 , Functions for fixed length data or records, Functions for
               filehandles, files, or directories
                  , Keywords related to the control flow of your Perl program
               , Keywords related to switch, Keywords related to scoping,
               Miscellaneous functions, Functions for processes and process
               groups   , Keywords related to perl modules , Keywords related
               to classes and object-orientation   , Low-level socket
               functions  , System V interprocess communication functions
                    , Fetching user and group info
                , Fetching network info
                   , Time-related functions
                , Functions new in perl5 , Functions obsoleted in perl5

           Portability
           Alphabetical Listing of Perl Functions
               -X FILEHANDLE

               , -X EXPR, -X DIRHANDLE, -X, abs VALUE  , abs, accept
               NEWSOCKET,GENERICSOCKET , alarm SECONDS , alarm, atan2 Y,X    ,
               bind SOCKET,NAME , binmode FILEHANDLE, LAYER
                , binmode FILEHANDLE, bless REF,CLASSNAME , bless REF, break,
               caller EXPR    , caller, chdir EXPR   , chdir FILEHANDLE, chdir
               DIRHANDLE, chdir, chmod LIST   , chomp VARIABLE     , chomp(
               LIST ), chomp, chop VARIABLE , chop( LIST ), chop, chown LIST
                  , chr NUMBER , chr, chroot FILENAME  , chroot, close
               FILEHANDLE , close, closedir DIRHANDLE , connect SOCKET,NAME ,
               continue BLOCK , continue, cos EXPR
                  , cos, crypt PLAINTEXT,SALT

                 , dbmclose HASH , dbmopen HASH,DBNAME,MASK     , defined EXPR
                 , defined, delete EXPR , die LIST
                    , do BLOCK , do SUBROUTINE(LIST) , do EXPR , dump LABEL
                , dump, each HASH  , eof FILEHANDLE   , eof (), eof, eval EXPR

               , eval BLOCK, eval, exec LIST  , exec PROGRAM LIST, exists EXPR
               , exit EXPR
                 , exit, exp EXPR
                 , exp, fcntl FILEHANDLE,FUNCTION,SCALAR , fileno FILEHANDLE ,
               flock FILEHANDLE,OPERATION
                , fork   , format , formline PICTURE,LIST , getc FILEHANDLE
                , getc, getlogin  , getpeername SOCKET  , getpgrp PID  ,
               getppid   , getpriority WHICH,WHO
                , getpwnam NAME





                 , getgrnam NAME, gethostbyname NAME, getnetbyname NAME,
               getprotobyname NAME, getpwuid UID, getgrgid GID, getservbyname
               NAME,PROTO, gethostbyaddr ADDR,ADDRTYPE, getnetbyaddr
               ADDR,ADDRTYPE, getprotobynumber NUMBER, getservbyport
               PORT,PROTO, getpwent, getgrent, gethostent, getnetent,
               getprotoent, getservent, setpwent, setgrent, sethostent
               STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN, setservent
               STAYOPEN, endpwent, endgrent, endhostent, endnetent,
               endprotoent, endservent, getsockname SOCKET , getsockopt
               SOCKET,LEVEL,OPTNAME , glob EXPR
                , glob, gmtime EXPR , gmtime, goto LABEL   , goto EXPR, goto
               &NAME, grep BLOCK LIST , grep EXPR,LIST, hex EXPR , hex, import
               LIST , index STR,SUBSTR,POSITION
                 , index STR,SUBSTR, int EXPR
                 , int, ioctl FILEHANDLE,FUNCTION,SCALAR , join EXPR,LIST ,
               keys HASH  , kill SIGNAL, LIST  , last LABEL  , last, lc EXPR ,
               lc, lcfirst EXPR  , lcfirst, length EXPR  , length, link
               OLDFILE,NEWFILE , listen SOCKET,QUEUESIZE , local EXPR ,
               localtime EXPR
                , localtime, lock THING , log EXPR
                  , log, lstat EXPR , lstat, m//, map BLOCK LIST , map
               EXPR,LIST, mkdir FILENAME,MASK , mkdir FILENAME, mkdir, msgctl
               ID,CMD,ARG , msgget KEY,FLAGS , msgrcv ID,VAR,SIZE,TYPE,FLAGS ,
               msgsnd ID,MSG,FLAGS , my EXPR , my TYPE EXPR, my EXPR : ATTRS,
               my TYPE EXPR : ATTRS, next LABEL  , next, no Module VERSION
               LIST , no Module VERSION, no Module LIST, no Module, no
               VERSION, oct EXPR      , oct, open FILEHANDLE,EXPR    , open
               FILEHANDLE,MODE,EXPR, open FILEHANDLE,MODE,EXPR,LIST, open
               FILEHANDLE,MODE,REFERENCE, open FILEHANDLE, opendir
               DIRHANDLE,EXPR , ord EXPR  , ord, our EXPR  , our TYPE EXPR,
               our EXPR : ATTRS, our TYPE EXPR : ATTRS, pack TEMPLATE,LIST ,
               package NAMESPACE   , package, pipe READHANDLE,WRITEHANDLE ,
               pop ARRAY  , pop, pos SCALAR
                , pos, print FILEHANDLE LIST , print LIST, print, printf
               FILEHANDLE FORMAT, LIST , printf FORMAT, LIST, prototype
               FUNCTION , push ARRAY,LIST  , q/STRING/, qq/STRING/,
               qr/STRING/, qx/STRING/, qw/STRING/, quotemeta EXPR
                , quotemeta, rand EXPR  , rand, read
               FILEHANDLE,SCALAR,LENGTH,OFFSET  , read
               FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE , readline EXPR,
               readline   , readlink EXPR , readlink, readpipe EXPR, readpipe
               , recv SOCKET,SCALAR,LENGTH,FLAGS , redo LABEL , redo, ref EXPR
               , ref, rename OLDNAME,NEWNAME    , require VERSION , require
               EXPR, require, reset EXPR , reset, return EXPR , return,
               reverse LIST   , rewinddir DIRHANDLE , rindex
               STR,SUBSTR,POSITION , rindex STR,SUBSTR, rmdir FILENAME   ,
               rmdir, s///, say FILEHANDLE LIST , say LIST, say, scalar EXPR ,
               seek FILEHANDLE,POSITION,WHENCE   , seekdir DIRHANDLE,POS ,
               select FILEHANDLE , select, select RBITS,WBITS,EBITS,TIMEOUT ,
               semctl ID,SEMNUM,CMD,ARG , semget KEY,NSEMS,FLAGS , semop
               KEY,OPSTRING , send SOCKET,MSG,FLAGS,TO , send
               SOCKET,MSG,FLAGS, setpgrp PID,PGRP  , setpriority
               WHICH,WHO,PRIORITY    , setsockopt SOCKET,LEVEL,OPTNAME,OPTVAL
               , shift ARRAY , shift, shmctl ID,CMD,ARG , shmget
               KEY,SIZE,FLAGS , shmread ID,VAR,POS,SIZE  , shmwrite
               ID,STRING,POS,SIZE, shutdown SOCKET,HOW , sin EXPR , sin, sleep
               EXPR  , sleep, socket SOCKET,DOMAIN,TYPE,PROTOCOL , socketpair
               SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL , sort SUBNAME LIST
                  , sort BLOCK LIST, sort LIST, splice
               ARRAY,OFFSET,LENGTH,LIST , splice ARRAY,OFFSET,LENGTH, splice
               ARRAY,OFFSET, splice ARRAY, split /PATTERN/,EXPR,LIMIT , split
               /PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST ,
               format parameter index, flags, vector flag, (minimum) width,
               precision, or maximum width , size, order of arguments, sqrt
               EXPR   , sqrt, srand EXPR , srand, stat FILEHANDLE   , stat
               EXPR, stat DIRHANDLE, stat, state EXPR , state TYPE EXPR, state
               EXPR : ATTRS, state TYPE EXPR : ATTRS, study SCALAR , study,
               sub NAME BLOCK , sub NAME (PROTO) BLOCK, sub NAME : ATTRS
               BLOCK, sub NAME (PROTO) : ATTRS BLOCK, substr
               EXPR,OFFSET,LENGTH,REPLACEMENT
                  , substr EXPR,OFFSET,LENGTH, substr EXPR,OFFSET, symlink
               OLDFILE,NEWFILE , syscall NUMBER, LIST  , sysopen
               FILEHANDLE,FILENAME,MODE , sysopen
               FILEHANDLE,FILENAME,MODE,PERMS, sysread
               FILEHANDLE,SCALAR,LENGTH,OFFSET , sysread
               FILEHANDLE,SCALAR,LENGTH, sysseek FILEHANDLE,POSITION,WHENCE  ,
               system LIST , system PROGRAM LIST, syswrite
               FILEHANDLE,SCALAR,LENGTH,OFFSET , syswrite
               FILEHANDLE,SCALAR,LENGTH, syswrite FILEHANDLE,SCALAR, tell
               FILEHANDLE , tell, telldir DIRHANDLE , tie
               VARIABLE,CLASSNAME,LIST , tied VARIABLE , time , times , tr///,
               truncate FILEHANDLE,LENGTH , truncate EXPR,LENGTH, uc EXPR   ,
               uc, ucfirst EXPR  , ucfirst, umask EXPR , umask, undef EXPR  ,
               undef, unlink LIST
                , unlink, unpack TEMPLATE,EXPR , unpack TEMPLATE, untie
               VARIABLE , unshift ARRAY,LIST , use Module VERSION LIST   , use
               Module VERSION, use Module LIST, use Module, use VERSION, utime
               LIST , values HASH , vec EXPR,OFFSET,BITS   , wait , waitpid
               PID,FLAGS , wantarray  , warn LIST
                , write FILEHANDLE , write EXPR, write, y/// position seekdir
               select filehandle, default select semctl semget semop send
               setpgrp group setpriority priority nice renice setsockopt shift
               shmctl shmget shmread shmwrite shutdown sin sine asin arcsine
               sleep pause socket socketpair sort qsort quicksort mergesort
               splice split sprintf precision sqrt root square root srand seed
               randseed stat file, status ctime state study sub substr
               substring mid left right symlink link symbolic link link,
               symbolic syscall system call sysopen sysread sysseek lseek
               system shell syswrite tell telldir tie tied time epoch times
               truncate uc uppercase toupper ucfirst uppercase umask undef
               undefine unlink delete remove rm del unpack untie unshift use
               module import utime values vec bit bit vector wait waitpid
               wantarray context warn warning STDERR write"

       perlopentut - tutorial on opening things in Perl


       DESCRIPTION
       Open a la shell
           Simple Opens
           Indirect Filehandles
           Pipe Opens
           The Minus File
           Mixing Reads and Writes
           Filters
       Open a la C
           Permissions a la mode
       Obscure Open Tricks
           Re-Opening Files (dups)
           Dispelling the Dweomer
           Paths as Opens
           Single Argument Open
           Playing with STDIN and STDOUT
       Other I/O Issues
           Opening Non-File Files
           Opening Named Pipes
           Opening Sockets
           Binary Files
           File Locking
           IO Layers
       SEE ALSO
       AUTHOR and COPYRIGHT
       HISTORY

       perlpacktut - tutorial on "pack" and "unpack"


       DESCRIPTION
       The Basic Principle
       Packing Text
       Packing Numbers
           Integers
           Unpacking a Stack Frame
           How to Eat an Egg on a Net
           Byte-order modifiers
           Floating point Numbers
       Exotic Templates
           Bit Strings
           Uuencoding
           Doing Sums
           Unicode
           Another Portable Binary Encoding
       Template Grouping
       Lengths and Widths
           String Lengths
           Dynamic Templates
           Counting Repetitions
       Packing and Unpacking C Structures
           The Alignment Pit
           Dealing with Endian-ness
           Alignment, Take 2
           Alignment, Take 3
           Pointers for How to Use Them
       Pack Recipes
       Funnies Section
       Authors

       perlpod - the Plain Old Documentation format


       DESCRIPTION
           Ordinary Paragraph
           Verbatim Paragraph
           Command Paragraph
               "=head1 Heading Text"
                 , "=head2 Heading Text", "=head3 Heading Text", "=head4
               Heading Text", "=over indentlevel"
                   , "=item stuff...", "=back", "=cut"  , "=pod"  , "=begin
               formatname"
                    , "=end formatname", "=for formatname text...", "=encoding
               encodingname"

           Formatting Codes
               "I<text>" -- italic text    , "B<text>" -- bold text
                , "C<code>" -- code text
                 , "L<name>" -- a hyperlink , "E<escape>" -- a character
               escape
                , "F<filename>" -- used for filenames , "S<text>" -- text
               contains non-breaking spaces
                  , "X<topic name>" -- an index entry
                , "Z<>" -- a null (zero-effect) formatting code code, italic
               italic B B<> POD, formatting code, bold bold C C<> POD,
               formatting code, code code L L<> POD, formatting code,
               hyperlink hyperlink E E<> POD, formatting code, escape escape F
               F<> POD, formatting code, filename filename S S<> POD,
               formatting code, non-breaking space non-breaking space X X<>
               POD, formatting code, index entry index entry Z Z<> POD,
               formatting code, null null"

           The Intent
           Embedding Pods in Perl Modules
           Hints for Writing Pod


       SEE ALSO
       AUTHOR

       perlpodspec - Plain Old Documentation: format specification and notes


       DESCRIPTION
       Pod Definitions
       Pod Commands
           "=head1", "=head2", "=head3", "=head4", "=pod", "=cut", "=over",
           "=item", "=back", "=begin formatname", "=end formatname", "=for
           formatname text...", "=encoding encodingname"

       Pod Formatting Codes
           "I<text>" -- italic text, "B<text>" -- bold text, "C<code>" -- code
           text, "F<filename>" -- style for filenames, "X<topic name>" -- an
           index entry, "Z<>" -- a null (zero-effect) formatting code,
           "L<name>" -- a hyperlink, "E<escape>" -- a character escape,
           "S<text>" -- text contains non-breaking spaces

       Notes on Implementing Pod Processors
       About L<...> Codes
           First:, Second:, Third:, Fourth:, Fifth:, Sixth:

       About =over...=back Regions
       About Data Paragraphs and "=begin/=end" Regions
       SEE ALSO
       AUTHOR

       perlrun - how to execute the Perl interpreter


       SYNOPSIS
       DESCRIPTION
           #! and quoting on non-Unix systems
               OS/2, MS-DOS, Win95/NT, Macintosh, VMS

           Location of Perl
           Command Switches
               -0[octal/hexadecimal]  , -a  , -C [number/list] , -c , -d  ,
               -dt, -d:foo[=bar,baz]  , -dt:foo[=bar,baz], -Dletters   ,
               -Dnumber, -e commandline , -E commandline , -f , -Fpattern , -h
               , -i[extension]  , -Idirectory  , -l[octnum]   , -m[-]module  ,
               -M[-]module, -M[-]'module ...', -[mM][-]module=arg[,arg]..., -n
               , -p , -P , -s , -S , -t , -T , -u , -U , -v , -V ,
               -V:configvar, -w , -W , -X , -x , -xdirectory

       ENVIRONMENT
           HOME , LOGDIR , PATH , PERL5LIB , PERL5OPT , PERLIO , :bytes ,
           :crlf , :mmap , :perlio , :pop , :raw , :stdio , :unix , :utf8 ,
           :win32 , PERLIO_DEBUG , PERLLIB , PERL5DB , PERL5DB_THREADED ,
           PERL5SHELL (specific to the Win32 port) , PERL_ALLOW_NON_IFS_LSP
           (specific to the Win32 port) , PERL_DEBUG_MSTATS ,
           PERL_DESTRUCT_LEVEL , PERL_DL_NONLAZY , PERL_ENCODING ,
           PERL_HASH_SEED , PERL_HASH_SEED_DEBUG , PERL_ROOT (specific to the
           VMS port) , PERL_SIGNALS , PERL_UNICODE , SYS$LOGIN (specific to
           the VMS port)

       perldiag - various Perl diagnostics


       DESCRIPTION
       SEE ALSO

       perllexwarn - Perl Lexical Warnings


       DESCRIPTION
           Default Warnings and Optional Warnings
           What's wrong with -w and $^W
           Controlling Warnings from the Command Line
               -w , -W , -X

           Backward Compatibility
           Category Hierarchy
           Fatal Warnings
           Reporting Warnings from a Module
       SEE ALSO
       AUTHOR

       perldebug - Perl debugging


       DESCRIPTION
       The Perl Debugger
           Calling the debugger
               perl -d program_name, perl -d -e 0, perl -d:Ptkdb program_name,
               perl -dt threaded_program_name

           Debugger Commands
               h , h [command], h h, p expr , x [maxdepth] expr , V [pkg
               [vars]] , X [vars] , y [level [vars]] , T   , s [expr]  , n
               [expr] , r , <CR>, c [line|sub] , l , l min+incr, l min-max, l
               line, l subname, - , v [line] , . , f filename , /pattern/,
               ?pattern?, L [abw] , S [[!]regex] , t , t expr , b , b [line]
               [condition]  , b subname [condition]  , b postpone subname
               [condition]  , b load filename  , b compile subname
                , B line  , B *  , a [line] command , A line , A * , w expr ,
               W expr , W * , o , o booloption ...  , o anyoption? ... , o
               option=value ... , < ? , < [ command ] , < * , << command , > ?
               , > command , > * , >> command , { ? , { [ command ], { * , {{
               command , ! number , ! -number , !  pattern , !! cmd , source
               file , H -number , q or ^D
                , R , |dbcmd , ||dbcmd , command, m expr , M , man [manpage]
               command, V debugger command, X debugger command, y debugger
               command, T backtrace stack, backtrace debugger command, s step
               debugger command, n debugger command, r debugger command, c
               debugger command, l debugger command, - debugger command, v
               debugger command, . debugger command, f debugger command, L
               debugger command, S debugger command, t debugger command, t
               breakpoint debugger command, b breakpoint debugger command, b
               breakpoint debugger command, b breakpoint debugger command, b
               breakpoint debugger command, b breakpoint debugger command, b
               breakpoint debugger command, B breakpoint debugger command, B
               debugger command, a debugger command, A debugger command, A
               debugger command, w debugger command, W debugger command, W
               debugger command, o debugger command, o debugger command, o
               debugger command, o debugger command, < debugger command, <
               debugger command, < debugger command, << debugger command, >
               debugger command, > debugger command, > debugger command, >>
               debugger command, { debugger command, { debugger command, {{
               debugger command, ! debugger command, ! debugger command, !
               debugger command, !! debugger command, source debugger command,
               H debugger command, q debugger command, ^D debugger command, R
               debugger command, | debugger command, || debugger command, m
               debugger command, M debugger command, man"

           Configurable Options
               "recallCommand", "ShellBang"  , "pager" , "tkRunning" ,
               "signalLevel", "warnLevel", "dieLevel"
                 , "AutoTrace" , "LineInfo" , "inhibit_exit" , "PrintRet" ,
               "ornaments" , "frame" , "maxTraceLen" , "windowSize" ,
               "arrayDepth", "hashDepth"  , "dumpDepth" , "compactDump",
               "veryCompact" , "globPrint" , "DumpDBFiles" , "DumpPackages" ,
               "DumpReused" , "quote", "HighBit", "undefPrint"
                , "UsageOnly" , "TTY" , "noTTY" , "ReadLine" , "NonStop"
               option, ShellBang debugger option, pager debugger option,
               tkRunning debugger option, signalLevel debugger option,
               warnLevel debugger option, dieLevel debugger option, AutoTrace
               debugger option, LineInfo debugger option, inhibit_exit
               debugger option, PrintRet debugger option, ornaments debugger
               option, frame debugger option, maxTraceLen debugger option,
               windowSize debugger option, arrayDepth debugger option,
               hashDepth debugger option, dumpDepth debugger option,
               compactDump debugger option, veryCompact debugger option,
               globPrint debugger option, DumpDBFiles debugger option,
               DumpPackages debugger option, DumpReused debugger option, quote
               debugger option, HighBit debugger option, undefPrint debugger
               option, UsageOnly debugger option, TTY debugger option, noTTY
               debugger option, ReadLine debugger option, NonStop"

           Debugger input/output
               Prompt, Multiline commands, Stack backtrace  , Line Listing
               Format, Frame listing backtrace"

           Debugging compile-time statements
           Debugger Customization
           Readline Support
           Editor Support for Debugging
           The Perl Profiler
       Debugging regular expressions
       Debugging memory usage
       SEE ALSO
       BUGS

       perlvar - Perl predefined variables


       DESCRIPTION
           Predefined Names
               $ARG, $_  , $a, $b  , $<digits>   , $MATCH, $&  , ${^MATCH} ,
               $PREMATCH, $` , ${^PREMATCH} , $POSTMATCH, $' , ${^POSTMATCH} ,
               $LAST_PAREN_MATCH, $+ , $LAST_SUBMATCH_RESULT, $^N ,
               @LAST_MATCH_END, @+  , %+ , HANDLE->input_line_number(EXPR),
               $INPUT_LINE_NUMBER, $NR, $.    ,
               IO::Handle->input_record_separator(EXPR),
               $INPUT_RECORD_SEPARATOR, $RS, $/   , HANDLE->autoflush(EXPR),
               $OUTPUT_AUTOFLUSH, $|    , IO::Handle->output_field_separator
               EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,
                 , IO::Handle->output_record_separator EXPR,
               $OUTPUT_RECORD_SEPARATOR, $ORS, $\   , $LIST_SEPARATOR, $" ,
               $SUBSCRIPT_SEPARATOR, $SUBSEP, $; ,
               HANDLE->format_page_number(EXPR), $FORMAT_PAGE_NUMBER, $%  ,
               HANDLE->format_lines_per_page(EXPR), $FORMAT_LINES_PER_PAGE, $=
               , HANDLE->format_lines_left(EXPR), $FORMAT_LINES_LEFT, $-  ,
               @LAST_MATCH_START, @-
                , "$`" is the same as "substr($var, 0, $-[0])", $& is the same
               as "substr($var, $-[0], $+[0] - $-[0])", "$'" is the same as
               "substr($var, $+[0])", $1 is the same as "substr($var, $-[1],
               $+[1] - $-[1])", $2 is the same as "substr($var, $-[2], $+[2] -
               $-[2])", $3 is the same as "substr($var, $-[3], $+[3] -
               $-[3])", %- , HANDLE->format_name(EXPR), $FORMAT_NAME, $~  ,
               HANDLE->format_top_name(EXPR), $FORMAT_TOP_NAME, $^ ,
               IO::Handle->format_line_break_characters EXPR,
               $FORMAT_LINE_BREAK_CHARACTERS, $:  ,
               IO::Handle->format_formfeed EXPR, $FORMAT_FORMFEED, $^L ,
               $ACCUMULATOR, $^A  , $CHILD_ERROR, $?  , ${^CHILD_ERROR_NATIVE}
               , ${^ENCODING} , $OS_ERROR, $ERRNO, $!
                 , %OS_ERROR, %ERRNO, %! , $EXTENDED_OS_ERROR, $^E  ,
               $EVAL_ERROR, $@ , $PROCESS_ID, $PID, $$   , $REAL_USER_ID,
               $UID, $<   , $EFFECTIVE_USER_ID, $EUID, $>   , $REAL_GROUP_ID,
               $GID, $(   , $EFFECTIVE_GROUP_ID, $EGID, $)   , $PROGRAM_NAME,
               $0  , $[ , $] , $COMPILING, $^C  , $DEBUGGING, $^D  ,
               ${^RE_DEBUG_FLAGS}, ${^RE_TRIE_MAXBUF}, $SYSTEM_FD_MAX, $^F ,
               $^H, %^H, $INPLACE_EDIT, $^I  , $^M , $OSNAME, $^O  , ${^OPEN},
               $PERLDB, $^P , 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
               0x100, 0x200, 0x400, $LAST_REGEXP_CODE_RESULT, $^R  ,
               $EXCEPTIONS_BEING_CAUGHT, $^S  , $BASETIME, $^T  , ${^TAINT},
               ${^UNICODE}, ${^UTF8CACHE}, ${^UTF8LOCALE}, $PERL_VERSION, $^V
               , $WARNING, $^W
                , ${^WARNING_BITS}, ${^WIN32_SLOPPY_STAT}, $EXECUTABLE_NAME,
               $^X  , ARGV , $ARGV , @ARGV , ARGVOUT , @F , @INC , @ARG, @_  ,
               %INC , %ENV, $ENV{expr} , %SIG, $SIG{expr} number $ $RS
               $INPUT_RECORD_SEPARATOR $| autoflush flush $OUTPUT_AUTOFLUSH $,
               $OFS $OUTPUT_FIELD_SEPARATOR $\ $ORS $OUTPUT_RECORD_SEPARATOR
               $"" $LIST_SEPARATOR $; $SUBSEP SUBSCRIPT_SEPARATOR $%
               $FORMAT_PAGE_NUMBER $= $FORMAT_LINES_PER_PAGE $-
               $FORMAT_LINES_LEFT @- @LAST_MATCH_START %- $~ $FORMAT_NAME $^
               $FORMAT_TOP_NAME $: FORMAT_LINE_BREAK_CHARACTERS $^L
               $FORMAT_FORMFEED $^A $ACCUMULATOR $? $CHILD_ERROR
               $^CHILD_ERROR_NATIVE $^ENCODING $! $ERRNO $OS_ERROR %! $^E
               $EXTENDED_OS_ERROR $@ $EVAL_ERROR $$ $PID $PROCESS_ID $< $UID
               $REAL_USER_ID $> $EUID $EFFECTIVE_USER_ID $( $GID
               $REAL_GROUP_ID $) $EGID $EFFECTIVE_GROUP_ID $0 $PROGRAM_NAME $[
               $] $^C $COMPILING $^D $DEBUGGING $^F $SYSTEM_FD_MAX $^I
               $INPLACE_EDIT $^M $^O $OSNAME $^P $PERLDB $^R
               $LAST_REGEXP_CODE_RESULT $^S $EXCEPTIONS_BEING_CAUGHT $^T
               $BASETIME $^V $PERL_VERSION $^W $WARNING $^X $EXECUTABLE_NAME
               ARGV $ARGV @ARGV ARGVOUT @F @INC @_ @ARG %INC %ENV %SIG"

           Error Indicators
           Technical Note on the Syntax of Variable Names
       BUGS

       perlre - Perl regular expressions


       DESCRIPTION
           Modifiers
               m    , s    , i    , x , p
                , g and c multiline  s regex, single-line regexp, single-line
               regular expression, single-line  i regex, case-insensitive
               regexp, case-insensitive regular expression, case-insensitive
               x  p regex, preserve regexp, preserve  g  c"

           Regular Expressions
               [1], [2], [3], cntrl , graph , print , punct , xdigit

           Extended Patterns
               "(?#text)" , "(?pimsx-imsx)" , "(?:pattern)" ,
               "(?imsx-imsx:pattern)", "(?|pattern)"  , Look-Around Assertions
                , "(?=pattern)"   , "(?!pattern)"   , "(?<=pattern)" "\K"
                 , "(?<!pattern)"
                 , "(?'NAME'pattern)", "(?<NAME>pattern)"
                , "\k<NAME>", "\k'NAME'", "(?{ code })"    , "(??{ code })"
               , "(?PARNO)" "(?-PARNO)" "(?+PARNO)" "(?R)" "(?0)"

                , "(?&NAME)" , "(?(condition)yes-pattern|no-pattern)" ,
               "(?(condition)yes-pattern)", (1) (2) .., (<NAME>) ('NAME'), (?{
               CODE }), (R), (R1) (R2) .., (R&NAME), (DEFINE), "(?>pattern)"
               positive lookahead, positive (?!) look-ahead, negative
               lookahead, negative (?<=) look-behind, positive lookbehind,
               positive \K (?<!) look-behind, negative lookbehind, negative
               (?<NAME>) (?'NAME') named capture capture (?{}) regex, code in
               regexp, code in regular expression, code in (??{}) regex,
               postponed regexp, postponed regular expression, postponed
               (?PARNO) (?1) (?R) (?0) (?-1) (?+1) (?-PARNO) (?+PARNO) regex,
               recursive regexp, recursive regular expression, recursive
               regex, relative recursion (?&NAME) (?() backtrack backtracking
               atomic possessive"

           Special Backtracking Control Verbs
               Verbs that take an argument, "(*PRUNE)" "(*PRUNE:NAME)" ,
               "(*SKIP)" "(*SKIP:NAME)" , "(*MARK:NAME)" "(*:NAME)"
               "(*MARK:NAME)" "(*:NAME)", "(*THEN)" "(*THEN:NAME)",
               "(*COMMIT)" , Verbs without an argument, "(*FAIL)" "(*F)"  ,
               "(*ACCEPT)"

           Backtracking
           Version 8 Regular Expressions
           Warning on \1 Instead of $1
           Repeated Patterns Matching a Zero-length Substring
           Combining RE Pieces
               "ST", "S|T", "S{REPEAT_COUNT}", "S{min,max}", "S{min,max}?",
               "S?", "S*", "S+", "S??", "S*?", "S+?", "(?>S)", "(?=S)",
               "(?<=S)", "(?!S)", "(?<!S)", "(??{ EXPR })", "(?PARNO)",
               "(?(condition)yes-pattern|no-pattern)"

           Creating Custom RE Engines
       PCRE/Python Support
           "(?P<NAME>pattern)", "(?P=NAME)", "(?P>NAME)"

       BUGS
       SEE ALSO

       perlrebackslash - Perl Regular Expression Backslash Sequences and
       Escapes


       DESCRIPTION
           The backslash
               [1]

           All the sequences and escapes
           Character Escapes
               [1], [2]

           Modifiers
           Character classes
           Referencing
           Assertions
               \A, \z, \Z, \G, \b, \B

           Misc
               \C, \K, \R, \X

       perlrecharclass - Perl Regular Expression Character Classes


       DESCRIPTION
           The dot
           Backslashed sequences
               [1]

           Bracketed Character Classes
               cntrl, graph, print, punct

           Locale, Unicode and UTF-8

       perlreref - Perl Regular Expressions Reference

       DESCRIPTION
           OPERATORS
           SYNTAX
           ESCAPE SEQUENCES
           CHARACTER CLASSES
           ANCHORS
           QUANTIFIERS
           EXTENDED CONSTRUCTS
           VARIABLES
           FUNCTIONS
           TERMINOLOGY
       AUTHOR
       SEE ALSO
       THANKS

       perlref - Perl references and nested data structures


       NOTE
       DESCRIPTION
           Making References
               1.  , 2.
                  , 3.

                 , 4.       , 5.  , 6. , 7.  anonymous subroutine, reference
               reference, subroutine scope, lexical closure lexical lexical
               scope constructor new autovivification *foo{THING} *"

           Using References
           Symbolic references
           Not-so-symbolic references
           Pseudo-hashes: Using an array as a hash
           Function Templates
       WARNING
       SEE ALSO

       perlform - Perl formats


       DESCRIPTION
           Text Fields
           Numeric Fields
           The Field @* for Variable Width Multi-Line Text
           The Field ^* for Variable Width One-line-at-a-time Text
           Specifying Values
           Using Fill Mode
           Suppressing Lines Where All Fields Are Void
           Repeating Format Lines
           Top of Form Processing
           Format Variables
       NOTES
           Footers
           Accessing Formatting Internals
       WARNINGS

       perlobj - Perl objects


       DESCRIPTION
           An Object is Simply a Reference
           A Class is Simply a Package
           A Method is Simply a Subroutine
           Method Invocation
           Indirect Object Syntax
           Default UNIVERSAL methods
               isa(CLASS) , can(METHOD) , VERSION( [NEED] )

           Destructors
           Summary
           Two-Phased Garbage Collection
       SEE ALSO

       perltie - how to hide an object class in a simple variable


       SYNOPSIS
       DESCRIPTION
           Tying Scalars
               TIESCALAR classname, LIST , FETCH this , STORE this, value ,
               UNTIE this , DESTROY this

           Tying Arrays
               TIEARRAY classname, LIST , FETCH this, index , STORE this,
               index, value , FETCHSIZE this , STORESIZE this, count , EXTEND
               this, count , EXISTS this, key , DELETE this, key , CLEAR this
               , PUSH this, LIST
                , POP this , SHIFT this , UNSHIFT this, LIST , SPLICE this,
               offset, length, LIST , UNTIE this , DESTROY this

           Tying Hashes
               USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST , FETCH
               this, key , STORE this, key, value , DELETE this, key , CLEAR
               this , EXISTS this, key , FIRSTKEY this , NEXTKEY this, lastkey
               , SCALAR this , UNTIE this , DESTROY this

           Tying FileHandles
               TIEHANDLE classname, LIST , WRITE this, LIST , PRINT this, LIST
               , PRINTF this, LIST , READ this, LIST , READLINE this , GETC
               this , CLOSE this , UNTIE this , DESTROY this

           UNTIE this
           The "untie" Gotcha
       SEE ALSO
       BUGS
       AUTHOR

       perldbmfilter - Perl DBM Filters


       SYNOPSIS
       DESCRIPTION
           filter_store_key, filter_store_value, filter_fetch_key,
           filter_fetch_value

           The Filter
           An Example -- the NULL termination problem.
           Another Example -- Key is a C int.
       SEE ALSO
       AUTHOR

       perlipc - Perl interprocess communication (signals, fifos, pipes, safe
       subprocesses, sockets, and semaphores)


       DESCRIPTION
       Signals
           Handling the SIGHUP Signal in Daemons
       Named Pipes
           Deferred Signals (Safe Signals)
               Long-running opcodes, Interrupting IO, Restartable system
               calls, Signals as "faults", Signals triggered by operating
               system state

       Using open() for IPC
           Filehandles
           Background Processes
           Complete Dissociation of Child from Parent
           Safe Pipe Opens
           Bidirectional Communication with Another Process
           Bidirectional Communication with Yourself
       Sockets: Client/Server Communication
           Internet Line Terminators
           Internet TCP Clients and Servers
           Unix-Domain TCP Clients and Servers
       TCP Clients with IO::Socket
           A Simple Client
               "Proto", "PeerAddr", "PeerPort"

           A Webget Client
           Interactive Client with IO::Socket
       TCP Servers with IO::Socket
           Proto, LocalPort, Listen, Reuse

       UDP: Message Passing
       SysV IPC
       NOTES
       BUGS
       AUTHOR
       SEE ALSO

       perlfork - Perl's fork() emulation


       SYNOPSIS
       DESCRIPTION
           Behavior of other Perl features in forked pseudo-processes
               $$ or $PROCESS_ID, %ENV, chdir() and all other builtins that
               accept filenames, wait() and waitpid(), kill(), exec(), exit(),
               Open handles to files, directories and network sockets

           Resource limits
           Killing the parent process
           Lifetime of the parent process and pseudo-processes
           CAVEATS AND LIMITATIONS
               BEGIN blocks, Open filehandles, Forking pipe open() not yet
               implemented, Global state maintained by XSUBs, Interpreter
               embedded in larger application, Thread-safety of extensions

       BUGS
       AUTHOR
       SEE ALSO

       perlnumber - semantics of numbers and numeric operations in Perl


       SYNOPSIS
       DESCRIPTION
       Storing numbers
       Numeric operators and numeric conversions
       Flavors of Perl numeric operations
           Arithmetic operators, ++, Arithmetic operators during "use
           integer", Other mathematical operators, Bitwise operators, Bitwise
           operators during "use integer", Operators which expect an integer,
           Operators which expect a string

       AUTHOR
       SEE ALSO

       perlthrtut - Tutorial on threads in Perl


       DESCRIPTION
       What Is A Thread Anyway?
       Threaded Program Models
           Boss/Worker
           Work Crew
           Pipeline
       What kind of threads are Perl threads?
       Thread-Safe Modules
       Thread Basics
           Basic Thread Support
           A Note about the Examples
           Creating Threads
           Waiting For A Thread To Exit
           Ignoring A Thread
           Process and Thread Termination
       Threads And Data
           Shared And Unshared Data
           Thread Pitfalls: Races
       Synchronization and control
           Controlling access: lock()
           A Thread Pitfall: Deadlocks
           Queues: Passing Data Around
           Semaphores: Synchronizing Data Access
           Basic semaphores
           Advanced Semaphores
           Waiting for a Condition
           Giving up control
       General Thread Utility Routines
           What Thread Am I In?
           Thread IDs
           Are These Threads The Same?
           What Threads Are Running?
       A Complete Example
       Different implementations of threads
       Performance considerations
       Process-scope Changes
       Thread-Safety of System Libraries
       Conclusion
       SEE ALSO
       Bibliography
           Introductory Texts
           OS-Related References
           Other References
       Acknowledgements
       AUTHOR
       Copyrights

       perlothrtut - old tutorial on threads in Perl


       DESCRIPTION
       What Is A Thread Anyway?
       Threaded Program Models
           Boss/Worker
           Work Crew
           Pipeline
       Native threads
       What kind of threads are perl threads?
       Threadsafe Modules
       Thread Basics
           Basic Thread Support
           Creating Threads
           Giving up control
           Waiting For A Thread To Exit
           Errors In Threads
           Ignoring A Thread
       Threads And Data
           Shared And Unshared Data
           Thread Pitfall: Races
           Controlling access: lock()
           Thread Pitfall: Deadlocks
           Queues: Passing Data Around
       Threads And Code
           Semaphores: Synchronizing Data Access
               Basic semaphores, Advanced Semaphores

           Attributes: Restricting Access To Subroutines
           Subroutine Locks
           Methods
           Locking A Subroutine
       General Thread Utility Routines
           What Thread Am I In?
           Thread IDs
           Are These Threads The Same?
           What Threads Are Running?
       A Complete Example
       Conclusion
       Bibliography
           Introductory Texts
           OS-Related References
           Other References
       Acknowledgements
       AUTHOR
       Copyrights

       perlport - Writing portable Perl


       DESCRIPTION
           Not all Perl programs have to be portable, Nearly all of Perl
           already is portable

       ISSUES
           Newlines
           Numbers endianness and Width
           Files and Filesystems
           System Interaction
           Command names versus file pathnames
           Networking
           Interprocess Communication (IPC)
           External Subroutines (XS)
           Standard Modules
           Time and Date
           Character sets and character encoding
           Internationalisation
           System Resources
           Security
           Style
       CPAN Testers
       PLATFORMS
           Unix
           DOS and Derivatives
           Mac OS
           VMS
           VOS
           EBCDIC Platforms
           Acorn RISC OS
           Other perls
       FUNCTION IMPLEMENTATIONS
           Alphabetical Listing of Perl Functions
               -X, atan2, binmode, chmod, chown, chroot, crypt, dbmclose,
               dbmopen, dump, exec, exit, fcntl, flock, fork, getlogin,
               getpgrp, getppid, getpriority, getpwnam, getgrnam,
               getnetbyname, getpwuid, getgrgid, getnetbyaddr,
               getprotobynumber, getservbyport, getpwent, getgrent,
               gethostbyname, gethostent, getnetent, getprotoent, getservent,
               sethostent, setnetent, setprotoent, setservent, endpwent,
               endgrent, endhostent, endnetent, endprotoent, endservent,
               getsockopt SOCKET,LEVEL,OPTNAME, glob, gmtime, ioctl
               FILEHANDLE,FUNCTION,SCALAR, kill, link, localtime, lstat,
               msgctl, msgget, msgsnd, msgrcv, open, pipe, readlink, rename,
               select, semctl, semget, semop, setgrent, setpgrp, setpriority,
               setpwent, setsockopt, shmctl, shmget, shmread, shmwrite,
               sockatmark, socketpair, stat, symlink, syscall, sysopen,
               system, times, truncate, umask, utime, wait, waitpid

       Supported Platforms
       SEE ALSO
       AUTHORS / CONTRIBUTORS

       perllocale - Perl locale handling (internationalization and
       localization)


       DESCRIPTION
       PREPARING TO USE LOCALES
       USING LOCALES
           The use locale pragma
           The setlocale function
           Finding locales
           LOCALE PROBLEMS
           Temporarily fixing locale problems
           Permanently fixing locale problems
           Permanently fixing your system's locale configuration
           Fixing system locale configuration
           The localeconv function
           I18N::Langinfo
       LOCALE CATEGORIES
           Category LC_COLLATE: Collation
           Category LC_CTYPE: Character Types
           Category LC_NUMERIC: Numeric Formatting
           Category LC_MONETARY: Formatting of monetary amounts
           LC_TIME
           Other categories
       SECURITY
       ENVIRONMENT
           PERL_BADLANG, LC_ALL, LANGUAGE, LC_CTYPE, LC_COLLATE, LC_MONETARY,
           LC_NUMERIC, LC_TIME, LANG

           Examples
       NOTES
           Backward compatibility
           I18N:Collate obsolete
           Sort speed and memory use impacts
           write() and LC_NUMERIC
           Freely available locale definitions
           I18n and l10n
           An imperfect standard
       Unicode and UTF-8
       BUGS
           Broken systems
       SEE ALSO
       HISTORY

       perluniintro - Perl Unicode introduction


       DESCRIPTION
           Unicode
           Perl's Unicode Support
           Perl's Unicode Model
           Unicode and EBCDIC
           Creating Unicode
           Handling Unicode
           Legacy Encodings
           Unicode I/O
           Displaying Unicode As Text
           Special Cases
           Advanced Topics
           Miscellaneous
           Questions With Answers
           Hexadecimal Notation
           Further Resources
       UNICODE IN OLDER PERLS
       SEE ALSO
       ACKNOWLEDGMENTS
       AUTHOR, COPYRIGHT, AND LICENSE

       perlunicode - Unicode support in Perl


       DESCRIPTION
           Important Caveats
               Input and Output Layers, Regular Expressions, "use utf8" still
               needed to enable UTF-8/UTF-EBCDIC in scripts, BOM-marked
               scripts and UTF-16 scripts autodetected, "use encoding" needed
               to upgrade non-Latin-1 byte strings

           Byte and Character Semantics
           Effects of Character Semantics
           Unicode Character Properties
               General Category, Bidirectional Character Types, Scripts,
               Extended property classes, Use of "Is" Prefix, Blocks

           User-Defined Character Properties
           User-Defined Case Mappings
           Character Encodings for Input and Output
           Unicode Regular Expression Support Level
           Unicode Encodings
           Security Implications of Unicode
           Unicode in Perl on EBCDIC
           Locales
           When Unicode Does Not Happen
           Forcing Unicode in Perl (Or Unforcing Unicode in Perl)
           Using Unicode in XS
       BUGS
           Interaction with Locales
           Interaction with Extensions
           Speed
           Porting code from perl-5.6.X
       SEE ALSO

       perlunifaq - Perl Unicode FAQ


       Q and A
           perlunitut isn't really a Unicode tutorial, is it?
           What character encodings does Perl support?
           Which version of perl should I use?
           What about binary data, like images?
           When should I decode or encode?
           What if I don't decode?
           What if I don't encode?
           Is there a way to automatically decode or encode?
           What if I don't know which encoding was used?
           Can I use Unicode in my Perl sources?
           Data::Dumper doesn't restore the UTF8 flag; is it broken?
           Why do regex character classes sometimes match only in the ASCII
           range?
           Why do some characters not uppercase or lowercase correctly?
           How can I determine if a string is a text string or a binary
           string?
           How do I convert from encoding FOO to encoding BAR?
           What are "decode_utf8" and "encode_utf8"?
           What is a "wide character"?
       INTERNALS
           What is "the UTF8 flag"?
           What about the "use bytes" pragma?
           What about the "use encoding" pragma?
           What is the difference between ":encoding" and ":utf8"?
           What's the difference between "UTF-8" and "utf8"?
           I lost track; what encoding is the internal format really?
       AUTHOR
       SEE ALSO

       perlunitut - Perl Unicode Tutorial


       DESCRIPTION
           Definitions
           Your new toolkit
           I/O flow (the actual 5 minute tutorial)
       SUMMARY
       Q and A (or FAQ)
       ACKNOWLEDGEMENTS
       AUTHOR
       SEE ALSO

       perlebcdic - Considerations for running Perl on EBCDIC platforms


       DESCRIPTION
       COMMON CHARACTER CODE SETS
           ASCII
           ISO 8859
           Latin 1 (ISO 8859-1)
           EBCDIC
           13 variant characters
           0037
           1047
           POSIX-BC
           Unicode code points versus EBCDIC code points
           Remaining Perl Unicode problems in EBCDIC
           Unicode and UTF
           Using Encode
       SINGLE OCTET TABLES
           recipe 0, recipe 1, recipe 2, recipe 3, recipe 4, recipe 5, recipe
           6

       IDENTIFYING CHARACTER CODE SETS
       CONVERSIONS
           tr///
           iconv
           C RTL
       OPERATOR DIFFERENCES
       FUNCTION DIFFERENCES
           chr(), ord(), pack(), print(), printf(), sort(), sprintf(),
           unpack()

       REGULAR EXPRESSION DIFFERENCES
       SOCKETS
       SORTING
           Ignore ASCII vs. EBCDIC sort differences.
           MONO CASE then sort data.
           Convert, sort data, then re convert.
           Perform sorting on one type of machine only.
       TRANSFORMATION FORMATS
           URL decoding and encoding
           uu encoding and decoding
           Quoted-Printable encoding and decoding
           Caesarian ciphers
       Hashing order and checksums
       I18N AND L10N
       MULTI OCTET CHARACTER SETS
       OS ISSUES
           OS/400
               PASE, IFS access

           OS/390, z/OS
               chcp, dataset access, OS/390, z/OS iconv, locales

           VM/ESA?
           POSIX-BC?
       BUGS
       SEE ALSO
       REFERENCES
       HISTORY
       AUTHOR

       perlsec - Perl security


       DESCRIPTION
           Laundering and Detecting Tainted Data
           Switches On the "#!" Line
           Taint mode and @INC
           Cleaning Up Your Path
           Security Bugs
           Protecting Your Programs
           Unicode
           Algorithmic Complexity Attacks
       SEE ALSO

       perlmod - Perl modules (packages and symbol tables)


       DESCRIPTION
           Packages
           Symbol Tables
           BEGIN, UNITCHECK, CHECK, INIT and END
           Perl Classes
           Perl Modules
           Making your module threadsafe
       SEE ALSO

       perlmodlib - constructing new Perl modules and finding existing ones


       THE PERL MODULE LIBRARY
           Pragmatic Modules
               attributes, attrs, autouse, base, bigint, bignum, bigrat, blib,
               bytes, charnames, constant, diagnostics, encoding,
               encoding::warnings, feature, fields, filetest, if, integer,
               less, lib, locale, mro, open, ops, overload, re, sigtrap, sort,
               strict, subs, threads, threads::shared, utf8, vars, version,
               vmsish, warnings, warnings::register

           Standard Modules
               AnyDBM_File, Archive::Extract, Archive::Tar,
               Archive::Tar::File, Attribute::Handlers, AutoLoader, AutoSplit,
               B, B::Concise, B::Debug, B::Deparse, B::Lint, B::Showlex,
               B::Terse, B::Xref, Benchmark, CGI, CGI::Apache, CGI::Carp,
               CGI::Cookie, CGI::Fast, CGI::Pretty, CGI::Push, CGI::Switch,
               CGI::Util, CORE, CPAN, CPAN::API::HOWTO, CPAN::FirstTime,
               CPAN::Kwalify, CPAN::Nox, CPAN::Version, CPANPLUS,
               CPANPLUS::Dist::Base, CPANPLUS::Dist::Sample,
               CPANPLUS::Shell::Classic,
               CPANPLUS::Shell::Default::Plugins::HOWTO, Carp, Carp::Heavy,
               Class::ISA, Class::Struct, Compress::Raw::Zlib, Compress::Zlib,
               Config, Cwd, DB, DBM_Filter, DBM_Filter::compress,
               DBM_Filter::encode, DBM_Filter::int32, DBM_Filter::null,
               DBM_Filter::utf8, DB_File, Data::Dumper, Devel::DProf,
               Devel::InnerPackage, Devel::Peek, Devel::SelfStubber, Digest,
               Digest::MD5, Digest::SHA, Digest::base, Digest::file,
               DirHandle, Dumpvalue, DynaLoader, Encode, Encode::Alias,
               Encode::Byte, Encode::CJKConstants, Encode::CN, Encode::CN::HZ,
               Encode::Config, Encode::EBCDIC, Encode::Encoder,
               Encode::Encoding, Encode::GSM0338, Encode::Guess, Encode::JP,
               Encode::JP::H2Z, Encode::JP::JIS7, Encode::KR,
               Encode::KR::2022_KR, Encode::MIME::Header, Encode::MIME::Name,
               Encode::PerlIO, Encode::Supported, Encode::Symbol, Encode::TW,
               Encode::Unicode, Encode::Unicode::UTF7, English, Env, Errno,
               Exporter, Exporter::Heavy, ExtUtils::CBuilder,
               ExtUtils::CBuilder::Platform::Windows, ExtUtils::Command,
               ExtUtils::Command::MM, ExtUtils::Constant,
               ExtUtils::Constant::Base, ExtUtils::Constant::Utils,
               ExtUtils::Constant::XS, ExtUtils::Embed, ExtUtils::Install,
               ExtUtils::Installed, ExtUtils::Liblist, ExtUtils::MM,
               ExtUtils::MM_AIX, ExtUtils::MM_Any, ExtUtils::MM_BeOS,
               ExtUtils::MM_Cygwin, ExtUtils::MM_DOS, ExtUtils::MM_MacOS,
               ExtUtils::MM_NW5, ExtUtils::MM_OS2, ExtUtils::MM_QNX,
               ExtUtils::MM_UWIN, ExtUtils::MM_Unix, ExtUtils::MM_VMS,
               ExtUtils::MM_VOS, ExtUtils::MM_Win32, ExtUtils::MM_Win95,
               ExtUtils::MY, ExtUtils::MakeMaker, ExtUtils::MakeMaker::Config,
               ExtUtils::MakeMaker::FAQ, ExtUtils::MakeMaker::Tutorial,
               ExtUtils::MakeMaker::bytes, ExtUtils::MakeMaker::vmsish,
               ExtUtils::Manifest, ExtUtils::Mkbootstrap,
               ExtUtils::Mksymlists, ExtUtils::Packlist, ExtUtils::ParseXS,
               ExtUtils::testlib, Fatal, Fcntl, File::Basename,
               File::CheckTree, File::Compare, File::Copy, File::DosGlob,
               File::Fetch, File::Find, File::Glob, File::GlobMapper,
               File::Path, File::Spec, File::Spec::Cygwin, File::Spec::Epoc,
               File::Spec::Functions, File::Spec::Mac, File::Spec::OS2,
               File::Spec::Unix, File::Spec::VMS, File::Spec::Win32,
               File::Temp, File::stat, FileCache, FileHandle, Filter::Simple,
               Filter::Util::Call, FindBin, GDBM_File, Getopt::Long,
               Getopt::Std, Hash::Util, Hash::Util::FieldHash, I18N::Collate,
               I18N::LangTags, I18N::LangTags::Detect, I18N::LangTags::List,
               I18N::Langinfo, IO, IO::Compress::Base, IO::Compress::Deflate,
               IO::Compress::Gzip, IO::Compress::RawDeflate,
               IO::Compress::Zip, IO::Dir, IO::File, IO::Handle, IO::Pipe,
               IO::Poll, IO::Seekable, IO::Select, IO::Socket,
               IO::Socket::INET, IO::Socket::UNIX, IO::Uncompress::AnyInflate,
               IO::Uncompress::AnyUncompress, IO::Uncompress::Base,
               IO::Uncompress::Gunzip, IO::Uncompress::Inflate,
               IO::Uncompress::RawInflate, IO::Uncompress::Unzip, IO::Zlib,
               IPC::Cmd, IPC::Open2, IPC::Open3, IPC::SysV, IPC::SysV::Msg,
               IPC::SysV::Semaphore, List::Util, Locale::Constants,
               Locale::Country, Locale::Currency, Locale::Language,
               Locale::Maketext, Locale::Maketext::Simple,
               Locale::Maketext::TPJ13, Locale::Script, Log::Message,
               Log::Message::Config, Log::Message::Handlers,
               Log::Message::Item, MIME::Base64, MIME::QuotedPrint,
               Math::BigFloat, Math::BigInt, Math::BigInt::Calc,
               Math::BigInt::CalcEmu, Math::BigInt::FastCalc, Math::BigRat,
               Math::Complex, Math::Trig, Memoize, Memoize::AnyDBM_File,
               Memoize::Expire, Memoize::ExpireFile, Memoize::ExpireTest,
               Memoize::NDBM_File, Memoize::SDBM_File, Memoize::Storable,
               Module::Build, Module::Build::API, Module::Build::Authoring,
               Module::Build::Base, Module::Build::Compat,
               Module::Build::ConfigData, Module::Build::Cookbook,
               Module::Build::ModuleInfo, Module::Build::Notes,
               Module::Build::PPMMaker, Module::Build::Platform::Amiga,
               Module::Build::Platform::Default,
               Module::Build::Platform::EBCDIC,
               Module::Build::Platform::MPEiX, Module::Build::Platform::MacOS,
               Module::Build::Platform::RiscOS, Module::Build::Platform::Unix,
               Module::Build::Platform::VMS, Module::Build::Platform::VOS,
               Module::Build::Platform::Windows, Module::Build::Platform::aix,
               Module::Build::Platform::cygwin,
               Module::Build::Platform::darwin, Module::Build::Platform::os2,
               Module::Build::YAML, Module::CoreList, Module::Load,
               Module::Load::Conditional, Module::Loaded, Module::Pluggable,
               Module::Pluggable::Object, NDBM_File, NEXT, Net::Cmd,
               Net::Config, Net::Domain, Net::FTP, Net::NNTP, Net::Netrc,
               Net::POP3, Net::Ping, Net::SMTP, Net::Time, Net::hostent,
               Net::libnetFAQ, Net::netent, Net::protoent, Net::servent, O,
               ODBM_File, Opcode, POSIX, Package::Constants, Params::Check,
               PerlIO, PerlIO::encoding, PerlIO::scalar, PerlIO::via,
               PerlIO::via::QuotedPrint, Pod::Checker, Pod::Escapes,
               Pod::Find, Pod::Functions, Pod::Html, Pod::InputObjects,
               Pod::LaTeX, Pod::Man, Pod::ParseLink, Pod::ParseUtils,
               Pod::Parser, Pod::Perldoc::ToChecker, Pod::Perldoc::ToMan,
               Pod::Perldoc::ToNroff, Pod::Perldoc::ToPod,
               Pod::Perldoc::ToRtf, Pod::Perldoc::ToText, Pod::Perldoc::ToTk,
               Pod::Perldoc::ToXml, Pod::PlainText, Pod::Plainer, Pod::Select,
               Pod::Simple, Pod::Simple::Checker, Pod::Simple::Debug,
               Pod::Simple::DumpAsText, Pod::Simple::DumpAsXML,
               Pod::Simple::HTML, Pod::Simple::HTMLBatch,
               Pod::Simple::LinkSection, Pod::Simple::Methody,
               Pod::Simple::PullParser, Pod::Simple::PullParserEndToken,
               Pod::Simple::PullParserStartToken,
               Pod::Simple::PullParserTextToken, Pod::Simple::PullParserToken,
               Pod::Simple::RTF, Pod::Simple::Search, Pod::Simple::SimpleTree,
               Pod::Simple::Subclassing, Pod::Simple::Text,
               Pod::Simple::TextContent, Pod::Simple::XMLOutStream, Pod::Text,
               Pod::Text::Color, Pod::Text::Overstrike, Pod::Text::Termcap,
               Pod::Usage, SDBM_File, Safe, Scalar::Util, Search::Dict,
               SelectSaver, SelfLoader, Shell, Socket, Storable, Switch,
               Symbol, Sys::Hostname, Sys::Syslog, Sys::Syslog::win32::Win32,
               Term::ANSIColor, Term::Cap, Term::Complete, Term::ReadLine,
               Term::UI, Test, Test::Builder, Test::Builder::Module,
               Test::Builder::Tester, Test::Builder::Tester::Color,
               Test::Harness, Test::Harness::Assert, Test::Harness::Iterator,
               Test::Harness::Point, Test::Harness::Results,
               Test::Harness::Straps, Test::Harness::TAP, Test::Harness::Util,
               Test::More, Test::Simple, Test::Tutorial, Text::Abbrev,
               Text::Balanced, Text::ParseWords, Text::Soundex, Text::Tabs,
               Text::Wrap, Thread, Thread::Queue, Thread::Semaphore,
               Tie::Array, Tie::File, Tie::Handle, Tie::Hash,
               Tie::Hash::NamedCapture, Tie::Memoize, Tie::RefHash,
               Tie::Scalar, Tie::SubstrHash, Time::HiRes, Time::Local,
               Time::Piece, Time::Piece::Seconds, Time::gmtime,
               Time::localtime, Time::tm, UNIVERSAL, Unicode::Collate,
               Unicode::Normalize, Unicode::UCD, User::grent, User::pwent,
               Win32, Win32API::File, Win32CORE, XS::APItest, XS::Typemap,
               XSLoader

           Extension Modules
       CPAN
           Africa
               South Africa

           Asia
               China, Indonesia, Israel, Japan, Malaysia, Russian Federation,
               Saudi Arabia, Singapore, South Korea, Taiwan, Thailand

           Central America
               Costa Rica

           Europe
               Austria, Belgium, Bosnia and Herzegovina, Bulgaria, Croatia,
               Czech Republic, Denmark, Estonia, Finland, France, Germany,
               Greece, Hungary, Iceland, Ireland, Italy, Latvia, Lithuania,
               Netherlands, Norway, Poland, Portugal, Romania, Russia,
               Slovakia, Slovenia, Spain, Sweden, Switzerland, Turkey,
               Ukraine, United Kingdom

           North America
               Canada, Alberta, Manitoba, Nova Scotia, Ontario, Mexico, United
               States, Alabama, California, Colorado, Delaware, District of
               Columbia, Florida, Indiana, Kentucky, Massachusetts, Michigan,
               Nevada, New Jersey, New York, North Carolina, Oklahoma, Oregon,
               Pennsylvania, Tennessee, Texas, Utah, Virginia, Washington,
               Wisconsin

           Oceania
               Australia, New Zealand, United States

           South America
               Argentina, Brazil, Chile

           RSYNC Mirrors
       Modules: Creation, Use, and Abuse
           Guidelines for Module Creation
           Guidelines for Converting Perl 4 Library Scripts into Modules
           Guidelines for Reusing Application Code
       NOTE

       perlmodstyle - Perl module style guide


       INTRODUCTION
       QUICK CHECKLIST
           Before you start
           The API
           Stability
           Documentation
           Release considerations
       BEFORE YOU START WRITING A MODULE
           Has it been done before?
           Do one thing and do it well
           What's in a name?
       DESIGNING AND WRITING YOUR MODULE
           To OO or not to OO?
           Designing your API
               Write simple routines to do simple things, Separate
               functionality from output, Provide sensible shortcuts and
               defaults, Naming conventions, Parameter passing

           Strictness and warnings
           Backwards compatibility
           Error handling and messages
       DOCUMENTING YOUR MODULE
           POD
           README, INSTALL, release notes, changelogs
               perl Makefile.PL, make, make test, make install, perl Build.PL,
               perl Build, perl Build test, perl Build install

       RELEASE CONSIDERATIONS
           Version numbering
           Pre-requisites
           Testing
           Packaging
           Licensing
       COMMON PITFALLS
           Reinventing the wheel
           Trying to do too much
           Inappropriate documentation
       SEE ALSO
           perlstyle, perlnewmod, perlpod, podchecker, Packaging Tools,
           Testing tools, http://pause.perl.org/, Any good book on software
           engineering

       AUTHOR

       perlmodinstall - Installing CPAN Modules

       DESCRIPTION
           PREAMBLE
               DECOMPRESS the file, UNPACK the file into a directory, BUILD
               the module (sometimes unnecessary), INSTALL the module

       PORTABILITY
       HEY
       AUTHOR
       COPYRIGHT

       perlnewmod - preparing a new module for distribution


       DESCRIPTION
           Warning
           What should I make into a module?
           Step-by-step: Preparing the ground
               Look around, Check it's new, Discuss the need, Choose a name,
               Check again

           Step-by-step: Making the module
               Start with module-starter or h2xs, Use strict and warnings, Use
               Carp, Use Exporter - wisely!, Use plain old documentation,
               Write tests, Write the README

           Step-by-step: Distributing your module
               Get a CPAN user ID, "perl Makefile.PL; make test; make dist",
               Upload the tarball, Announce to the modules list, Announce to
               clpa, Fix bugs!

       AUTHOR
       SEE ALSO

       perlpragma - how to write a user pragma


       DESCRIPTION
       A basic example
       Implementation details

       perlutil - utilities packaged with the Perl distribution


       DESCRIPTION
       LIST OF UTILITIES
           Documentation
               perldoc, pod2man and pod2text, pod2html and pod2latex,
               pod2usage, podselect, podchecker, splain, roffitall

           Convertors
               a2p, s2p and psed, find2perl

           Administration
               config_data, libnetcfg, perlivp

           Development
               perlbug, h2ph, c2ph and pstruct, h2xs, enc2xs, xsubpp, dprofpp,
               prove, corelist

           General tools
               piconv, ptar, ptardiff, shasum

           Installation
               cpan, cpanp, cpan2dist, instmodsh

       SEE ALSO

       perlcompile - Introduction to the Perl Compiler-Translator

       DESCRIPTION
           Layout
               B::Lint, B::Deparse, B::Xref

       Using The Back Ends
           The Cross Referencing Back End
               i, &, s, r

           The Decompiling Back End
           The Lint Back End
       Module List for the Compiler Suite
           B, O, B::Concise, B::Debug, B::Deparse, B::Lint, B::Showlex,
           B::Terse, B::Xref

       KNOWN PROBLEMS
       AUTHOR

       perlfilter - Source Filters


       DESCRIPTION
       CONCEPTS
       USING FILTERS
       WRITING A SOURCE FILTER
       WRITING A SOURCE FILTER IN C
           Decryption Filters

       CREATING A SOURCE FILTER AS A SEPARATE EXECUTABLE
       WRITING A SOURCE FILTER IN PERL
       USING CONTEXT: THE DEBUG FILTER
       CONCLUSION
       THINGS TO LOOK OUT FOR
           Some Filters Clobber the "DATA" Handle

       REQUIREMENTS
       AUTHOR
       Copyrights

       perlglossary - Perl Glossary


       DESCRIPTION
           A   accessor methods, actual arguments, address operator,
               algorithm, alias, alternatives, anonymous, architecture,
               argument, ARGV, arithmetical operator, array, array context,
               ASCII, assertion, assignment, assignment operator, associative
               array, associativity, asynchronous, atom, atomic operation,
               attribute, autogeneration, autoincrement, autoload, autosplit,
               autovivification, AV, awk

           B   backreference, backtracking, backward compatibility, bareword,
               base class, big-endian, binary, binary operator, bind, bit, bit
               shift, bit string, bless, block, BLOCK, block buffering,
               Boolean, Boolean context, breakpoint, broadcast, BSD, bucket,
               buffer, built-in, bundle, byte, bytecode

           C   C, C preprocessor, call by reference, call by value, callback,
               canonical, capturing, character, character class, character
               property, circumfix operator, class, class method, client,
               cloister, closure, cluster, CODE, code generator, code
               subpattern, collating sequence, command, command buffering,
               command name, command-line arguments, comment, compilation
               unit, compile phase, compile time, compiler, composer,
               concatenation, conditional, connection, construct, constructor,
               context, continuation, core dump, CPAN, cracker, current
               package, current working directory, currently selected output
               channel, CV

           D   dangling statement, data structure, data type, datagram, DBM,
               declaration, decrement, default, defined, delimiter, deprecated
               modules and features, dereference, derived class, descriptor,
               destroy, destructor, device, directive, directory, directory
               handle, dispatch, distribution, (to be) dropped modules,
               dweomer, dwimmer, dynamic scoping

           E   eclectic, element, embedding, empty subclass test, en passant,
               encapsulation, endian, environment, environment variable, EOF,
               errno, error, escape sequence, exception, exception handling,
               exec, executable file, execute, execute bit, exit status,
               export, expression, extension

           F   false, FAQ, fatal error, field, FIFO, file, file descriptor,
               file test operator, fileglob, filehandle, filename, filesystem,
               filter, flag, floating point, flush, FMTEYEWTK, fork, formal
               arguments, format, freely available, freely redistributable,
               freeware, function, funny character, garbage collection

           G   GID, glob, global, global destruction, glue language,
               granularity, greedy, grep, group, GV

           H   hacker, handler, hard reference, hash, hash table, header file,
               here document, hexadecimal, home directory, host, hubris, HV

           I   identifier, impatience, implementation, import, increment,
               indexing, indirect filehandle, indirect object, indirect object
               slot, indirection, infix, inheritance, instance, instance
               variable, integer, interface, interpolation, interpreter,
               invocant, invocation, I/O, IO, IP, IPC, is-a, iteration,
               iterator, IV

           J   JAPH

           K   key, keyword

           L   label, laziness, left shift, leftmost longest, lexeme, lexer,
               lexical analysis, lexical scoping, lexical variable, library,
               LIFO, line, line buffering, line number, link, LIST, list, list
               context, list operator, list value, literal, little-endian,
               local, logical operator, lookahead, lookbehind, loop, loop
               control statement, loop label, lvaluable, lvalue, lvalue
               modifier

           M   magic, magical increment, magical variables, Makefile, man,
               manpage, matching, member data, memory, metacharacter,
               metasymbol, method, minimalism, mode, modifier, module,
               modulus, monger, mortal, multidimensional array, multiple
               inheritance

           N   named pipe, namespace, network address, newline, NFS, null
               character, null list, null string, numeric context, NV, nybble

           O   object, octal, offset, one-liner, open source software,
               operand, operating system, operator, operator overloading,
               options, overloading, overriding, owner

           P   package, pad, parameter, parent class, parse tree, parsing,
               patch, PATH, pathname, pattern, pattern matching, permission
               bits, Pern, pipe, pipeline, platform, pod, pointer,
               polymorphism, port, portable, porter, POSIX, postfix, pp,
               pragma, precedence, prefix, preprocessing, procedure, process,
               program generator, progressive matching, property, protocol,
               prototype, pseudofunction, pseudohash, pseudoliteral, public
               domain, pumpkin, pumpking, PV

           Q   qualified, quantifier

           R   readable, reaping, record, recursion, reference, referent,
               regex, regular expression, regular expression modifier, regular
               file, relational operator, reserved words, return value, RFC,
               right shift, root, RTFM, run phase, run time, run-time pattern,
               RV, rvalue

           S   scalar, scalar context, scalar literal, scalar value, scalar
               variable, scope, scratchpad, script, script kiddie, sed,
               semaphore, separator, serialization, server, service, setgid,
               setuid, shared memory, shebang, shell, side effects, signal,
               signal handler, single inheritance, slice, slurp, socket, soft
               reference, source filter, stack, standard, standard error,
               standard I/O, standard input, standard output, stat structure,
               statement, statement modifier, static, static method, static
               scoping, static variable, status, STDERR, STDIN, STDIO, STDOUT,
               stream, string, string context, stringification, struct,
               structure, subclass, subpattern, subroutine, subscript,
               substitution, substring, superclass, superuser, SV, switch,
               switch cluster, switch statement, symbol, symbol table,
               symbolic debugger, symbolic link, symbolic reference,
               synchronous, syntactic sugar, syntax, syntax tree, syscall

           T   tainted, TCP, term, terminator, ternary, text, thread, tie,
               TMTOWTDI, token, tokener, tokenizing, toolbox approach,
               transliterate, trigger, trinary, troff, true, truncating, type,
               type casting, typed lexical, typedef, typeglob, typemap

           U   UDP, UID, umask, unary operator, Unicode, Unix

           V   value, variable, variable interpolation, variadic, vector,
               virtual, void context, v-string

           W   warning, watch expression, whitespace, word, working directory,
               wrapper, WYSIWYG

           X   XS, XSUB

           Y   yacc

           Z   zero width, zombie

       AUTHOR AND COPYRIGHT

       perlembed - how to embed perl in your C program

       DESCRIPTION
           PREAMBLE
               Use C from Perl?, Use a Unix program from Perl?, Use Perl from
               Perl?, Use C from C?, Use Perl from C?

           ROADMAP
           Compiling your C program
           Adding a Perl interpreter to your C program
           Calling a Perl subroutine from your C program
           Evaluating a Perl statement from your C program
           Performing Perl pattern matches and substitutions from your C
           program
           Fiddling with the Perl stack from your C program
           Maintaining a persistent interpreter
           Execution of END blocks
           $0 assignments
           Maintaining multiple interpreter instances
           Using Perl modules, which themselves use C libraries, from your C
           program
       Embedding Perl under Win32
       Hiding Perl_
       MORAL
       AUTHOR
       COPYRIGHT

       perldebguts - Guts of Perl debugging


       DESCRIPTION
       Debugger Internals
           Writing Your Own Debugger
       Frame Listing Output Examples
       Debugging regular expressions
           Compile-time output
               "anchored" STRING "at" POS, "floating" STRING "at" POS1..POS2,
               "matching floating/anchored", "minlen", "stclass" TYPE,
               "noscan", "isall", "GPOS", "plus", "implicit", "with eval",
               "anchored(TYPE)"

           Types of nodes
           Run-time output
       Debugging Perl memory usage
           Using $ENV{PERL_DEBUG_MSTATS}
               "buckets SMALLEST(APPROX)..GREATEST(APPROX)", Free/Used, "Total
               sbrk(): SBRKed/SBRKs:CONTINUOUS", "pad: 0", "heads: 2192",
               "chain: 0", "tail: 6144"

       SEE ALSO

       perlxstut, perlXStut - Tutorial for writing XSUBs

       DESCRIPTION
       SPECIAL NOTES
           make
           Version caveat
           Dynamic Loading versus Static Loading
       TUTORIAL
           EXAMPLE 1
           EXAMPLE 2
           What has gone on?
           Writing good test scripts
           EXAMPLE 3
           What's new here?
           Input and Output Parameters
           The XSUBPP Program
           The TYPEMAP file
           Warning about Output Arguments
           EXAMPLE 4
           What has happened here?
           Anatomy of .xs file
           Getting the fat out of XSUBs
           More about XSUB arguments
           The Argument Stack
           Extending your Extension
           Documenting your Extension
           Installing your Extension
           EXAMPLE 5
           New Things in this Example
           EXAMPLE 6
           New Things in this Example
           EXAMPLE 7 (Coming Soon)
           EXAMPLE 8 (Coming Soon)
           EXAMPLE 9 Passing open files to XSes
           Troubleshooting these Examples
       See also
       Author
           Last Changed

       perlxs - XS language reference manual


       DESCRIPTION
           Introduction
           On The Road
           The Anatomy of an XSUB
           The Argument Stack
           The RETVAL Variable
           Returning SVs, AVs and HVs through RETVAL
           The MODULE Keyword
           The PACKAGE Keyword
           The PREFIX Keyword
           The OUTPUT: Keyword
           The NO_OUTPUT Keyword
           The CODE: Keyword
           The INIT: Keyword
           The NO_INIT Keyword
           Initializing Function Parameters
           Default Parameter Values
           The PREINIT: Keyword
           The SCOPE: Keyword
           The INPUT: Keyword
           The IN/OUTLIST/IN_OUTLIST/OUT/IN_OUT Keywords
           The "length(NAME)" Keyword
           Variable-length Parameter Lists
           The C_ARGS: Keyword
           The PPCODE: Keyword
           Returning Undef And Empty Lists
           The REQUIRE: Keyword
           The CLEANUP: Keyword
           The POSTCALL: Keyword
           The BOOT: Keyword
           The VERSIONCHECK: Keyword
           The PROTOTYPES: Keyword
           The PROTOTYPE: Keyword
           The ALIAS: Keyword
           The OVERLOAD: Keyword
           The FALLBACK: Keyword
           The INTERFACE: Keyword
           The INTERFACE_MACRO: Keyword
           The INCLUDE: Keyword
           The CASE: Keyword
           The & Unary Operator
           Inserting POD, Comments and C Preprocessor Directives
           Using XS With C++
           Interface Strategy
           Perl Objects And C Structures
           The Typemap
           Safely Storing Static Data in XS
               MY_CXT_KEY, typedef my_cxt_t, START_MY_CXT, MY_CXT_INIT,
               dMY_CXT, MY_CXT, aMY_CXT/pMY_CXT, MY_CXT_CLONE,
               MY_CXT_INIT_INTERP(my_perl), dMY_CXT_INTERP(my_perl)

           Thread-aware system interfaces
       EXAMPLES
       XS VERSION
       AUTHOR

       perlclib - Internal replacements for standard C library functions


       DESCRIPTION
           Conventions
               "t", "p", "n", "s"

           File Operations
           File Input and Output
           File Positioning
           Memory Management and String Handling
           Character Class Tests
           stdlib.h functions
           Miscellaneous functions
       SEE ALSO

       perlguts - Introduction to the Perl API


       DESCRIPTION
       Variables
           Datatypes
           What is an "IV"?
           Working with SVs
           Offsets
           What's Really Stored in an SV?
           Working with AVs
           Working with HVs
           Hash API Extensions
           AVs, HVs and undefined values
           References
           Blessed References and Class Objects
           Creating New Variables
               GV_ADDMULTI, GV_ADDWARN

           Reference Counts and Mortality
           Stashes and Globs
           Double-Typed SVs
           Magic Variables
           Assigning Magic
           Magic Virtual Tables
           Finding Magic
           Understanding the Magic of Tied Hashes and Arrays
           Localizing changes
               "SAVEINT(int i)", "SAVEIV(IV i)", "SAVEI32(I32 i)",
               "SAVELONG(long i)", SAVESPTR(s), SAVEPPTR(p), "SAVEFREESV(SV
               *sv)", "SAVEMORTALIZESV(SV *sv)", "SAVEFREEOP(OP *op)",
               SAVEFREEPV(p), "SAVECLEARSV(SV *sv)", "SAVEDELETE(HV *hv, char
               *key, I32 length)", "SAVEDESTRUCTOR(DESTRUCTORFUNC_NOCONTEXT_t
               f, void *p)", "SAVEDESTRUCTOR_X(DESTRUCTORFUNC_t f, void *p)",
               "SAVESTACK_POS()", "SV* save_scalar(GV *gv)", "AV* save_ary(GV
               *gv)", "HV* save_hash(GV *gv)", "void save_item(SV *item)",
               "void save_list(SV **sarg, I32 maxsarg)", "SV* save_svref(SV
               **sptr)", "void save_aptr(AV **aptr)", "void save_hptr(HV
               **hptr)"

       Subroutines
           XSUBs and the Argument Stack
           Calling Perl Routines from within C Programs
           Memory Allocation
           PerlIO
           Putting a C value on Perl stack
           Scratchpads
           Scratchpads and recursion
       Compiled code
           Code tree
           Examining the tree
           Compile pass 1: check routines
           Compile pass 1a: constant folding
           Compile pass 2: context propagation
           Compile pass 3: peephole optimization
           Pluggable runops
       Examining internal data structures with the "dump" functions
       How multiple interpreters and concurrency are supported
           Background and PERL_IMPLICIT_CONTEXT
           So what happened to dTHR?
           How do I use all this in extensions?
           Should I do anything special if I call perl from multiple threads?
           Future Plans and PERL_IMPLICIT_SYS
       Internal Functions
           A, p, d, s, n, r, f, M, o, x, m, X, E, b, others

           Formatted Printing of IVs, UVs, and NVs
           Pointer-To-Integer and Integer-To-Pointer
           Exception Handling
           Source Documentation
           Backwards compatibility
       Unicode Support
           What is Unicode, anyway?
           How can I recognise a UTF-8 string?
           How does UTF-8 represent Unicode characters?
           How does Perl store UTF-8 strings?
           How do I convert a string to UTF-8?
           Is there anything else I need to know?
       Custom Operators
       AUTHORS
       SEE ALSO

       perlcall - Perl calling conventions from C


       DESCRIPTION
           An Error Handler, An Event Driven Program

       THE CALL_ FUNCTIONS
           call_sv, call_pv, call_method, call_argv

       FLAG VALUES
           G_VOID
           G_SCALAR
           G_ARRAY
           G_DISCARD
           G_NOARGS
           G_EVAL
           G_KEEPERR
           Determining the Context
       EXAMPLES
           No Parameters, Nothing returned
           Passing Parameters
           Returning a Scalar
           Returning a list of values
           Returning a list in a scalar context
           Returning Data from Perl via the parameter list
           Using G_EVAL
           Using G_KEEPERR
           Using call_sv
           Using call_argv
           Using call_method
           Using GIMME_V
           Using Perl to dispose of temporaries
           Strategies for storing Callback Context Information
               1. Ignore the problem - Allow only 1 callback, 2. Create a
               sequence of callbacks - hard wired limit, 3. Use a parameter to
               map to the Perl callback

           Alternate Stack Manipulation
           Creating and calling an anonymous subroutine in C
       LIGHTWEIGHT CALLBACKS
       SEE ALSO
       AUTHOR
       DATE

       perlreapi - perl regular expression plugin interface


       DESCRIPTION
       Callbacks
           comp
               "/m" - RXf_PMf_MULTILINE, "/s" - RXf_PMf_SINGLELINE, "/i" -
               RXf_PMf_FOLD, "/x" - RXf_PMf_EXTENDED, "/p" - RXf_PMf_KEEPCOPY,
               RXf_PMf_LOCALE, RXf_UTF8, RXf_SPLIT, RXf_SKIPWHITE,
               RXf_START_ONLY, RXf_WHITE, RXf_NULL

           exec
           intuit
           checkstr
           free
           Numbered capture callbacks
           Named capture callbacks
           qr_package
           dupe
       The REGEXP structure
           "engine"
           "mother_re"
           "extflags"
           "minlen" "minlenret"
           "gofs"
           "substrs"
           "nparens", "lasparen", and "lastcloseparen"
           "intflags"
           "pprivate"
           "swap"
           "offs"
           "precomp" "prelen"
           "paren_names"
           "substrs"
           "subbeg" "sublen" "saved_copy"
           "wrapped" "wraplen"
           "seen_evals"
           "refcnt"
       HISTORY
       AUTHORS
       LICENSE

       perlreguts - Description of the Perl regular expression engine.


       DESCRIPTION
       OVERVIEW
           A quick note on terms
           What is a regular expression engine?
           Structure of a Regexp Program
               "regnode_1", "regnode_2", "regnode_string",
               "regnode_charclass", "regnode_charclass_class"

       Process Overview
           A. Compilation, 1. Parsing for size, 2. Parsing for construction,
           3.  Peep-hole optimisation and analysis, B. Execution, 4. Start
           position and no-match optimisations, 5. Program execution

           Compilation
               anchored fixed strings, floating fixed strings, minimum and
               maximum length requirements, start class, Beginning/End of line
               positions

           Execution
       MISCELLANEOUS
           Unicode and Localisation Support
           Base Structures
               "swap", "offsets", "regstclass", "data", "program"

       SEE ALSO
       AUTHOR
       LICENCE
       REFERENCES

       perlapi - autogenerated documentation for the perl public API


       DESCRIPTION
       "Gimme" Values
           GIMME , GIMME_V , G_ARRAY , G_DISCARD , G_EVAL , G_NOARGS ,
           G_SCALAR , G_VOID

       Array Manipulation Functions
           AvFILL , av_clear , av_create_and_push , av_create_and_unshift_one
           , av_delete , av_exists , av_extend , av_fetch , av_fill , av_len ,
           av_make , av_pop , av_push , av_shift , av_store , av_undef ,
           av_unshift , get_av , newAV , sortsv , sortsv_flags

       Callback Functions
           call_argv , call_method , call_pv , call_sv , ENTER , eval_pv ,
           eval_sv , FREETMPS , LEAVE , SAVETMPS

       Character classes
           isALNUM , isALPHA , isDIGIT , isLOWER , isSPACE , isUPPER , toLOWER
           , toUPPER

       Cloning an interpreter
           perl_clone

       CV Manipulation Functions
           CvSTASH , get_cv , get_cvn_flags

       Embedding Functions
           cv_undef , load_module , nothreadhook , perl_alloc , perl_construct
           , perl_destruct , perl_free , perl_parse , perl_run , require_pv

       Functions in file dump.c
           pv_display , pv_escape , pv_pretty

       Functions in file mathoms.c
           gv_fetchmethod , pack_cat , sv_2pvbyte_nolen , sv_2pvutf8_nolen ,
           sv_2pv_nolen , sv_catpvn_mg , sv_catsv_mg , sv_force_normal , sv_iv
           , sv_nolocking , sv_nounlocking , sv_nv , sv_pv , sv_pvbyte ,
           sv_pvbyten , sv_pvn , sv_pvutf8 , sv_pvutf8n , sv_taint , sv_unref
           , sv_usepvn , sv_usepvn_mg , sv_uv , unpack_str

       Functions in file pp_ctl.c
           find_runcv

       Functions in file pp_pack.c
           packlist , unpackstring

       GV Functions
           GvSV , gv_const_sv , gv_fetchmeth , gv_fetchmethod_autoload ,
           gv_fetchmeth_autoload , gv_stashpv , gv_stashpvn , gv_stashpvs ,
           gv_stashsv

       Handy Values
           Nullav , Nullch , Nullcv , Nullhv , Nullsv

       Hash Manipulation Functions
           get_hv , HEf_SVKEY , HeHASH , HeKEY , HeKLEN , HePV , HeSVKEY ,
           HeSVKEY_force , HeSVKEY_set , HeVAL , HvNAME , hv_assert , hv_clear
           , hv_clear_placeholders , hv_delete , hv_delete_ent , hv_exists ,
           hv_exists_ent , hv_fetch , hv_fetchs , hv_fetch_ent , hv_iterinit ,
           hv_iterkey , hv_iterkeysv , hv_iternext , hv_iternextsv ,
           hv_iternext_flags , hv_iterval , hv_magic , hv_scalar , hv_store ,
           hv_stores , hv_store_ent , hv_undef , newHV

       Magical Functions
           mg_clear , mg_copy , mg_find , mg_free , mg_get , mg_length ,
           mg_magical , mg_set , SvGETMAGIC , SvLOCK , SvSETMAGIC ,
           SvSetMagicSV , SvSetMagicSV_nosteal , SvSetSV , SvSetSV_nosteal ,
           SvSHARE , SvUNLOCK

       Memory Management
           Copy , CopyD , Move , MoveD , Newx , Newxc , Newxz , Poison ,
           PoisonFree , PoisonNew , PoisonWith , Renew , Renewc , Safefree ,
           savepv , savepvn , savepvs , savesharedpv , savesharedpvn ,
           savesvpv , StructCopy , Zero , ZeroD

       Miscellaneous Functions
           fbm_compile , fbm_instr , form , getcwd_sv , my_snprintf ,
           my_sprintf , my_vsnprintf , new_version , scan_version , strEQ ,
           strGE , strGT , strLE , strLT , strNE , strnEQ , strnNE ,
           sv_destroyable , sv_nosharing , upg_version , vcmp , vnormal ,
           vnumify , vstringify , vverify

       MRO Functions
           mro_get_linear_isa , mro_method_changed_in

       Multicall Functions
           dMULTICALL , MULTICALL , POP_MULTICALL , PUSH_MULTICALL

       Numeric functions
           grok_bin , grok_hex , grok_number , grok_numeric_radix , grok_oct ,
           Perl_signbit , scan_bin , scan_hex , scan_oct

       Optree Manipulation Functions
           cv_const_sv , newCONSTSUB , newXS

       Pad Data Structures
           pad_sv

       Per-Interpreter Variables
           PL_modglobal , PL_na , PL_sv_no , PL_sv_undef , PL_sv_yes

       REGEXP Functions
           SvRX , SvRXOK

       Simple Exception Handling Macros
           dXCPT , XCPT_CATCH , XCPT_RETHROW , XCPT_TRY_END , XCPT_TRY_START

       Stack Manipulation Macros
           dMARK , dORIGMARK , dSP , EXTEND , MARK , mPUSHi , mPUSHn , mPUSHp
           , mPUSHu , mXPUSHi , mXPUSHn , mXPUSHp , mXPUSHu , ORIGMARK , POPi
           , POPl , POPn , POPp , POPpbytex , POPpx , POPs , PUSHi , PUSHMARK
           , PUSHmortal , PUSHn , PUSHp , PUSHs , PUSHu , PUTBACK , SP ,
           SPAGAIN , XPUSHi , XPUSHmortal , XPUSHn , XPUSHp , XPUSHs , XPUSHu
           , XSRETURN , XSRETURN_EMPTY , XSRETURN_IV , XSRETURN_NO ,
           XSRETURN_NV , XSRETURN_PV , XSRETURN_UNDEF , XSRETURN_UV ,
           XSRETURN_YES , XST_mIV , XST_mNO , XST_mNV , XST_mPV , XST_mUNDEF ,
           XST_mYES

       SV Flags
           svtype , SVt_IV , SVt_NV , SVt_PV , SVt_PVAV , SVt_PVCV , SVt_PVHV
           , SVt_PVMG

       SV Manipulation Functions
           get_sv , newRV_inc , SvCUR , SvCUR_set , SvEND , SvGAMAGIC , SvGROW
           , SvIOK , SvIOKp , SvIOK_notUV , SvIOK_off , SvIOK_on , SvIOK_only
           , SvIOK_only_UV , SvIOK_UV , SvIsCOW , SvIsCOW_shared_hash , SvIV ,
           SvIVX , SvIVx , SvIV_nomg , SvIV_set , SvLEN , SvLEN_set ,
           SvMAGIC_set , SvNIOK , SvNIOKp , SvNIOK_off , SvNOK , SvNOKp ,
           SvNOK_off , SvNOK_on , SvNOK_only , SvNV , SvNVX , SvNVx , SvNV_set
           , SvOK , SvOOK , SvPOK , SvPOKp , SvPOK_off , SvPOK_on , SvPOK_only
           , SvPOK_only_UTF8 , SvPV , SvPVbyte , SvPVbytex , SvPVbytex_force ,
           SvPVbyte_force , SvPVbyte_nolen , SvPVutf8 , SvPVutf8x ,
           SvPVutf8x_force , SvPVutf8_force , SvPVutf8_nolen , SvPVX , SvPVx ,
           SvPV_force , SvPV_force_nomg , SvPV_nolen , SvPV_nomg , SvPV_set ,
           SvREFCNT , SvREFCNT_dec , SvREFCNT_inc , SvREFCNT_inc_NN ,
           SvREFCNT_inc_simple , SvREFCNT_inc_simple_NN ,
           SvREFCNT_inc_simple_void , SvREFCNT_inc_simple_void_NN ,
           SvREFCNT_inc_void , SvREFCNT_inc_void_NN , SvROK , SvROK_off ,
           SvROK_on , SvRV , SvRV_set , SvSTASH , SvSTASH_set , SvTAINT ,
           SvTAINTED , SvTAINTED_off , SvTAINTED_on , SvTRUE , SvTYPE , SvUOK
           , SvUPGRADE , SvUTF8 , SvUTF8_off , SvUTF8_on , SvUV , SvUVX ,
           SvUVx , SvUV_nomg , SvUV_set , SvVOK , sv_catpvn_nomg ,
           sv_catsv_nomg , sv_derived_from , sv_does , sv_report_used ,
           sv_setsv_nomg

       SV-Body Allocation
           looks_like_number , newRV_noinc , newSV , newSVhek , newSViv ,
           newSVnv , newSVpv , newSVpvf , newSVpvn , newSVpvn_share , newSVpvs
           , newSVpvs_share , newSVrv , newSVsv , newSVuv , newSV_type ,
           sv_2bool , sv_2cv , sv_2io , sv_2iv_flags , sv_2mortal , sv_2nv ,
           sv_2pvbyte , sv_2pvutf8 , sv_2pv_flags , sv_2uv_flags , sv_backoff
           , sv_bless , sv_catpv , sv_catpvf , sv_catpvf_mg , sv_catpvn ,
           sv_catpvn_flags , sv_catpvs , sv_catpv_mg , sv_catsv ,
           sv_catsv_flags , sv_chop , sv_clear , sv_cmp , sv_cmp_locale ,
           sv_collxfrm , sv_copypv , sv_dec , sv_eq , sv_force_normal_flags ,
           sv_free , sv_gets , sv_grow , sv_inc , sv_insert , sv_isa ,
           sv_isobject , sv_len , sv_len_utf8 , sv_magic , sv_magicext ,
           sv_mortalcopy , sv_newmortal , sv_newref , sv_pos_b2u , sv_pos_u2b
           , sv_pvbyten_force , sv_pvn_force , sv_pvn_force_flags ,
           sv_pvutf8n_force , sv_reftype , sv_replace , sv_reset , sv_rvweaken
           , sv_setiv , sv_setiv_mg , sv_setnv , sv_setnv_mg , sv_setpv ,
           sv_setpvf , sv_setpvf_mg , sv_setpviv , sv_setpviv_mg , sv_setpvn ,
           sv_setpvn_mg , sv_setpvs , sv_setpv_mg , sv_setref_iv ,
           sv_setref_nv , sv_setref_pv , sv_setref_pvn , sv_setref_uv ,
           sv_setsv , sv_setsv_flags , sv_setsv_mg , sv_setuv , sv_setuv_mg ,
           sv_tainted , sv_true , sv_unmagic , sv_unref_flags , sv_untaint ,
           sv_upgrade , sv_usepvn_flags , sv_utf8_decode , sv_utf8_downgrade ,
           sv_utf8_encode , sv_utf8_upgrade , sv_utf8_upgrade_flags ,
           sv_vcatpvf , sv_vcatpvfn , sv_vcatpvf_mg , sv_vsetpvf , sv_vsetpvfn
           , sv_vsetpvf_mg

       Unicode Support
           bytes_from_utf8 , bytes_to_utf8 , ibcmp_utf8 , is_utf8_char ,
           is_utf8_string , is_utf8_string_loc , is_utf8_string_loclen ,
           pv_uni_display , sv_cat_decode , sv_recode_to_utf8 , sv_uni_display
           , to_utf8_case , to_utf8_fold , to_utf8_lower , to_utf8_title ,
           to_utf8_upper , utf8n_to_uvchr , utf8n_to_uvuni , utf8_distance ,
           utf8_hop , utf8_length , utf8_to_bytes , utf8_to_uvchr ,
           utf8_to_uvuni , uvchr_to_utf8 , uvuni_to_utf8_flags

       Variables created by "xsubpp" and "xsubpp" internal functions
           ax , CLASS , dAX , dAXMARK , dITEMS , dUNDERBAR , dXSARGS , dXSI32
           , items , ix , newXSproto , RETVAL , ST , THIS , UNDERBAR , XS ,
           XS_VERSION , XS_VERSION_BOOTCHECK

       Warning and Dieing
           croak , warn

       AUTHORS
       SEE ALSO

       perlintern - autogenerated documentation of purely internal Perl
       functions


       DESCRIPTION
       CV reference counts and CvOUTSIDE
           CvWEAKOUTSIDE

       Functions in file pad.h
           CX_CURPAD_SAVE , CX_CURPAD_SV , PAD_BASE_SV , PAD_CLONE_VARS ,
           PAD_COMPNAME_FLAGS , PAD_COMPNAME_GEN , PAD_COMPNAME_GEN_set ,
           PAD_COMPNAME_OURSTASH , PAD_COMPNAME_PV , PAD_COMPNAME_TYPE ,
           PAD_DUP , PAD_RESTORE_LOCAL , PAD_SAVE_LOCAL , PAD_SAVE_SETNULLPAD
           , PAD_SETSV , PAD_SET_CUR , PAD_SET_CUR_NOSAVE , PAD_SV , PAD_SVl ,
           SAVECLEARSV , SAVECOMPPAD , SAVEPADSV

       GV Functions
           is_gv_magical , is_gv_magical_sv

       Hash Manipulation Functions
           refcounted_he_chain_2hv , refcounted_he_free , refcounted_he_new

       IO Functions
           start_glob

       Magical Functions
           magic_sethint , mg_localize

       MRO Functions
           mro_get_linear_isa_c3 , mro_get_linear_isa_dfs , mro_isa_changed_in

       Pad Data Structures
           CvPADLIST , cv_clone , cv_dump , do_dump_pad , intro_my ,
           pad_add_anon , pad_add_name , pad_alloc , pad_block_start ,
           pad_check_dup , pad_findlex , pad_findmy , pad_fixup_inner_anons ,
           pad_free , pad_leavemy , pad_new , pad_push , pad_reset , pad_setsv
           , pad_swipe , pad_tidy , pad_undef

       Per-Interpreter Variables
           PL_DBsingle , PL_DBsub , PL_DBtrace , PL_dowarn , PL_last_in_gv ,
           PL_ofs_sv , PL_rs

       Stack Manipulation Macros
           djSP , LVRET

       SV Manipulation Functions
           sv_add_arena , sv_clean_all , sv_clean_objs , sv_free_arenas

       SV-Body Allocation
           sv_2num

       Unicode Support
           find_uninit_var , report_uninit

       AUTHORS
       SEE ALSO

       perliol - C API for Perl's implementation of IO in Layers.


       SYNOPSIS
       DESCRIPTION
           History and Background
           Basic Structure
           Layers vs Disciplines
           Data Structures
           Functions and Attributes
           Per-instance Data
           Layers in action.
           Per-instance flag bits
               PERLIO_F_EOF, PERLIO_F_CANWRITE,  PERLIO_F_CANREAD,
               PERLIO_F_ERROR, PERLIO_F_TRUNCATE, PERLIO_F_APPEND,
               PERLIO_F_CRLF, PERLIO_F_UTF8, PERLIO_F_UNBUF, PERLIO_F_WRBUF,
               PERLIO_F_RDBUF, PERLIO_F_LINEBUF, PERLIO_F_TEMP, PERLIO_F_OPEN,
               PERLIO_F_FASTGETS

           Methods in Detail
               fsize, name, size, kind, PERLIO_K_BUFFERED, PERLIO_K_RAW,
               PERLIO_K_CANCRLF, PERLIO_K_FASTGETS, PERLIO_K_MULTIARG, Pushed,
               Popped, Open, Binmode, Getarg, Fileno, Dup, Read, Write, Seek,
               Tell, Close, Flush, Fill, Eof, Error,    Clearerr, Setlinebuf,
               Get_base, Get_bufsiz, Get_ptr, Get_cnt, Set_ptrcnt

           Utilities
           Implementing PerlIO Layers
               C implementations, Perl implementations

           Core Layers
               "unix", "perlio", "stdio", "crlf", "mmap", "pending", "raw",
               "utf8"

           Extension Layers
               ":encoding", ":scalar", ":via"

       TODO

       perlapio - perl's IO abstraction interface.

       SYNOPSIS
       DESCRIPTION
           1. USE_STDIO, 2. USE_SFIO, 3. USE_PERLIO, PerlIO_stdin(),
           PerlIO_stdout(), PerlIO_stderr(), PerlIO_open(path, mode),
           PerlIO_fdopen(fd,mode), PerlIO_reopen(path,mode,f),
           PerlIO_printf(f,fmt,...), PerlIO_vprintf(f,fmt,a),
           PerlIO_stdoutf(fmt,...), PerlIO_read(f,buf,count),
           PerlIO_write(f,buf,count), PerlIO_close(f), PerlIO_puts(f,s),
           PerlIO_putc(f,c), PerlIO_ungetc(f,c), PerlIO_getc(f),
           PerlIO_eof(f), PerlIO_error(f), PerlIO_fileno(f),
           PerlIO_clearerr(f), PerlIO_flush(f), PerlIO_seek(f,offset,whence),
           PerlIO_tell(f), PerlIO_getpos(f,p), PerlIO_setpos(f,p),
           PerlIO_rewind(f), PerlIO_tmpfile(), PerlIO_setlinebuf(f)

           Co-existence with stdio
               PerlIO_importFILE(f,mode), PerlIO_exportFILE(f,mode),
               PerlIO_releaseFILE(p,f), PerlIO_findFILE(f)

           "Fast gets" Functions
               PerlIO_fast_gets(f), PerlIO_has_cntptr(f), PerlIO_get_cnt(f),
               PerlIO_get_ptr(f), PerlIO_set_ptrcnt(f,p,c),
               PerlIO_canset_cnt(f), PerlIO_set_cnt(f,c), PerlIO_has_base(f),
               PerlIO_get_base(f), PerlIO_get_bufsiz(f)

           Other Functions
               PerlIO_apply_layers(f,mode,layers),
               PerlIO_binmode(f,ptype,imode,layers), '<' read, '>' write, '+'
               read/write, PerlIO_debug(fmt,...)

       perlhack - How to hack at the Perl internals


       DESCRIPTION
           Does concept match the general goals of Perl?, Where is the
           implementation?, Backwards compatibility, Could it be a module
           instead?, Is the feature generic enough?, Does it potentially
           introduce new bugs?, Does it preclude other desirable features?, Is
           the implementation robust?, Is the implementation generic enough to
           be portable?, Is the implementation tested?, Is there enough
           documentation?, Is there another way to do it?, Does it create too
           much work?, Patches speak louder than words

           Keeping in sync
               rsync'ing the source tree, Using rsync over the LAN, Using
               pushing over the NFS, rsync'ing the patches

           Why rsync the source tree
               It's easier to rsync the source tree, It's more reliable

           Why rsync the patches
               It's easier to rsync the patches, It's a good reference,
               Finding a start point, Finding how to fix a bug, Finding the
               source of misbehaviour

           Working with the source
           Perlbug administration
           Submitting patches
               perlguts, perlxstut and perlxs, perlapi, Porting/pumpkin.pod,
               The perl5-porters FAQ

           Finding Your Way Around
               Core modules, Tests, Documentation, Configure, Interpreter

           Elements of the interpreter
               Startup, Parsing, Optimization, Running, Exception handing

           Internal Variable Types
           Op Trees
           Stacks
               Argument stack, Mark stack, Save stack

           Millions of Macros
           The .i Targets
       SOURCE CODE STATIC ANALYSIS
           lint, splint
           Coverity
           cpd (cut-and-paste detector)
           gcc warnings
           Warnings of other C compilers
           DEBUGGING
           Poking at Perl
           Using a source-level debugger
               run [args], break function_name, break source.c:xxx, step,
               next, continue, finish, 'enter', print

           gdb macro support
           Dumping Perl Data Structures
           Patching
           Patching a core module
           Adding a new function to the core
           Writing a test
               t/base/, t/cmd/, t/comp/, t/io/, t/lib/, t/mro/, t/op/, t/pod/,
               t/run/, t/uni/, t/win32/, t/x2p, t/base t/comp, t/cmd t/run
               t/io t/op, t/lib ext lib

           Special Make Test Targets
               coretest, test.deparse, test.taintwarn, minitest, test.valgrind
               check.valgrind utest.valgrind ucheck.valgrind, test.third
               check.third utest.third ucheck.third, test.torture torturetest,
               utest ucheck test.utf8 check.utf8, minitest.utf16 test.utf16,
               test_harness, test-notty test_notty

           Running tests by hand
               -v, -torture, -re=PATTERN, -re LIST OF PATTERNS, PERL_CORE=1,
               PERL_DESTRUCT_LEVEL=2, PERL, PERL_SKIP_TTY_TEST,
               PERL_TEST_Net_Ping, PERL_TEST_NOVREXX, PERL_TEST_NUMCONVERTS

           Common problems when patching Perl source code
           Perl environment problems
           Portability problems
           Problematic System Interfaces
           Security problems
       EXTERNAL TOOLS FOR DEBUGGING PERL
           Rational Software's Purify
           Purify on Unix
               -Accflags=-DPURIFY, -Doptimize='-g', -Uusemymalloc,
               -Dusemultiplicity

           Purify on NT
               DEFINES, USE_MULTI = define, #PERL_MALLOC = define, CFG = Debug

           valgrind
           Compaq's/Digital's/HP's Third Degree
           PERL_DESTRUCT_LEVEL
           PERL_MEM_LOG
           Profiling
           Gprof Profiling
               -a, -b, -e routine, -f routine, -s, -z

           GCC gcov Profiling
           Pixie Profiling
               -h, -l, -p[rocedures], -h[eavy], -i[nvocations], -l[ines],
               -testcoverage, -z[ero]

           Miscellaneous tricks
       CONCLUSION
           The Road goes ever on and on, down from the door where it began.

       AUTHOR

       perlbook - Perl book information

       DESCRIPTION

       perlcommunity - a brief overview of the Perl community


       DESCRIPTION
           Where to find the community
           Mailing lists and Newsgroups
           IRC
           Websites
               <http://perl.com/>, <http://use.perl.org/>,
               <http://www.perlmonks.org/>

           User Groups
           Workshops
           Hackathons
           Conventions
           Calendar of Perl Events
       AUTHOR

       perltodo - Perl TO-DO List


       DESCRIPTION
       Tasks that only need Perl knowledge
           Remove duplication of test setup.
           merge common code in installperl and installman
           common test code for timed bail out
           POD -> HTML conversion in the core still sucks
           merge checkpods and podchecker
           perlmodlib.PL rewrite
           Parallel testing
           Make Schwern poorer
           Improve the coverage of the core tests
           test B
           Deparse inlined constants
           A decent benchmark
           fix tainting bugs
           Dual life everything
           Improving "threads::shared"
           POSIX memory footprint
           embed.pl/makedef.pl
           use strict; and AutoLoad
       Tasks that need a little sysadmin-type knowledge
           make HTML install work
           compressed man pages
           Add a code coverage target to the Makefile
           Make Config.pm cope with differences between built and installed
           perl
           linker specification files
           Cross-compile support
           roffitall
       Tasks that need a little C knowledge
           Exterminate PL_na!
           Modernize the order of directories in @INC
           -Duse32bit*
           Make it clear from -v if this is the exact official release
           Profile Perl - am I hot or not?
           Allocate OPs from arenas
           Improve win32/wince.c
           Use secure CRT functions when building with VC8 on Win32
           strcat(), strcpy(), strncat(), strncpy(), sprintf(), vsprintf()
           -D_FORTIFY_SOURCE=2, -fstack-protector
       Tasks that need a knowledge of XS
           autovivification
           Unicode in Filenames
           Unicode in %ENV
           Unicode and glob()
           Unicode and lc/uc operators
           use less 'memory'
           Re-implement ":unique" in a way that is actually thread-safe
           Make tainting consistent
           readpipe(LIST)
           Audit the code for destruction ordering assumptions
           Extend PerlIO and PerlIO::Scalar
           -C on the #! line
           Propagate const outwards from Perl_moreswitches()
           Duplicate logic in S_method_common() and
           Perl_gv_fetchmethod_autoload()
           Organize error messages
       Tasks that need a knowledge of the interpreter
           state variable initialization in list context
           Implement $value ~~ 0 .. $range
           A does() built-in
           Tied filehandles and write() don't mix
           Attach/detach debugger from running program
           Optimize away empty destructors
           LVALUE functions for lists
           LVALUE functions in the debugger
           regexp optimiser optional
           delete &function
           "/w" regex modifier
           optional optimizer
           You WANT *how* many
           lexical aliases
           entersub XS vs Perl
           Self-ties
           Optimize away @_
           Properly Unicode safe tokeniser and pads.
           The yada yada yada operators
           Virtualize operating system access
           Investigate PADTMP hash pessimisation
       Big projects
           make ithreads more robust
           iCOW
           (?{...}) closures in regexps
           A re-entrant regexp engine
           Add class set operations to regexp engine

       perldoc - Look up Perl documentation in Pod format.


       SYNOPSIS
       DESCRIPTION
       OPTIONS
           -h, -v, -t, -u, -m module, -l, -F, -f perlfunc, -q perlfaq-search-
           regexp, -T, -d destination-filename, -o output-formatname, -M
           module-name, -w option:value or -w option, -X, -L language_code,
           PageName|ModuleName|ProgramName, -n some-formatter, -r, -i, -V

       SECURITY
       ENVIRONMENT
       AUTHOR

       perlhist - the Perl history records


       DESCRIPTION
       INTRODUCTION
       THE KEEPERS OF THE PUMPKIN
           PUMPKIN?
       THE RECORDS
           SELECTED RELEASE SIZES
           SELECTED PATCH SIZES
       THE KEEPERS OF THE RECORDS

       perldelta - what is new for perl 5.10.0


       DESCRIPTION
       Core Enhancements
           The "feature" pragma
           New -E command-line switch
           Defined-or operator
           Switch and Smart Match operator
           Regular expressions
               Recursive Patterns, Named Capture Buffers, Possessive
               Quantifiers, Backtracking control verbs, Relative
               backreferences, "\K" escape, Vertical and horizontal
               whitespace, and linebreak

           "say()"
           Lexical $_
           The "_" prototype
           UNITCHECK blocks
           New Pragma, "mro"
           readdir() may return a "short filename" on Windows
           readpipe() is now overridable
           Default argument for readline()
           state() variables
           Stacked filetest operators
           UNIVERSAL::DOES()
           Formats
           Byte-order modifiers for pack() and unpack()
           "no VERSION"
           "chdir", "chmod" and "chown" on filehandles
           OS groups
           Recursive sort subs
           Exceptions in constant folding
           Source filters in @INC
           New internal variables
               "${^RE_DEBUG_FLAGS}", "${^CHILD_ERROR_NATIVE}",
               "${^RE_TRIE_MAXBUF}", "${^WIN32_SLOPPY_STAT}"

           Miscellaneous
           UCD 5.0.0
           MAD
           kill() on Windows
       Incompatible Changes
           Packing and UTF-8 strings
           Byte/character count feature in unpack()
           The $* and $# variables have been removed
           substr() lvalues are no longer fixed-length
           Parsing of "-f _"
           ":unique"
           Effect of pragmas in eval
           chdir FOO
           Handling of .pmc files
           $^V is now a "version" object instead of a v-string
           @- and @+ in patterns
           $AUTOLOAD can now be tainted
           Tainting and printf
           undef and signal handlers
           strictures and dereferencing in defined()
           "(?p{})" has been removed
           Pseudo-hashes have been removed
           Removal of the bytecode compiler and of perlcc
           Removal of the JPL
           Recursive inheritance detected earlier
       Modules and Pragmata
           Upgrading individual core modules
           Pragmata Changes
               "feature", "mro", Scoping of the "sort" pragma, Scoping of
               "bignum", "bigint", "bigrat", "base", "strict" and "warnings",
               "version", "warnings", "less"

           New modules
           Selected Changes to Core Modules
               "Attribute::Handlers", "B::Lint", "B", "Thread"

       Utility Changes
           perl -d, ptar, ptardiff, shasum, corelist, h2ph and h2xs, perlivp,
           find2perl, config_data, cpanp, cpan2dist, pod2html

       New Documentation
       Performance Enhancements
           In-place sorting
           Lexical array access
           XS-assisted SWASHGET
           Constant subroutines
           "PERL_DONT_CREATE_GVSV"
           Weak references are cheaper
           sort() enhancements
           Memory optimisations
           UTF-8 cache optimisation
           Sloppy stat on Windows
           Regular expressions optimisations
               Engine de-recursivised, Single char char-classes treated as
               literals, Trie optimisation of literal string alternations,
               Aho-Corasick start-point optimisation

       Installation and Configuration Improvements
           Configuration improvements
               "-Dusesitecustomize", Relocatable installations, strlcat() and
               strlcpy(), "d_pseudofork" and "d_printf_format_null", Configure
               help

           Compilation improvements
               Parallel build, Borland's compilers support, Static build on
               Windows, ppport.h files, C++ compatibility, Support for
               Microsoft 64-bit compiler, Visual C++, Win32 builds

           Installation improvements
               Module auxiliary files

           New Or Improved Platforms
       Selected Bug Fixes
           strictures in regexp-eval blocks, Calling CORE::require(),
           Subscripts of slices, "no warnings 'category'" works correctly with
           -w, threads improvements, chr() and negative values, PERL5SHELL and
           tainting, Using *FILE{IO}, Overloading and reblessing, Overloading
           and UTF-8, eval memory leaks fixed, Random device on Windows,
           PERLIO_DEBUG, PerlIO::scalar and read-only scalars, study() and
           UTF-8, Critical signals, @INC-hook fix, "-t" switch fix, Duping
           UTF-8 filehandles, Localisation of hash elements

       New or Changed Diagnostics
           Use of uninitialized value, Deprecated use of my() in false
           conditional, !=~ should be !~, Newline in left-justified string,
           Too late for "-T" option, "%s" variable %s masks earlier
           declaration, readdir()/closedir()/etc. attempted on invalid
           dirhandle, Opening dirhandle/filehandle %s also as a
           file/directory, Use of -P is deprecated, v-string in use/require is
           non-portable, perl -V

       Changed Internals
           Reordering of SVt_* constants
           Elimination of SVt_PVBM
           New type SVt_BIND
           Removal of CPP symbols
           Less space is used by ops
           New parser
           Use of "const"
           Mathoms
           "AvFLAGS" has been removed
           "av_*" changes
           $^H and %^H
           B:: modules inheritance changed
           Anonymous hash and array constructors
       Known Problems
       Platform Specific Problems
       Reporting Bugs
       SEE ALSO

       perl5100delta, perldelta - what is new for perl 5.10.0


       DESCRIPTION
       Core Enhancements
           The "feature" pragma
           New -E command-line switch
           Defined-or operator
           Switch and Smart Match operator
           Regular expressions
               Recursive Patterns, Named Capture Buffers, Possessive
               Quantifiers, Backtracking control verbs, Relative
               backreferences, "\K" escape, Vertical and horizontal
               whitespace, and linebreak

           "say()"
           Lexical $_
           The "_" prototype
           UNITCHECK blocks
           New Pragma, "mro"
           readdir() may return a "short filename" on Windows
           readpipe() is now overridable
           Default argument for readline()
           state() variables
           Stacked filetest operators
           UNIVERSAL::DOES()
           Formats
           Byte-order modifiers for pack() and unpack()
           "no VERSION"
           "chdir", "chmod" and "chown" on filehandles
           OS groups
           Recursive sort subs
           Exceptions in constant folding
           Source filters in @INC
           New internal variables
               "${^RE_DEBUG_FLAGS}", "${^CHILD_ERROR_NATIVE}",
               "${^RE_TRIE_MAXBUF}", "${^WIN32_SLOPPY_STAT}"

           Miscellaneous
           UCD 5.0.0
           MAD
           kill() on Windows
       Incompatible Changes
           Packing and UTF-8 strings
           Byte/character count feature in unpack()
           The $* and $# variables have been removed
           substr() lvalues are no longer fixed-length
           Parsing of "-f _"
           ":unique"
           Effect of pragmas in eval
           chdir FOO
           Handling of .pmc files
           $^V is now a "version" object instead of a v-string
           @- and @+ in patterns
           $AUTOLOAD can now be tainted
           Tainting and printf
           undef and signal handlers
           strictures and dereferencing in defined()
           "(?p{})" has been removed
           Pseudo-hashes have been removed
           Removal of the bytecode compiler and of perlcc
           Removal of the JPL
           Recursive inheritance detected earlier
       Modules and Pragmata
           Upgrading individual core modules
           Pragmata Changes
               "feature", "mro", Scoping of the "sort" pragma, Scoping of
               "bignum", "bigint", "bigrat", "base", "strict" and "warnings",
               "version", "warnings", "less"

           New modules
           Selected Changes to Core Modules
               "Attribute::Handlers", "B::Lint", "B", "Thread"

       Utility Changes
           perl -d, ptar, ptardiff, shasum, corelist, h2ph and h2xs, perlivp,
           find2perl, config_data, cpanp, cpan2dist, pod2html

       New Documentation
       Performance Enhancements
           In-place sorting
           Lexical array access
           XS-assisted SWASHGET
           Constant subroutines
           "PERL_DONT_CREATE_GVSV"
           Weak references are cheaper
           sort() enhancements
           Memory optimisations
           UTF-8 cache optimisation
           Sloppy stat on Windows
           Regular expressions optimisations
               Engine de-recursivised, Single char char-classes treated as
               literals, Trie optimisation of literal string alternations,
               Aho-Corasick start-point optimisation

       Installation and Configuration Improvements
           Configuration improvements
               "-Dusesitecustomize", Relocatable installations, strlcat() and
               strlcpy(), "d_pseudofork" and "d_printf_format_null", Configure
               help

           Compilation improvements
               Parallel build, Borland's compilers support, Static build on
               Windows, ppport.h files, C++ compatibility, Support for
               Microsoft 64-bit compiler, Visual C++, Win32 builds

           Installation improvements
               Module auxiliary files

           New Or Improved Platforms
       Selected Bug Fixes
           strictures in regexp-eval blocks, Calling CORE::require(),
           Subscripts of slices, "no warnings 'category'" works correctly with
           -w, threads improvements, chr() and negative values, PERL5SHELL and
           tainting, Using *FILE{IO}, Overloading and reblessing, Overloading
           and UTF-8, eval memory leaks fixed, Random device on Windows,
           PERLIO_DEBUG, PerlIO::scalar and read-only scalars, study() and
           UTF-8, Critical signals, @INC-hook fix, "-t" switch fix, Duping
           UTF-8 filehandles, Localisation of hash elements

       New or Changed Diagnostics
           Use of uninitialized value, Deprecated use of my() in false
           conditional, !=~ should be !~, Newline in left-justified string,
           Too late for "-T" option, "%s" variable %s masks earlier
           declaration, readdir()/closedir()/etc. attempted on invalid
           dirhandle, Opening dirhandle/filehandle %s also as a
           file/directory, Use of -P is deprecated, v-string in use/require is
           non-portable, perl -V

       Changed Internals
           Reordering of SVt_* constants
           Elimination of SVt_PVBM
           New type SVt_BIND
           Removal of CPP symbols
           Less space is used by ops
           New parser
           Use of "const"
           Mathoms
           "AvFLAGS" has been removed
           "av_*" changes
           $^H and %^H
           B:: modules inheritance changed
           Anonymous hash and array constructors
       Known Problems
       Platform Specific Problems
       Reporting Bugs
       SEE ALSO

       perl595delta - what is new for perl v5.9.5


       DESCRIPTION
       Incompatible Changes
           Tainting and printf
           undef and signal handlers
           strictures and array/hash dereferencing in defined()
           "(?p{})" has been removed
           Pseudo-hashes have been removed
           Removal of the bytecode compiler and of perlcc
           Removal of the JPL
           Recursive inheritance detected earlier
       Core Enhancements
           Regular expressions
               Recursive Patterns, Named Capture Buffers, Possessive
               Quantifiers, Backtracking control verbs, Relative
               backreferences, "\K" escape, Vertical and horizontal
               whitespace, and linebreak

           The "_" prototype
           UNITCHECK blocks
           readpipe() is now overridable
           default argument for readline()
           UCD 5.0.0
           Smart match
           Implicit loading of "feature"
       Modules and Pragmas
           New Pragma, "mro"
           bignum, bigint, bigrat
           Math::BigInt/Math::BigFloat
               config(), import(), roundmode common, bpi(), bcos(), bsin(),
               batan(), batan2(), bmuladd(), bexp(), bnok(), from_hex(),
               from_oct(), and from_bin(), as_oct()

           New Core Modules
           Module changes
               "assertions", "base", "strict" and "warnings", "warnings",
               "less", "Attribute::Handlers", "B::Lint", "B", "Thread"

       Utility Changes
           "cpanp"
           "cpan2dist"
           "pod2html"
       Documentation
           New manpage, perlunifaq
       Performance Enhancements
       Installation and Configuration Improvements
           C++ compatibility
           Visual C++
           Static build on Win32
           win32 builds
           "d_pseudofork" and "d_printf_format_null"
           Help
           64bit systems
           Ports
       Selected Bug Fixes
       New or Changed Diagnostics
           Deprecations
       Changed Internals
       Known Problems
           Platform Specific Problems
       Reporting Bugs
       SEE ALSO

       perl594delta - what is new for perl v5.9.4


       DESCRIPTION
       Incompatible Changes
           chdir FOO
           Handling of pmc files
           @- and @+ in patterns
           $AUTOLOAD can now be tainted
       Core Enhancements
           state() variables
           UNIVERSAL::DOES()
           Exceptions in constant folding
           Source filters in @INC
           MAD
       Modules and Pragmas
           New Core Modules
       Utility Changes
           config_data
       Documentation
           New manpage, perlpragma
           New manpage, perlreguts
           New manpage, perlunitut
       Performance Enhancements
           Memory optimisations
           UTF-8 cache optimisation
           Regular expressions
               Engine de-recursivised, Single char char-classes treated as
               literals, Trie optimisation of literal string alternations,
               Aho-Corasick start-point optimisation

           Sloppy stat on Windows
       Installation and Configuration Improvements
           Relocatable installations
           Ports
           Compilation improvements
           New probes
           Windows build improvements
               Building XS extensions, Support for 64-bit compiler

       Selected Bug Fixes
           PERL5SHELL and tainting
           Using *FILE{IO}
           Overloading and reblessing
           Overloading and UTF-8
           eval memory leaks fixed
           Random device on Windows
       New or Changed Diagnostics
           State variable %s will be reinitialized

       Changed Internals
       Known Problems
       Reporting Bugs
       SEE ALSO

       perl593delta - what is new for perl v5.9.3


       DESCRIPTION
       Incompatible Changes
           Parsing of "-f _"
           "mkdir()"
           Magic goto and eval
           $# has been removed
           ":unique"
           Scoping of the "sort" pragma
       Core Enhancements
           The "feature" pragma
           Switch and Smart Match operator
           "say()"
           "CLONE_SKIP()"
           "${^CHILD_ERROR_NATIVE}"
           Assertions
           Unicode Character Database 4.1.0
           "no VERSION"
           Recursive sort subs
           Effect of pragmas in eval
           New -E command-line switch
           "chdir", "chmod" and "chown" on filehandles
           OS groups
       Modules and Pragmata
           New Core Modules
       Utility Changes
           "ptar"
           "ptardiff"
           "shasum"
           "h2xs" enhancements
           "perlivp" enhancements
       Documentation
           Perl Glossary
       Performance Enhancements
           XS-assisted SWASHGET
           Constant subroutines
           "PERL_DONT_CREATE_GVSV"
           Weak references are cheaper
           sort() enhancements
       Installation and Configuration Improvements
           Compilation improvements
           New Or Improved Platforms
           New probes
           Module auxiliary files
       Selected Bug Fixes
           "defined $$x"
           Calling CORE::require()
           Subscripts of slices
           Remove over-optimisation
           sprintf() fixes
           no warnings 'category' works correctly with -w
           Smaller fixes
           More Unicode Fixes
       New or Changed Diagnostics
           Attempt to set length of freed array
           Non-string passed as bitmask
           Search pattern not terminated or ternary operator parsed as search
           pattern
           "%s" variable %s masks earlier declaration
           readdir()/closedir()/etc. attempted on invalid dirhandle
       Changed Internals
           B:: modules inheritance changed
       Reporting Bugs
       SEE ALSO

       perl592delta - what is new for perl v5.9.2


       DESCRIPTION
       Incompatible Changes
           Packing and UTF-8 strings
           Miscellaneous
       Core Enhancements
           Malloc wrapping
           Unicode Character Database 4.0.1
           suidperl less insecure
           PERLIO_DEBUG
           Formats
           Unicode Character Classes
           Byte-order modifiers for pack() and unpack()
           Byte count feature in pack()
           New variables
       Modules and Pragmata
           New modules
           Updated And Improved Modules and Pragmata
               B::Concise, Socket, Sys::Syslog, threads

       Utility Changes
       Performance Enhancements
       Installation and Configuration Improvements
       Selected Bug Fixes
       New or Changed Diagnostics
       Changed Internals
       Known Problems
       Plans for the next release
       Reporting Bugs
       SEE ALSO

       perl591delta - what is new for perl v5.9.1


       DESCRIPTION
       Incompatible Changes
           substr() lvalues are no longer fixed-length
           The ":unique" attribute is only meaningful for globals
       Core Enhancements
           Lexical $_
           Tied hashes in scalar context
           Formats
           Stacked filetest operators
       Modules and Pragmata
           Benchmark, Carp, Exporter, FindBin, List::Util, threads::shared

       Utility Changes
       Documentation
       Performance Enhancements
       Selected Bug Fixes
           UTF-8 bugs
           Threading bugs
           More bugs
       New or Changed Diagnostics
       Changed Internals
           Reordering of SVt_* constants
           Removal of CPP symbols
           Less space is used by ops
           New parser
       Configuration and Building
       Known Problems
           Platform Specific Problems
       To-do for perl 5.10.0
       Reporting Bugs
       SEE ALSO

       perl590delta - what is new for perl v5.9.0


       DESCRIPTION
       Incompatible Changes
           Hash Randomisation
           UTF-8 On Filehandles No Longer Activated By Locale
           Single-number v-strings are no longer v-strings before "=>"
           (Win32) The -C Switch Has Been Repurposed
           (Win32) The /d Switch Of cmd.exe
           The $* variable has been removed
       Core Enhancements
           Assertions
           Defined-or operators
           UTF-8 no longer default under UTF-8 locales
           Unsafe signals again available
           Tied Arrays with Negative Array Indices
           local ${$x}
           Unicode Character Database 4.0.0
           Miscellaneous Enhancements
       Modules and Pragmata
           Updated Modules And Pragmata
               base, B::Bytecode, B::Concise, B::Deparse, Benchmark,
               ByteLoader, bytes, CGI, charnames, CPAN, Data::Dumper, DB_File,
               Devel::PPPort, Digest::MD5, Encode, fields, libnet,
               Math::BigInt, MIME::Base64, NEXT, Net::Ping, PerlIO::scalar,
               podlators, Pod::LaTeX, PodParsers, Pod::Perldoc, Scalar::Util,
               Storable, strict, Term::ANSIcolor, Test::Harness, Test::More,
               Test::Simple, Text::Balanced, Time::HiRes, threads,
               threads::shared, Unicode::Collate, Unicode::Normalize,
               Win32::GetFolderPath, Win32::GetOSVersion

       Utility Changes
       New Documentation
       Performance Enhancements
       Installation and Configuration Improvements
           Platform-specific enhancements
       Selected Bug Fixes
           Closures, eval and lexicals
           Generic fixes
           Platform-specific fixes
       New or Changed Diagnostics
           Changed "A thread exited while %d threads were running"
           Removed "Attempt to clear a restricted hash"
           New "Illegal declaration of anonymous subroutine"
           Changed "Invalid range "%s" in transliteration operator"
           New "Missing control char name in \c"
           New "Newline in left-justified string for %s"
           New "Possible precedence problem on bitwise %c operator"
           New "read() on %s filehandle %s"
           New "Tied variable freed while still in use"
           New "To%s: illegal mapping '%s'"
           New "Use of freed value in iteration"
       Changed Internals
       New Tests
       Known Problems
           Tied hashes in scalar context
           Net::Ping 450_service and 510_ping_udp failures
           B::C
       Platform Specific Problems
           EBCDIC Platforms
           Cygwin 1.5 problems
           HP-UX: HP cc warnings about sendfile and sendpath
           IRIX: t/uni/tr_7jis.t falsely failing
           Mac OS X: no usemymalloc
           Tru64: No threaded builds with GNU cc (gcc)
           Win32: sysopen, sysread, syswrite
       TODO
       Reporting Bugs
       SEE ALSO

       perl588delta - what is new for perl v5.8.8


       DESCRIPTION
       Incompatible Changes
       Core Enhancements
       Modules and Pragmata
       Utility Changes
           "h2xs" enhancements
           "perlivp" enhancements
       New Documentation
       Performance Enhancements
       Installation and Configuration Improvements
       Selected Bug Fixes
           no warnings 'category' works correctly with -w
           Remove over-optimisation
           sprintf() fixes
           Debugger and Unicode slowdown
           Smaller fixes
       New or Changed Diagnostics
           Attempt to set length of freed array
           Non-string passed as bitmask
           Search pattern not terminated or ternary operator parsed as search
           pattern
       Changed Internals
       Platform Specific Problems
       Reporting Bugs
       SEE ALSO

       perl587delta - what is new for perl v5.8.7


       DESCRIPTION
       Incompatible Changes
       Core Enhancements
           Unicode Character Database 4.1.0
           suidperl less insecure
           Optional site customization script
           "Config.pm" is now much smaller.
       Modules and Pragmata
       Utility Changes
           find2perl enhancements
       Performance Enhancements
       Installation and Configuration Improvements
       Selected Bug Fixes
       New or Changed Diagnostics
       Changed Internals
       Known Problems
       Platform Specific Problems
       Reporting Bugs
       SEE ALSO

       perl586delta - what is new for perl v5.8.6


       DESCRIPTION
       Incompatible Changes
       Core Enhancements
       Modules and Pragmata
       Utility Changes
       Performance Enhancements
       Selected Bug Fixes
       New or Changed Diagnostics
       Changed Internals
       New Tests
       Reporting Bugs
       SEE ALSO

       perl585delta - what is new for perl v5.8.5


       DESCRIPTION
       Incompatible Changes
       Core Enhancements
       Modules and Pragmata
       Utility Changes
           Perl's debugger
           h2ph
       Installation and Configuration Improvements
       Selected Bug Fixes
       New or Changed Diagnostics
       Changed Internals
       Known Problems
       Platform Specific Problems
       Reporting Bugs
       SEE ALSO

       perl584delta - what is new for perl v5.8.4


       DESCRIPTION
       Incompatible Changes
       Core Enhancements
           Malloc wrapping
           Unicode Character Database 4.0.1
           suidperl less insecure
           format
       Modules and Pragmata
           Updated modules
               Attribute::Handlers, B, Benchmark, CGI, Carp, Cwd, Exporter,
               File::Find, IO, IPC::Open3, Local::Maketext, Math::BigFloat,
               Math::BigInt, Math::BigRat, MIME::Base64, ODBM_File, POSIX,
               Shell, Socket, Storable, Switch, Sys::Syslog, Term::ANSIColor,
               Time::HiRes, Unicode::UCD, Win32, base, open, threads, utf8

       Performance Enhancements
       Utility Changes
       Installation and Configuration Improvements
       Selected Bug Fixes
       New or Changed Diagnostics
       Changed Internals
       Future Directions
       Platform Specific Problems
       Reporting Bugs
       SEE ALSO

       perl583delta - what is new for perl v5.8.3


       DESCRIPTION
       Incompatible Changes
       Core Enhancements
       Modules and Pragmata
           CGI, Cwd, Digest, Digest::MD5, Encode, File::Spec, FindBin,
           List::Util, Math::BigInt, PodParser, Pod::Perldoc, POSIX,
           Unicode::Collate, Unicode::Normalize, Test::Harness,
           threads::shared

       Utility Changes
       New Documentation
       Installation and Configuration Improvements
       Selected Bug Fixes
       New or Changed Diagnostics
       Changed Internals
       Configuration and Building
       Platform Specific Problems
       Known Problems
       Future Directions
       Obituary
       Reporting Bugs
       SEE ALSO

       perl582delta - what is new for perl v5.8.2


       DESCRIPTION
       Incompatible Changes
       Core Enhancements
           Hash Randomisation
           Threading
       Modules and Pragmata
           Updated Modules And Pragmata
               Devel::PPPort, Digest::MD5, I18N::LangTags, libnet,
               MIME::Base64, Pod::Perldoc, strict, Tie::Hash, Time::HiRes,
               Unicode::Collate, Unicode::Normalize, UNIVERSAL

       Selected Bug Fixes
       Changed Internals
       Platform Specific Problems
       Future Directions
       Reporting Bugs
       SEE ALSO

       perl581delta - what is new for perl v5.8.1


       DESCRIPTION
       Incompatible Changes
           Hash Randomisation
           UTF-8 On Filehandles No Longer Activated By Locale
           Single-number v-strings are no longer v-strings before "=>"
           (Win32) The -C Switch Has Been Repurposed
           (Win32) The /d Switch Of cmd.exe
       Core Enhancements
           UTF-8 no longer default under UTF-8 locales
           Unsafe signals again available
           Tied Arrays with Negative Array Indices
           local ${$x}
           Unicode Character Database 4.0.0
           Deprecation Warnings
           Miscellaneous Enhancements
       Modules and Pragmata
           Updated Modules And Pragmata
               base, B::Bytecode, B::Concise, B::Deparse, Benchmark,
               ByteLoader, bytes, CGI, charnames, CPAN, Data::Dumper, DB_File,
               Devel::PPPort, Digest::MD5, Encode, fields, libnet,
               Math::BigInt, MIME::Base64, NEXT, Net::Ping, PerlIO::scalar,
               podlators, Pod::LaTeX, PodParsers, Pod::Perldoc, Scalar::Util,
               Storable, strict, Term::ANSIcolor, Test::Harness, Test::More,
               Test::Simple, Text::Balanced, Time::HiRes, threads,
               threads::shared, Unicode::Collate, Unicode::Normalize,
               Win32::GetFolderPath, Win32::GetOSVersion

       Utility Changes
       New Documentation
       Installation and Configuration Improvements
           Platform-specific enhancements
       Selected Bug Fixes
           Closures, eval and lexicals
           Generic fixes
           Platform-specific fixes
       New or Changed Diagnostics
           Changed "A thread exited while %d threads were running"
           Removed "Attempt to clear a restricted hash"
           New "Illegal declaration of anonymous subroutine"
           Changed "Invalid range "%s" in transliteration operator"
           New "Missing control char name in \c"
           New "Newline in left-justified string for %s"
           New "Possible precedence problem on bitwise %c operator"
           New "Pseudo-hashes are deprecated"
           New "read() on %s filehandle %s"
           New "5.005 threads are deprecated"
           New "Tied variable freed while still in use"
           New "To%s: illegal mapping '%s'"
           New "Use of freed value in iteration"
       Changed Internals
       New Tests
       Known Problems
           Tied hashes in scalar context
           Net::Ping 450_service and 510_ping_udp failures
           B::C
       Platform Specific Problems
           EBCDIC Platforms
           Cygwin 1.5 problems
           HP-UX: HP cc warnings about sendfile and sendpath
           IRIX: t/uni/tr_7jis.t falsely failing
           Mac OS X: no usemymalloc
           Tru64: No threaded builds with GNU cc (gcc)
           Win32: sysopen, sysread, syswrite
       Future Directions
       Reporting Bugs
       SEE ALSO

       perl58delta - what is new for perl v5.8.0


       DESCRIPTION
       Highlights In 5.8.0
       Incompatible Changes
           Binary Incompatibility
           64-bit platforms and malloc
           AIX Dynaloading
           Attributes for "my" variables now handled at run-time
           Socket Extension Dynamic in VMS
           IEEE-format Floating Point Default on OpenVMS Alpha
           New Unicode Semantics (no more "use utf8", almost)
           New Unicode Properties
           REF(...) Instead Of SCALAR(...)
           pack/unpack D/F recycled
           glob() now returns filenames in alphabetical order
           Deprecations
       Core Enhancements
           Unicode Overhaul
           PerlIO is Now The Default
           ithreads
           Restricted Hashes
           Safe Signals
           Understanding of Numbers
           Arrays now always interpolate into double-quoted strings [561]
           Miscellaneous Changes
       Modules and Pragmata
           New Modules and Pragmata
           Updated And Improved Modules and Pragmata
       Utility Changes
       New Documentation
       Performance Enhancements
       Installation and Configuration Improvements
           Generic Improvements
           New Or Improved Platforms
       Selected Bug Fixes
           Platform Specific Changes and Fixes
       New or Changed Diagnostics
       Changed Internals
       Security Vulnerability Closed [561]
       New Tests
       Known Problems
           The Compiler Suite Is Still Very Experimental
           Localising Tied Arrays and Hashes Is Broken
           Building Extensions Can Fail Because Of Largefiles
           Modifying $_ Inside for(..)
           mod_perl 1.26 Doesn't Build With Threaded Perl
           lib/ftmp-security tests warn 'system possibly insecure'
           libwww-perl (LWP) fails base/date #51
           PDL failing some tests
           Perl_get_sv
           Self-tying Problems
           ext/threads/t/libc
           Failure of Thread (5.005-style) tests
           Timing problems
           Tied/Magical Array/Hash Elements Do Not Autovivify
           Unicode in package/class and subroutine names does not work
       Platform Specific Problems
           AIX
           Alpha systems with old gccs fail several tests
           AmigaOS
           BeOS
           Cygwin "unable to remap"
           Cygwin ndbm tests fail on FAT
           DJGPP Failures
           FreeBSD built with ithreads coredumps reading large directories
           FreeBSD Failing locale Test 117 For ISO 8859-15 Locales
           IRIX fails ext/List/Util/t/shuffle.t or Digest::MD5
           HP-UX lib/posix Subtest 9 Fails When LP64-Configured
           Linux with glibc 2.2.5 fails t/op/int subtest #6 with -Duse64bitint
           Linux With Sfio Fails op/misc Test 48
           Mac OS X
           Mac OS X dyld undefined symbols
           OS/2 Test Failures
           op/sprintf tests 91, 129, and 130
           SCO
           Solaris 2.5
           Solaris x86 Fails Tests With -Duse64bitint
           SUPER-UX (NEC SX)
           Term::ReadKey not working on Win32
           UNICOS/mk
           UTS
           VOS (Stratus)
           VMS
           Win32
           XML::Parser not working
           z/OS (OS/390)
           Unicode Support on EBCDIC Still Spotty
           Seen In Perl 5.7 But Gone Now
       Reporting Bugs
       SEE ALSO
       HISTORY

       perl573delta - what's new for perl v5.7.3


       DESCRIPTION
       Changes
       Reporting Bugs
       SEE ALSO
       HISTORY

       perl572delta - what's new for perl v5.7.2


       DESCRIPTION
       Security Vulnerability Closed
       Incompatible Changes
           64-bit platforms and malloc
           AIX Dynaloading
           Socket Extension Dynamic in VMS
           Different Definition of the Unicode Character Classes \p{In...}
           Deprecations
       Core Enhancements
       Modules and Pragmata
           New Modules and Distributions
           Updated And Improved Modules and Pragmata
       Utility Changes
       New Documentation
       Installation and Configuration Improvements
           New Or Improved Platforms
           Generic Improvements
       Selected Bug Fixes
           Platform Specific Changes and Fixes
       New or Changed Diagnostics
       Source Code Enhancements
           MAGIC constants
           Better commented code
           Regex pre-/post-compilation items matched up
           gcc -Wall
       New Tests
       Known Problems
           AIX
           Amiga Perl Invoking Mystery
           lib/ftmp-security tests warn 'system possibly insecure'
           Cygwin intermittent failures of lib/Memoize/t/expire_file 11 and 12
           HP-UX lib/io_multihomed Fails When LP64-Configured
           HP-UX lib/posix Subtest 9 Fails When LP64-Configured
           Linux With Sfio Fails op/misc Test 48
           OS/390
           op/sprintf tests 129 and 130
           Failure of Thread tests
           UNICOS
           UTS
           VMS
           Win32
           Localising a Tied Variable Leaks Memory
           Self-tying of Arrays and Hashes Is Forbidden
           Variable Attributes are not Currently Usable for Tieing
           Building Extensions Can Fail Because Of Largefiles
           The Compiler Suite Is Still Experimental
           The Long Double Support is Still Experimental
       Reporting Bugs
       SEE ALSO
       HISTORY

       perl571delta - what's new for perl v5.7.1


       DESCRIPTION
       Security Vulnerability Closed
       Incompatible Changes
       Core Enhancements
           AUTOLOAD Is Now Lvaluable
           PerlIO is Now The Default
           Signals Are Now Safe
       Modules and Pragmata
           New Modules
           Updated And Improved Modules and Pragmata
       Performance Enhancements
       Utility Changes
       New Documentation
           perlclib
           perliol
           README.aix
           README.bs2000
           README.macos
           README.mpeix
           README.solaris
           README.vos
           Porting/repository.pod
       Installation and Configuration Improvements
           New Or Improved Platforms
           Generic Improvements
               d_cmsghdr, d_fcntl_can_lock, d_fsync, d_getitimer, d_getpagsz,
               d_msghdr_s, need_va_copy, d_readv, d_recvmsg, d_sendmsg,
               sig_size, d_sockatmark, d_strtoq, d_u32align, d_ualarm,
               d_usleep

       Selected Bug Fixes
           Platform Specific Changes and Fixes
       New or Changed Diagnostics
       Changed Internals
       New Tests
       Known Problems
           AIX vac 5.0.0.0 May Produce Buggy Code For Perl
           lib/ftmp-security tests warn 'system possibly insecure'
           lib/io_multihomed Fails In LP64-Configured HP-UX
           Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX
           lib/b test 19
           Linux With Sfio Fails op/misc Test 48
           sigaction test 13 in VMS
           sprintf tests 129 and 130
           Failure of Thread tests
           Localising a Tied Variable Leaks Memory
           Self-tying of Arrays and Hashes Is Forbidden
           Building Extensions Can Fail Because Of Largefiles
           The Compiler Suite Is Still Experimental
       Reporting Bugs
       SEE ALSO
       HISTORY

       perl570delta - what's new for perl v5.7.0


       DESCRIPTION
       Security Vulnerability Closed
       Incompatible Changes
       Core Enhancements
       Modules and Pragmata
           New Modules
           Updated And Improved Modules and Pragmata
       Utility Changes
       New Documentation
       Performance Enhancements
       Installation and Configuration Improvements
           Generic Improvements
       Selected Bug Fixes
           Platform Specific Changes and Fixes
       New or Changed Diagnostics
       Changed Internals
       Known Problems
           Unicode Support Still Far From Perfect
           EBCDIC Still A Lost Platform
           Building Extensions Can Fail Because Of Largefiles
           ftmp-security tests warn 'system possibly insecure'
           Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX
           Long Doubles Still Don't Work In Solaris
           Linux With Sfio Fails op/misc Test 48
           Storable tests fail in some platforms
           Threads Are Still Experimental
           The Compiler Suite Is Still Experimental
       Reporting Bugs
       SEE ALSO
       HISTORY

       perl561delta - what's new for perl v5.6.x


       DESCRIPTION
       Summary of changes between 5.6.0 and 5.6.1
           Security Issues
           Core bug fixes
               "UNIVERSAL::isa()", Memory leaks, Numeric conversions,
               qw(a\\b), caller(), Bugs in regular expressions, "slurp" mode,
               Autovivification of symbolic references to special variables,
               Lexical warnings, Spurious warnings and errors, glob(),
               Tainting, sort(), #line directives, Subroutine prototypes,
               map(), Debugger, PERL5OPT, chop(), Unicode support, 64-bit
               support, Compiler, Lvalue subroutines, IO::Socket, File::Find,
               xsubpp, "no Module;", Tests

           Core features
           Configuration issues
           Documentation
           Bundled modules
               B::Concise, File::Temp, Pod::LaTeX, Pod::Text::Overstrike, CGI,
               CPAN, Class::Struct, DB_File, Devel::Peek, File::Find,
               Getopt::Long, IO::Poll, IPC::Open3, Math::BigFloat,
               Math::Complex, Net::Ping, Opcode, Pod::Parser, Pod::Text,
               SDBM_File, Sys::Syslog, Tie::RefHash, Tie::SubstrHash

           Platform-specific improvements
               NCR MP-RAS, NonStop-UX

       Core Enhancements
           Interpreter cloning, threads, and concurrency
           Lexically scoped warning categories
           Unicode and UTF-8 support
           Support for interpolating named characters
           "our" declarations
           Support for strings represented as a vector of ordinals
           Improved Perl version numbering system
           New syntax for declaring subroutine attributes
           File and directory handles can be autovivified
           open() with more than two arguments
           64-bit support
           Large file support
           Long doubles
           "more bits"
           Enhanced support for sort() subroutines
           "sort $coderef @foo" allowed
           File globbing implemented internally
           Support for CHECK blocks
           POSIX character class syntax [: :] supported
           Better pseudo-random number generator
           Improved "qw//" operator
           Better worst-case behavior of hashes
           pack() format 'Z' supported
           pack() format modifier '!' supported
           pack() and unpack() support counted strings
           Comments in pack() templates
           Weak references
           Binary numbers supported
           Lvalue subroutines
           Some arrows may be omitted in calls through references
           Boolean assignment operators are legal lvalues
           exists() is supported on subroutine names
           exists() and delete() are supported on array elements
           Pseudo-hashes work better
           Automatic flushing of output buffers
           Better diagnostics on meaningless filehandle operations
           Where possible, buffered data discarded from duped input filehandle
           eof() has the same old magic as <>
           binmode() can be used to set :crlf and :raw modes
           "-T" filetest recognizes UTF-8 encoded files as "text"
           system(), backticks and pipe open now reflect exec() failure
           Improved diagnostics
           Diagnostics follow STDERR
           More consistent close-on-exec behavior
           syswrite() ease-of-use
           Better syntax checks on parenthesized unary operators
           Bit operators support full native integer width
           Improved security features
           More functional bareword prototype (*)
           "require" and "do" may be overridden
           $^X variables may now have names longer than one character
           New variable $^C reflects "-c" switch
           New variable $^V contains Perl version as a string
           Optional Y2K warnings
           Arrays now always interpolate into double-quoted strings
           @- and @+ provide starting/ending offsets of regex submatches
       Modules and Pragmata
           Modules
               attributes, B, Benchmark, ByteLoader, constant, charnames,
               Data::Dumper, DB, DB_File, Devel::DProf, Devel::Peek,
               Dumpvalue, DynaLoader, English, Env, Fcntl, File::Compare,
               File::Find, File::Glob, File::Spec, File::Spec::Functions,
               Getopt::Long, IO, JPL, lib, Math::BigInt, Math::Complex,
               Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
               podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect,
               Pod::Usage, pod2usage, Pod::Text and Pod::Man, SDBM_File,
               Sys::Syslog, Sys::Hostname, Term::ANSIColor, Time::Local,
               Win32, XSLoader, DBM Filters

           Pragmata
       Utility Changes
           dprofpp
           find2perl
           h2xs
           perlcc
           perldoc
           The Perl Debugger
       Improved Documentation
           perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
           perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod,
           perlhack.pod, perlintern.pod, perllexwarn.pod, perlnumber.pod,
           perlopentut.pod, perlreftut.pod, perltootc.pod, perltodo.pod,
           perlunicode.pod

       Performance enhancements
           Simple sort() using { $a <=> $b } and the like are optimized
           Optimized assignments to lexical variables
           Faster subroutine calls
           delete(), each(), values() and hash iteration are faster
       Installation and Configuration Improvements
           -Dusethreads means something different
           New Configure flags
           Threadedness and 64-bitness now more daring
           Long Doubles
           -Dusemorebits
           -Duselargefiles
           installusrbinperl
           SOCKS support
           "-A" flag
           Enhanced Installation Directories
           gcc automatically tried if 'cc' does not seem to be working
       Platform specific changes
           Supported platforms
           DOS
           OS390 (OpenEdition MVS)
           VMS
           Win32
       Significant bug fixes
           <HANDLE> on empty files
           "eval '...'" improvements
           All compilation errors are true errors
           Implicitly closed filehandles are safer
           Behavior of list slices is more consistent
           "(\$)" prototype and $foo{a}
           "goto &sub" and AUTOLOAD
           "-bareword" allowed under "use integer"
           Failures in DESTROY()
           Locale bugs fixed
           Memory leaks
           Spurious subroutine stubs after failed subroutine calls
           Taint failures under "-U"
           END blocks and the "-c" switch
           Potential to leak DATA filehandles
       New or Changed Diagnostics
           "%s" variable %s masks earlier declaration in same %s, "my sub" not
           yet implemented, "our" variable %s redeclared, '!' allowed only
           after types %s, / cannot take a count, / must be followed by a, A
           or Z, / must be followed by a*, A* or Z*, / must follow a numeric
           type, /%s/: Unrecognized escape \\%c passed through, /%s/:
           Unrecognized escape \\%c in character class passed through, /%s/
           should probably be written as "%s", %s() called too early to check
           prototype, %s argument is not a HASH or ARRAY element, %s argument
           is not a HASH or ARRAY element or slice, %s argument is not a
           subroutine name, %s package attribute may clash with future
           reserved word: %s, (in cleanup) %s, <> should be quotes, Attempt to
           join self, Bad evalled substitution pattern, Bad realloc() ignored,
           Bareword found in conditional, Binary number >
           0b11111111111111111111111111111111 non-portable, Bit vector size >
           32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
           filesystem of script "%s", Can't declare class for non-scalar %s in
           "%s", Can't declare %s in "%s", Can't ignore signal CHLD, forcing
           to default, Can't modify non-lvalue subroutine call, Can't read
           CRTL environ, Can't remove %s: %s, skipping file, Can't return %s
           from lvalue subroutine, Can't weaken a nonreference, Character
           class [:%s:] unknown, Character class syntax [%s] belongs inside
           character classes, Constant is not %s reference, constant(%s): %s,
           CORE::%s is not a keyword, defined(@array) is deprecated,
           defined(%hash) is deprecated, Did not produce a valid header, (Did
           you mean "local" instead of "our"?), Document contains no data,
           entering effective %s failed, false [] range "%s" in regexp,
           Filehandle %s opened only for output, flock() on closed filehandle
           %s, Global symbol "%s" requires explicit package name, Hexadecimal
           number > 0xffffffff non-portable, Ill-formed CRTL environ value
           "%s", Ill-formed message in prime_env_iter: |%s|, Illegal binary
           digit %s, Illegal binary digit %s ignored, Illegal number of bits
           in vec, Integer overflow in %s number, Invalid %s attribute: %s,
           Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
           separator character %s in attribute list, Invalid separator
           character %s in subroutine attribute list, leaving effective %s
           failed, Lvalue subs returning %s not implemented yet, Method %s not
           permitted, Missing %sbrace%s on \N{}, Missing command in piped
           open, Missing name in "my sub", No %s specified for -%c, No package
           name allowed for variable %s in "our", No space allowed after -%c,
           no UTC offset information; assuming local time is UTC, Octal number
           > 037777777777 non-portable, panic: del_backref, panic: kid popen
           errno read, panic: magic_killbackrefs, Parentheses missing around
           "%s" list, Possible unintended interpolation of %s in string,
           Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME :
           ATTRS" instead, Premature end of script headers, Repeat count in
           pack overflows, Repeat count in unpack overflows, realloc() of
           freed memory ignored, Reference is already weak, setpgrp can't take
           arguments, Strange *+?{} on zero-length expression, switching
           effective %s is not implemented, This Perl can't reset CRTL environ
           elements (%s), This Perl can't set CRTL environ elements (%s=%s),
           Too late to run %s block, Unknown open() mode '%s', Unknown process
           %x sent message to prime_env_iter: %s, Unrecognized escape \\%c
           passed through, Unterminated attribute parameter in attribute list,
           Unterminated attribute list, Unterminated attribute parameter in
           subroutine attribute list, Unterminated subroutine attribute list,
           Value of CLI symbol "%s" too long, Version number must be a
           constant number

       New tests
       Incompatible Changes
           Perl Source Incompatibilities
               CHECK is a new keyword, Treatment of list slices of undef has
               changed, Format of $English::PERL_VERSION is different,
               Literals of the form 1.2.3 parse differently, Possibly changed
               pseudo-random number generator, Hashing function for hash keys
               has changed, "undef" fails on read only values, Close-on-exec
               bit may be set on pipe and socket handles, Writing "$$1" to
               mean "${$}1" is unsupported, delete(), each(), values() and
               "\(%h)", vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
               Text of some diagnostic output has changed, "%@" has been
               removed, Parenthesized not() behaves like a list operator,
               Semantics of bareword prototype "(*)" have changed, Semantics
               of bit operators may have changed on 64-bit platforms, More
               builtins taint their results

           C Source Incompatibilities
               "PERL_POLLUTE", "PERL_IMPLICIT_CONTEXT", "PERL_POLLUTE_MALLOC"

           Compatible C Source API Changes
               "PATCHLEVEL" is now "PERL_VERSION"

           Binary Incompatibilities
       Known Problems
           Localizing a tied hash element may leak memory
           Known test failures
           EBCDIC platforms not fully supported
           UNICOS/mk CC failures during Configure run
           Arrow operator and arrays
           Experimental features
               Threads, Unicode, 64-bit support, Lvalue subroutines, Weak
               references, The pseudo-hash data type, The Compiler suite,
               Internal implementation of file globbing, The DB module, The
               regular expression code constructs:

       Obsolete Diagnostics
           Character class syntax [: :] is reserved for future extensions,
           Ill-formed logical name |%s| in prime_env_iter, In string, @%s now
           must be written as \@%s, Probable precedence problem on %s, regexp
           too big, Use of "$$<digit>" to mean "${$}<digit>" is deprecated

       Reporting Bugs
       SEE ALSO
       HISTORY

       perl56delta - what's new for perl v5.6.0


       DESCRIPTION
       Core Enhancements
           Interpreter cloning, threads, and concurrency
           Lexically scoped warning categories
           Unicode and UTF-8 support
           Support for interpolating named characters
           "our" declarations
           Support for strings represented as a vector of ordinals
           Improved Perl version numbering system
           New syntax for declaring subroutine attributes
           File and directory handles can be autovivified
           open() with more than two arguments
           64-bit support
           Large file support
           Long doubles
           "more bits"
           Enhanced support for sort() subroutines
           "sort $coderef @foo" allowed
           File globbing implemented internally
           Support for CHECK blocks
           POSIX character class syntax [: :] supported
           Better pseudo-random number generator
           Improved "qw//" operator
           Better worst-case behavior of hashes
           pack() format 'Z' supported
           pack() format modifier '!' supported
           pack() and unpack() support counted strings
           Comments in pack() templates
           Weak references
           Binary numbers supported
           Lvalue subroutines
           Some arrows may be omitted in calls through references
           Boolean assignment operators are legal lvalues
           exists() is supported on subroutine names
           exists() and delete() are supported on array elements
           Pseudo-hashes work better
           Automatic flushing of output buffers
           Better diagnostics on meaningless filehandle operations
           Where possible, buffered data discarded from duped input filehandle
           eof() has the same old magic as <>
           binmode() can be used to set :crlf and :raw modes
           "-T" filetest recognizes UTF-8 encoded files as "text"
           system(), backticks and pipe open now reflect exec() failure
           Improved diagnostics
           Diagnostics follow STDERR
           More consistent close-on-exec behavior
           syswrite() ease-of-use
           Better syntax checks on parenthesized unary operators
           Bit operators support full native integer width
           Improved security features
           More functional bareword prototype (*)
           "require" and "do" may be overridden
           $^X variables may now have names longer than one character
           New variable $^C reflects "-c" switch
           New variable $^V contains Perl version as a string
           Optional Y2K warnings
           Arrays now always interpolate into double-quoted strings
           @- and @+ provide starting/ending offsets of regex matches
       Modules and Pragmata
           Modules
               attributes, B, Benchmark, ByteLoader, constant, charnames,
               Data::Dumper, DB, DB_File, Devel::DProf, Devel::Peek,
               Dumpvalue, DynaLoader, English, Env, Fcntl, File::Compare,
               File::Find, File::Glob, File::Spec, File::Spec::Functions,
               Getopt::Long, IO, JPL, lib, Math::BigInt, Math::Complex,
               Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
               podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect,
               Pod::Usage, pod2usage, Pod::Text and Pod::Man, SDBM_File,
               Sys::Syslog, Sys::Hostname, Term::ANSIColor, Time::Local,
               Win32, XSLoader, DBM Filters

           Pragmata
       Utility Changes
           dprofpp
           find2perl
           h2xs
           perlcc
           perldoc
           The Perl Debugger
       Improved Documentation
           perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
           perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod,
           perlhack.pod, perlintern.pod, perllexwarn.pod, perlnumber.pod,
           perlopentut.pod, perlreftut.pod, perltootc.pod, perltodo.pod,
           perlunicode.pod

       Performance enhancements
           Simple sort() using { $a <=> $b } and the like are optimized
           Optimized assignments to lexical variables
           Faster subroutine calls
           delete(), each(), values() and hash iteration are faster
       Installation and Configuration Improvements
           -Dusethreads means something different
           New Configure flags
           Threadedness and 64-bitness now more daring
           Long Doubles
           -Dusemorebits
           -Duselargefiles
           installusrbinperl
           SOCKS support
           "-A" flag
           Enhanced Installation Directories
       Platform specific changes
           Supported platforms
           DOS
           OS390 (OpenEdition MVS)
           VMS
           Win32
       Significant bug fixes
           <HANDLE> on empty files
           "eval '...'" improvements
           All compilation errors are true errors
           Implicitly closed filehandles are safer
           Behavior of list slices is more consistent
           "(\$)" prototype and $foo{a}
           "goto &sub" and AUTOLOAD
           "-bareword" allowed under "use integer"
           Failures in DESTROY()
           Locale bugs fixed
           Memory leaks
           Spurious subroutine stubs after failed subroutine calls
           Taint failures under "-U"
           END blocks and the "-c" switch
           Potential to leak DATA filehandles
       New or Changed Diagnostics
           "%s" variable %s masks earlier declaration in same %s, "my sub" not
           yet implemented, "our" variable %s redeclared, '!' allowed only
           after types %s, / cannot take a count, / must be followed by a, A
           or Z, / must be followed by a*, A* or Z*, / must follow a numeric
           type, /%s/: Unrecognized escape \\%c passed through, /%s/:
           Unrecognized escape \\%c in character class passed through, /%s/
           should probably be written as "%s", %s() called too early to check
           prototype, %s argument is not a HASH or ARRAY element, %s argument
           is not a HASH or ARRAY element or slice, %s argument is not a
           subroutine name, %s package attribute may clash with future
           reserved word: %s, (in cleanup) %s, <> should be quotes, Attempt to
           join self, Bad evalled substitution pattern, Bad realloc() ignored,
           Bareword found in conditional, Binary number >
           0b11111111111111111111111111111111 non-portable, Bit vector size >
           32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
           filesystem of script "%s", Can't declare class for non-scalar %s in
           "%s", Can't declare %s in "%s", Can't ignore signal CHLD, forcing
           to default, Can't modify non-lvalue subroutine call, Can't read
           CRTL environ, Can't remove %s: %s, skipping file, Can't return %s
           from lvalue subroutine, Can't weaken a nonreference, Character
           class [:%s:] unknown, Character class syntax [%s] belongs inside
           character classes, Constant is not %s reference, constant(%s): %s,
           CORE::%s is not a keyword, defined(@array) is deprecated,
           defined(%hash) is deprecated, Did not produce a valid header, (Did
           you mean "local" instead of "our"?), Document contains no data,
           entering effective %s failed, false [] range "%s" in regexp,
           Filehandle %s opened only for output, flock() on closed filehandle
           %s, Global symbol "%s" requires explicit package name, Hexadecimal
           number > 0xffffffff non-portable, Ill-formed CRTL environ value
           "%s", Ill-formed message in prime_env_iter: |%s|, Illegal binary
           digit %s, Illegal binary digit %s ignored, Illegal number of bits
           in vec, Integer overflow in %s number, Invalid %s attribute: %s,
           Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
           separator character %s in attribute list, Invalid separator
           character %s in subroutine attribute list, leaving effective %s
           failed, Lvalue subs returning %s not implemented yet, Method %s not
           permitted, Missing %sbrace%s on \N{}, Missing command in piped
           open, Missing name in "my sub", No %s specified for -%c, No package
           name allowed for variable %s in "our", No space allowed after -%c,
           no UTC offset information; assuming local time is UTC, Octal number
           > 037777777777 non-portable, panic: del_backref, panic: kid popen
           errno read, panic: magic_killbackrefs, Parentheses missing around
           "%s" list, Possible unintended interpolation of %s in string,
           Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME :
           ATTRS" instead, Premature end of script headers, Repeat count in
           pack overflows, Repeat count in unpack overflows, realloc() of
           freed memory ignored, Reference is already weak, setpgrp can't take
           arguments, Strange *+?{} on zero-length expression, switching
           effective %s is not implemented, This Perl can't reset CRTL environ
           elements (%s), This Perl can't set CRTL environ elements (%s=%s),
           Too late to run %s block, Unknown open() mode '%s', Unknown process
           %x sent message to prime_env_iter: %s, Unrecognized escape \\%c
           passed through, Unterminated attribute parameter in attribute list,
           Unterminated attribute list, Unterminated attribute parameter in
           subroutine attribute list, Unterminated subroutine attribute list,
           Value of CLI symbol "%s" too long, Version number must be a
           constant number

       New tests
       Incompatible Changes
           Perl Source Incompatibilities
               CHECK is a new keyword, Treatment of list slices of undef has
               changed, Format of $English::PERL_VERSION is different,
               Literals of the form 1.2.3 parse differently, Possibly changed
               pseudo-random number generator, Hashing function for hash keys
               has changed, "undef" fails on read only values, Close-on-exec
               bit may be set on pipe and socket handles, Writing "$$1" to
               mean "${$}1" is unsupported, delete(), each(), values() and
               "\(%h)", vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
               Text of some diagnostic output has changed, "%@" has been
               removed, Parenthesized not() behaves like a list operator,
               Semantics of bareword prototype "(*)" have changed, Semantics
               of bit operators may have changed on 64-bit platforms, More
               builtins taint their results

           C Source Incompatibilities
               "PERL_POLLUTE", "PERL_IMPLICIT_CONTEXT", "PERL_POLLUTE_MALLOC"

           Compatible C Source API Changes
               "PATCHLEVEL" is now "PERL_VERSION"

           Binary Incompatibilities
       Known Problems
           Thread test failures
           EBCDIC platforms not supported
           In 64-bit HP-UX the lib/io_multihomed test may hang
           NEXTSTEP 3.3 POSIX test failure
           Tru64 (aka Digital UNIX, aka DEC OSF/1) lib/sdbm test failure with
           gcc
           UNICOS/mk CC failures during Configure run
           Arrow operator and arrays
           Experimental features
               Threads, Unicode, 64-bit support, Lvalue subroutines, Weak
               references, The pseudo-hash data type, The Compiler suite,
               Internal implementation of file globbing, The DB module, The
               regular expression code constructs:

       Obsolete Diagnostics
           Character class syntax [: :] is reserved for future extensions,
           Ill-formed logical name |%s| in prime_env_iter, In string, @%s now
           must be written as \@%s, Probable precedence problem on %s, regexp
           too big, Use of "$$<digit>" to mean "${$}<digit>" is deprecated

       Reporting Bugs
       SEE ALSO
       HISTORY

       perl5005delta - what's new for perl5.005


       DESCRIPTION
       About the new versioning system
       Incompatible Changes
           WARNING:  This version is not binary compatible with Perl 5.004.
           Default installation structure has changed
           Perl Source Compatibility
           C Source Compatibility
           Binary Compatibility
           Security fixes may affect compatibility
           Relaxed new mandatory warnings introduced in 5.004
           Licensing
       Core Changes
           Threads
           Compiler
           Regular Expressions
               Many new and improved optimizations, Many bug fixes, New
               regular expression constructs, New operator for precompiled
               regular expressions, Other improvements, Incompatible changes

           Improved malloc()
           Quicksort is internally implemented
           Reliable signals
           Reliable stack pointers
           More generous treatment of carriage returns
           Memory leaks
           Better support for multiple interpreters
           Behavior of local() on array and hash elements is now well-defined
           "%!" is transparently tied to the Errno module
           Pseudo-hashes are supported
           "EXPR foreach EXPR" is supported
           Keywords can be globally overridden
           $^E is meaningful on Win32
           "foreach (1..1000000)" optimized
           "Foo::" can be used as implicitly quoted package name
           "exists $Foo::{Bar::}" tests existence of a package
           Better locale support
           Experimental support for 64-bit platforms
           prototype() returns useful results on builtins
           Extended support for exception handling
           Re-blessing in DESTROY() supported for chaining DESTROY() methods
           All "printf" format conversions are handled internally
           New "INIT" keyword
           New "lock" keyword
           New "qr//" operator
           "our" is now a reserved word
           Tied arrays are now fully supported
           Tied handles support is better
           4th argument to substr
           Negative LENGTH argument to splice
           Magic lvalues are now more magical
           <> now reads in records
       Supported Platforms
           New Platforms
           Changes in existing support
       Modules and Pragmata
           New Modules
               B, Data::Dumper, Dumpvalue, Errno, File::Spec,
               ExtUtils::Installed, ExtUtils::Packlist, Fatal, IPC::SysV,
               Test, Tie::Array, Tie::Handle, Thread, attrs, fields, re

           Changes in existing modules
               Benchmark, Carp, CGI, Fcntl, Math::Complex, Math::Trig, POSIX,
               DB_File, MakeMaker, CPAN, Cwd

       Utility Changes
       Documentation Changes
       New Diagnostics
           Ambiguous call resolved as CORE::%s(), qualify as such or use &,
           Bad index while coercing array into hash, Bareword "%s" refers to
           nonexistent package, Can't call method "%s" on an undefined value,
           Can't check filesystem of script "%s" for nosuid, Can't coerce
           array into hash, Can't goto subroutine from an eval-string, Can't
           localize pseudo-hash element, Can't use %%! because Errno.pm is not
           available, Cannot find an opnumber for "%s", Character class syntax
           [. .] is reserved for future extensions, Character class syntax [:
           :] is reserved for future extensions, Character class syntax [= =]
           is reserved for future extensions, %s: Eval-group in insecure
           regular expression, %s: Eval-group not allowed, use re 'eval', %s:
           Eval-group not allowed at run time, Explicit blessing to ''
           (assuming package main), Illegal hex digit ignored, No such array
           field, No such field "%s" in variable %s of type %s, Out of memory
           during ridiculously large request, Range iterator outside integer
           range, Recursive inheritance detected while looking for method '%s'
           %s, Reference found where even-sized list expected, Undefined value
           assigned to typeglob, Use of reserved word "%s" is deprecated,
           perl: warning: Setting locale failed

       Obsolete Diagnostics
           Can't mktemp(), Can't write to temp file for -e: %s, Cannot open
           temporary file, regexp too big

       Configuration Changes
       BUGS
       SEE ALSO
       HISTORY

       perl5004delta - what's new for perl5.004


       DESCRIPTION
       Supported Environments
       Core Changes
           List assignment to %ENV works
           Change to "Can't locate Foo.pm in @INC" error
           Compilation option: Binary compatibility with 5.003
           $PERL5OPT environment variable
           Limitations on -M, -m, and -T options
           More precise warnings
           Deprecated: Inherited "AUTOLOAD" for non-methods
           Previously deprecated %OVERLOAD is no longer usable
           Subroutine arguments created only when they're modified
           Group vector changeable with $)
           Fixed parsing of $$<digit>, &$<digit>, etc.
           Fixed localization of $<digit>, $&, etc.
           No resetting of $. on implicit close
           "wantarray" may return undef
           "eval EXPR" determines value of EXPR in scalar context
           Changes to tainting checks
               No glob() or <*>, No spawning if tainted $CDPATH, $ENV,
               $BASH_ENV, No spawning if tainted $TERM doesn't look like a
               terminal name

           New Opcode module and revised Safe module
           Embedding improvements
           Internal change: FileHandle class based on IO::* classes
           Internal change: PerlIO abstraction interface
           New and changed syntax
               $coderef->(PARAMS)

           New and changed builtin constants
               __PACKAGE__

           New and changed builtin variables
               $^E, $^H, $^M

           New and changed builtin functions
               delete on slices, flock, printf and sprintf, keys as an lvalue,
               my() in Control Structures, pack() and unpack(), sysseek(), use
               VERSION, use Module VERSION LIST, prototype(FUNCTION), srand,
               $_ as Default, "m//gc" does not reset search position on
               failure, "m//x" ignores whitespace before ?*+{}, nested "sub{}"
               closures work now, formats work right on changing lexicals

           New builtin methods
               isa(CLASS), can(METHOD), VERSION( [NEED] )

           TIEHANDLE now supported
               TIEHANDLE classname, LIST, PRINT this, LIST, PRINTF this, LIST,
               READ this LIST, READLINE this, GETC this, DESTROY this

           Malloc enhancements
               -DPERL_EMERGENCY_SBRK, -DPACK_MALLOC, -DTWO_POT_OPTIMIZE

           Miscellaneous efficiency enhancements
       Support for More Operating Systems
           Win32
           Plan 9
           QNX
           AmigaOS
       Pragmata
           use autouse MODULE => qw(sub1 sub2 sub3), use blib, use blib 'dir',
           use constant NAME => VALUE, use locale, use ops, use vmsish

       Modules
           Required Updates
           Installation directories
           Module information summary
           Fcntl
           IO
           Math::Complex
           Math::Trig
           DB_File
           Net::Ping
           Object-oriented overrides for builtin operators
       Utility Changes
           pod2html
               Sends converted HTML to standard output

           xsubpp
               "void" XSUBs now default to returning nothing

       C Language API Changes
           "gv_fetchmethod" and "perl_call_sv", "perl_eval_pv", Extended API
           for manipulating hashes

       Documentation Changes
           perldelta, perlfaq, perllocale, perltoot, perlapio, perlmodlib,
           perldebug, perlsec

       New Diagnostics
           "my" variable %s masks earlier declaration in same scope, %s
           argument is not a HASH element or slice, Allocation too large: %lx,
           Allocation too large, Applying %s to %s will act on scalar(%s),
           Attempt to free nonexistent shared string, Attempt to use reference
           as lvalue in substr, Bareword "%s" refers to nonexistent package,
           Can't redefine active sort subroutine %s, Can't use bareword ("%s")
           as %s ref while "strict refs" in use, Cannot resolve method `%s'
           overloading `%s' in package `%s', Constant subroutine %s redefined,
           Constant subroutine %s undefined, Copy method did not return a
           reference, Died, Exiting pseudo-block via %s, Identifier too long,
           Illegal character %s (carriage return), Illegal switch in PERL5OPT:
           %s, Integer overflow in hex number, Integer overflow in octal
           number, internal error: glob failed, Invalid conversion in %s:
           "%s", Invalid type in pack: '%s', Invalid type in unpack: '%s',
           Name "%s::%s" used only once: possible typo, Null picture in
           formline, Offset outside string, Out of memory!, Out of memory
           during request for %s, panic: frexp, Possible attempt to put
           comments in qw() list, Possible attempt to separate words with
           commas, Scalar value @%s{%s} better written as $%s{%s}, Stub found
           while resolving method `%s' overloading `%s' in %s, Too late for
           "-T" option, untie attempted while %d inner references still exist,
           Unrecognized character %s, Unsupported function fork, Use of
           "$$<digit>" to mean "${$}<digit>" is deprecated, Value of %s can be
           "0"; test with defined(), Variable "%s" may be unavailable,
           Variable "%s" will not stay shared, Warning: something's wrong,
           Ill-formed logical name |%s| in prime_env_iter, Got an error from
           DosAllocMem, Malformed PERLLIB_PREFIX, PERL_SH_DIR too long,
           Process terminated by SIG%s

       BUGS
       SEE ALSO
       HISTORY

       perlartistic - the Perl Artistic License


       SYNOPSIS
       DESCRIPTION
       The "Artistic License"
           Preamble
           Definitions
               "Package", "Standard Version", "Copyright Holder", "You",
               "Reasonable copying fee", "Freely Available"

           Conditions
               a), b), c), d), a), b), c), d)

       perlgpl - the GNU General Public License, version 2


       SYNOPSIS
       DESCRIPTION
       GNU GENERAL PUBLIC LICENSE

       perlaix, README.aix - Perl version 5 on IBM Unix (AIX) systems


       DESCRIPTION
           Compiling Perl 5 on AIX
           OS level
           Building Dynamic Extensions on AIX
           The IBM ANSI C Compiler
           The usenm option
           Using GNU's gcc for building perl
           Using Large Files with Perl
           Threaded Perl
           64-bit Perl
           AIX 4.2 and extensions using C++ with statics
       AUTHOR
       DATE

       perlamiga - Perl under Amiga OS


       NOTE
       SYNOPSIS
       DESCRIPTION
           Prerequisites for Compiling Perl on AmigaOS
               Unix emulation for AmigaOS: ixemul.library, Version of Amiga OS

           Starting Perl programs under AmigaOS
           Shortcomings of Perl under AmigaOS
       INSTALLATION
       Accessing documentation
           Manpages for Perl on AmigaOS
           Perl HTML Documentation on AmigaOS
           Perl GNU Info Files on AmigaOS
           Perl LaTeX Documentation on AmigaOS
       BUILDING PERL ON AMIGAOS
           Build Prerequisites for Perl on AmigaOS
           Getting the Perl Source for AmigaOS
           Making Perl on AmigaOS
           Testing Perl on AmigaOS
           Installing the built Perl on AmigaOS
       PERL 5.8.0 BROKEN IN AMIGAOS
       AUTHORS
       SEE ALSO

       perlapollo, README.apollo - Perl version 5 on Apollo DomainOS


       DESCRIPTION
       AUTHOR

       perlbeos, README.beos - Perl version 5.8+ on BeOS


       DESCRIPTION
       BUILD AND INSTALL
           Requirements
           Configure
           Build
           Install
       KNOWN PROBLEMS
       CONTACT

       perlbs2000, README.BS2000 - building and installing Perl for BS2000.


       SYNOPSIS
       DESCRIPTION
           gzip on BS2000
           bison on BS2000
           Unpacking Perl Distribution on BS2000
           Compiling Perl on BS2000
           Testing Perl on BS2000
           Installing Perl on BS2000
           Using Perl in the Posix-Shell of BS2000
           Using Perl in "native" BS2000
           Floating point anomalies on BS2000
           Using PerlIO and different encodings on ASCII and EBCDIC partitions
       AUTHORS
       SEE ALSO
           Mailing list
       HISTORY

       perlce - Perl for WinCE


       Building Perl for WinCE
           DESCRIPTION
           General explanations on cross-compiling WinCE
           BUILD
               Microsoft Embedded Visual Tools, Microsoft Visual C++, Rainer
               Keuchel's celib-sources, Rainer Keuchel's console-sources, go
               to "./win32" subdirectory, edit file
               "./win32/ce-helpers/compile.bat", run      compile.bat, run
               compile.bat dist

       Using Perl on WinCE
           DESCRIPTION
           LIMITATIONS
           ENVIRONMENT
               PERL5LIB, PATH, TMP, UNIXROOTPATH, ROWS/COLS, HOME,
               CONSOLEFONTSIZE

           REGISTRY
           XS
           BUGS
           INSTALLATION
       ACKNOWLEDGEMENTS
       History of WinCE port
       AUTHORS
           Rainer Keuchel <coyxc@rainer-keuchel.de>, Vadim Konovalov

       perlcygwin, README.cygwin - Perl for Cygwin


       SYNOPSIS
       PREREQUISITES FOR COMPILING PERL ON CYGWIN
           Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)
           Cygwin Configuration
               "PATH", nroff, Permissions

       CONFIGURE PERL ON CYGWIN
           Stripping Perl Binaries on Cygwin
           Optional Libraries for Perl on Cygwin
               "-lcrypt", "-lgdbm_compat" ("use GDBM_File"), "-ldb" ("use
               DB_File"), "cygserver" ("use IPC::SysV"), "-lutil"

           Configure-time Options for Perl on Cygwin
               "-Uusedl", "-Uusemymalloc", "-Uuseperlio", "-Dusemultiplicity",
               "-Duse64bitint", "-Duselongdouble", "-Dusethreads",
               "-Duselargefiles", "-Dmksymlinks"

           Suspicious Warnings on Cygwin
               Win9x and "d_eofnblk", Compiler/Preprocessor defines

       MAKE ON CYGWIN
       TEST ON CYGWIN
           File Permissions on Cygwin
           NDBM_File and ODBM_File do not work on FAT filesystems
           "fork()" failures in io_* tests
       Specific features of the Cygwin port
           Script Portability on Cygwin
               Pathnames, Text/Binary, PerlIO, .exe, Cygwin vs. Windows
               process ids, Cygwin vs. Windows errors, "chown()",
               Miscellaneous

           Prebuilt methods:
               "Cwd::cwd", "Cygwin::pid_to_winpid", "Cygwin::winpid_to_pid",
               "Cygwin::win_to_posix_path", "Cygwin::posix_to_win_path",
               "Cygwin::mount_table()", "Cygwin::mount_flags",
               "Cygwin::is_binmount"

       INSTALL PERL ON CYGWIN
       MANIFEST ON CYGWIN
           Documentation, Build, Configure, Make, Install, Tests, Compiled
           Perl Source, Compiled Module Source, Perl Modules/Scripts, Perl
           Module Tests

       BUGS ON CYGWIN
       AUTHORS
       HISTORY

       perldgux - Perl under DG/UX.


       SYNOPSIS
       DESCRIPTION
       BUILDING PERL ON DG/UX
           Non-threaded Perl on DG/UX
           Threaded Perl on DG/UX
           Testing Perl on DG/UX
           Installing the built perl on DG/UX
       AUTHOR
       SEE ALSO

       perldos - Perl under DOS, W31, W95.


       SYNOPSIS
       DESCRIPTION
           Prerequisites for Compiling Perl on DOS
               DJGPP, Pthreads

           Shortcomings of Perl under DOS
           Building Perl on DOS
           Testing Perl on DOS
           Installation of Perl on DOS
       BUILDING AND INSTALLING MODULES ON DOS
           Building Prerequisites for Perl on DOS
           Unpacking CPAN Modules on DOS
           Building Non-XS Modules on DOS
           Building XS Modules on DOS
       AUTHOR
       SEE ALSO

       perlepoc, README.epoc - Perl for EPOC


       SYNOPSIS
       INTRODUCTION
       INSTALLING PERL ON EPOC
       STARTING PERL ON EPOC
           Editors on Epoc
           Features of Perl on Epoc
           Restrictions of Perl on Epoc
           Compiling Perl 5 on the EPOC cross compiling environment
       SUPPORT STATUS OF PERL ON EPOC
       AUTHOR
       LAST UPDATE

       perlfreebsd, README.freebsd - Perl version 5 on FreeBSD systems


       DESCRIPTION
           FreeBSD core dumps from readdir_r with ithreads
           $^X doesn't always contain a full path in FreeBSD
           Perl will no longer be part of "base FreeBSD"
       AUTHOR

       perlhpux, README.hpux - Perl version 5 on Hewlett-Packard Unix (HP-UX)
       systems


       DESCRIPTION
           Using perl as shipped with HP-UX
           Using perl from HP's porting centre
           Compiling Perl 5 on HP-UX
           PA-RISC
           Portability Between PA-RISC Versions
           PA-RISC 1.0
           PA-RISC 1.1
           PA-RISC 2.0
           Itanium Processor Family (IPF) and HP-UX
           Itanium, Itanium 2 & Madison 6
           Building Dynamic Extensions on HP-UX
           The HP ANSI C Compiler
           The GNU C Compiler
           Using Large Files with Perl on HP-UX
           Threaded Perl on HP-UX
           64-bit Perl on HP-UX
           Oracle on HP-UX
           GDBM and Threads on HP-UX
           NFS filesystems and utime(2) on HP-UX
           perl -P and // and HP-UX
           HP-UX Kernel Parameters (maxdsiz) for Compiling Perl
       nss_delete core dump from op/pwent or op/grent
       Miscellaneous
       AUTHOR
       DATE

       perlhurd, README.hurd - Perl version 5 on Hurd


       DESCRIPTION
           Known Problems with Perl on Hurd
       AUTHOR

       perlirix, README.irix - Perl version 5 on Irix systems


       DESCRIPTION
           Building 32-bit Perl in Irix
           Building 64-bit Perl in Irix
           About Compiler Versions of Irix
           Linker Problems in Irix
           Malloc in Irix
           Building with threads in Irix
           Irix 5.3
       AUTHOR

       perllinux, README.linux - Perl version 5 on Linux systems


       DESCRIPTION
           Experimental Support for Sun Studio Compilers for Linux OS
       AUTHOR

       perlmachten, README.machten - Perl version 5 on Power MachTen systems


       DESCRIPTION
           Perl version 5.8.x and greater not supported
           Compiling Perl 5.6.x on MachTen
           Failures during "make test" on MachTen
               op/lexassign.t, pragma/warnings.t

           Building external modules on MachTen
       AUTHOR
       DATE

       perlmacos, README.macos - Perl under Mac OS (Classic)


       SYNOPSIS
       DESCRIPTION
       AUTHOR
       DATE

       perlmacosx, README.macosx - Perl under Mac OS X


       SYNOPSIS
       DESCRIPTION
           Installation Prefix
           SDK support
           Universal Binary support
           64-bit PPC support
           libperl and Prebinding
           Updating Apple's Perl
           Known problems
           MacPerl
           Carbon
           Cocoa
       Starting From Scratch
       AUTHOR
       DATE

       perlmint, README.mint - Perl version 5 on Atari MiNT


       DESCRIPTION
       Known problems with Perl on MiNT
       AUTHOR

       perlmpeix, README.mpeix - Perl/iX for HP e3000 MPE


       SYNOPSIS
       NOTE
       Binary distribution from HP
       What's New in Perl for MPE/iX
       Welcome to Perl/iX
       System Requirements for Perl/iX
       How to Obtain Perl/iX
       Perl/iX Distribution Contents Highlights
           README, INSTALL, LIBSHP3K, PERL, .cpan/, lib/, man/,
           public_html/feedback.cgi, src/perl-5.6.0-mpe

       How to Compile Perl/iX
            4,  6

       Getting Started with Perl/iX
       MPE/iX Implementation Considerations
       Known Perl/iX Bugs Under Investigation
       Perl/iX To-Do List
       Perl/iX Change History
       AUTHOR

       perlnetware - Perl for NetWare


       DESCRIPTION
       BUILD
           Tools & SDK
           Setup
               SetNWBld.bat, Buildtype.bat

           Make
           Interpreter
           Extensions
       INSTALL
       BUILD NEW EXTENSIONS
       ACKNOWLEDGEMENTS
       AUTHORS
       DATE

       perlopenbsd, README.openbsd - Perl version 5 on OpenBSD systems


       DESCRIPTION
           OpenBSD core dumps from getprotobyname_r and getservbyname_r with
           ithreads
       AUTHOR

       perlos2 - Perl under OS/2, DOS, Win0.3*, Win0.95 and WinNT.


       SYNOPSIS
       DESCRIPTION
           Target
           Other OSes
           Prerequisites
               EMX, RSX, HPFS, pdksh

           Starting Perl programs under OS/2 (and DOS and...)
           Starting OS/2 (and DOS) programs under Perl
       Frequently asked questions
           "It does not work"
           I cannot run external programs
           I cannot embed perl into my program, or use perl.dll from my
           program.
               Is your program EMX-compiled with "-Zmt -Zcrtdll"?, Did you use
               ExtUtils::Embed?

           "``" and pipe-"open" do not work under DOS.
           Cannot start "find.exe "pattern" file"
       INSTALLATION
           Automatic binary installation
               "PERL_BADLANG", "PERL_BADFREE", Config.pm

           Manual binary installation
               Perl VIO and PM executables (dynamically linked), Perl_ VIO
               executable (statically linked), Executables for Perl utilities,
               Main Perl library, Additional Perl modules, Tools to compile
               Perl modules, Manpages for Perl and utilities, Manpages for
               Perl modules, Source for Perl documentation, Perl manual in
               .INF format, Pdksh

           Warning
       Accessing documentation
           OS/2 .INF file
           Plain text
           Manpages
           HTML
           GNU "info" files
           PDF files
           "LaTeX" docs
       BUILD
           The short story
           Prerequisites
           Getting perl source
           Application of the patches
           Hand-editing
           Making
           Testing
               A lot of "bad free", Process terminated by SIGTERM/SIGINT,
               op/fs.t, op/stat.t

           Installing the built perl
           "a.out"-style build
       Building a binary distribution
       Building custom .EXE files
           Making executables with a custom collection of statically loaded
           extensions
           Making executables with a custom search-paths
       Build FAQ
           Some "/" became "\" in pdksh.
           'errno' - unresolved external
           Problems with tr or sed
           Some problem (forget which ;-)
           Library ... not found
           Segfault in make
           op/sprintf test failure
       Specific (mis)features of OS/2 port
           "setpriority", "getpriority"
           "system()"
           "extproc" on the first line
           Additional modules:
           Prebuilt methods:
               "File::Copy::syscopy", "DynaLoader::mod2fname",
               "Cwd::current_drive()",
                "Cwd::sys_chdir(name)",  "Cwd::change_drive(name)",
               "Cwd::sys_is_absolute(name)", "Cwd::sys_is_rooted(name)",
               "Cwd::sys_is_relative(name)", "Cwd::sys_cwd(name)",
               "Cwd::sys_abspath(name, dir)",  "Cwd::extLibpath([type])",
               "Cwd::extLibpath_set( path [, type ] )",
               "OS2::Error(do_harderror,do_exception)",
               "OS2::Errors2Drive(drive)", OS2::SysInfo(), OS2::BootDrive(),
               "OS2::MorphPM(serve)", "OS2::UnMorphPM(serve)",
               "OS2::Serve_Messages(force)", "OS2::Process_Messages(force [,
               cnt])", "OS2::_control87(new,mask)", OS2::get_control87(),
               "OS2::set_control87_em(new=MCW_EM,mask=MCW_EM)",
               "OS2::DLLname([how [, \&xsub]])"

           Prebuilt variables:
               $OS2::emx_rev, $OS2::emx_env, $OS2::os_ver, $OS2::is_aout,
               $OS2::can_fork, $OS2::nsyserror

           Misfeatures
           Modifications
               "popen", "tmpnam", "tmpfile", "ctermid", "stat", "mkdir",
               "rmdir", "flock"

           Identifying DLLs
           Centralized management of resources
               "HAB", "HMQ", Treating errors reported by OS/2 API,
               "CheckOSError(expr)", "CheckWinError(expr)",
               "SaveWinError(expr)",
               "SaveCroakWinError(expr,die,name1,name2)",
               "WinError_2_Perl_rc", "FillWinError", "FillOSError(rc)",
               Loading DLLs and ordinals in DLLs

       Perl flavors
           perl.exe
           perl_.exe
           perl__.exe
           perl___.exe
           Why strange names?
           Why dynamic linking?
           Why chimera build?
       ENVIRONMENT
           "PERLLIB_PREFIX"
           "PERL_BADLANG"
           "PERL_BADFREE"
           "PERL_SH_DIR"
           "USE_PERL_FLOCK"
           "TMP" or "TEMP"
       Evolution
           Text-mode filehandles
           Priorities
           DLL name mangling: pre 5.6.2
           DLL name mangling: 5.6.2 and beyond
               Global DLLs, specific DLLs, "BEGINLIBPATH" and "ENDLIBPATH", .
               from "LIBPATH"

           DLL forwarder generation
           Threading
           Calls to external programs
           Memory allocation
           Threads
               "COND_WAIT", os2.c

       BUGS
       AUTHOR
       SEE ALSO

       perlos390, README.os390 - building and installing Perl for OS/390 and
       z/OS


       SYNOPSIS
       DESCRIPTION
           Tools
           Unpacking Perl distribution on OS/390
           Setup and utilities for Perl on OS/390
           Configure Perl on OS/390
           Build, Test, Install Perl on OS/390
           Build Anomalies with Perl on OS/390
           Testing Anomalies with Perl on OS/390
           Installation Anomalies with Perl on OS/390
           Usage Hints for Perl on OS/390
           Floating Point Anomalies with Perl on OS/390
           Modules and Extensions for Perl on OS/390
       AUTHORS
       SEE ALSO
           Mailing list for Perl on OS/390
       HISTORY

       perlos400, README.os400 - Perl version 5 on OS/400


       DESCRIPTION
           Compiling Perl for OS/400 PASE
           Installing Perl in OS/400 PASE
           Using Perl in OS/400 PASE
           Known Problems
           Perl on ILE
       AUTHORS

       perlplan9 - Plan 9-specific documentation for Perl


       DESCRIPTION
           Invoking Perl
           What's in Plan 9 Perl
           What's not in Plan 9 Perl
           Perl5 Functions not currently supported in Plan 9 Perl
           Signals in Plan 9 Perl
       COMPILING AND INSTALLING PERL ON PLAN 9
           Installing Perl Documentation on Plan 9
       BUGS
       Revision date
       AUTHOR

       perlqnx, README.qnx - Perl version 5 on QNX


       DESCRIPTION
           Required Software for Compiling Perl on QNX4
               /bin/sh, ar, nm, cpp, make

           Outstanding Issues with Perl on QNX4
           QNX auxiliary files
               qnx/ar, qnx/cpp

           Outstanding issues with perl under QNX6
       AUTHOR

       perlriscos, README.riscos - Perl version 5 for RISC OS


       DESCRIPTION
       BUILD
       AUTHOR

       perlsolaris, README.solaris - Perl version 5 on Solaris systems


       DESCRIPTION
           Solaris Version Numbers.
       RESOURCES
           Solaris FAQ, Precompiled Binaries, Solaris Documentation

       SETTING UP
           File Extraction Problems on Solaris.
           Compiler and Related Tools on Solaris.
           Environment for Compiling perl on Solaris
       RUN CONFIGURE.
           64-bit perl on Solaris.
           Threads in perl on Solaris.
           Malloc Issues with perl on Solaris.
       MAKE PROBLEMS.
           Dynamic Loading Problems With GNU as and GNU ld, ld.so.1: ./perl:
           fatal: relocation error:, dlopen: stub interception failed, #error
           "No DATAMODEL_NATIVE specified", sh: ar: not found

       MAKE TEST
           op/stat.t test 4 in Solaris
           nss_delete core dump from op/pwent or op/grent
       PREBUILT BINARIES OF PERL FOR SOLARIS.
       RUNTIME ISSUES FOR PERL ON SOLARIS.
           Limits on Numbers of Open Files on Solaris.
       SOLARIS-SPECIFIC MODULES.
       SOLARIS-SPECIFIC PROBLEMS WITH MODULES.
           Proc::ProcessTable on Solaris
           BSD::Resource on Solaris
           Net::SSLeay on Solaris
       SunOS 4.x
       AUTHOR

       perlsymbian, README.symbian - Perl version 5 on Symbian OS


       DESCRIPTION
           Compiling Perl on Symbian
           Compilation problems
           PerlApp
           sisify.pl
           Using Perl in Symbian
       TO DO
       WARNING
       NOTE
       AUTHOR
       COPYRIGHT
       LICENSE
       HISTORY

       perltru64, README.tru64 - Perl version 5 on Tru64 (formerly known as
       Digital UNIX formerly known as DEC OSF/1) systems


       DESCRIPTION
           Compiling Perl 5 on Tru64
           Using Large Files with Perl on Tru64
           Threaded Perl on Tru64
           Long Doubles on Tru64
           DB_File tests failing on Tru64
           64-bit Perl on Tru64
           Warnings about floating-point overflow when compiling Perl on Tru64
       Testing Perl on Tru64
       ext/ODBM_File/odbm Test Failing With Static Builds
       Perl Fails Because Of Unresolved Symbol sockatmark
       AUTHOR

       perluts - Perl under UTS


       SYNOPSIS
       DESCRIPTION
       BUILDING PERL ON UTS
       Installing the built perl on UTS
       AUTHOR

       perlvmesa, README.vmesa - building and installing Perl for VM/ESA.


       SYNOPSIS
       DESCRIPTION
           Unpacking Perl Distribution on VM/ESA
           Setup Perl and utilities on VM/ESA
           Configure Perl on VM/ESA
           Testing Anomalies of Perl on VM/ESA
           Usage Hints for Perl on VM/ESA
       AUTHORS
       SEE ALSO
           Mailing list for Perl on VM/ESA

       perlvms - VMS-specific documentation for Perl


       DESCRIPTION
       Installation
       Organization of Perl Images
           Core Images
           Perl Extensions
           Installing static extensions
           Installing dynamic extensions
       File specifications
           Syntax
           Filename Case
           Symbolic Links
           Wildcard expansion
           Pipes
       PERL5LIB and PERLLIB
       The Perl Forked Debugger
       PERL_VMS_EXCEPTION_DEBUG
       Command line
           I/O redirection and backgrounding
           Command line switches
               -i, -S, -u

       Perl functions
           File tests, backticks, binmode FILEHANDLE, crypt PLAINTEXT, USER,
           die, dump, exec LIST, fork, getpwent, getpwnam, getpwuid, gmtime,
           kill, qx//, select (system call), stat EXPR, system LIST, time,
           times, unlink LIST, utime LIST, waitpid PID,FLAGS

       Perl variables
           %ENV, CRTL_ENV, CLISYM_[LOCAL], Any other string, $!, $^E, $?, $|

       Standard modules with VMS-specific differences
           SDBM_File
       Revision date
       AUTHOR

       perlvos, README.vos - Perl for Stratus VOS


       SYNOPSIS
       BUILDING PERL FOR VOS
       INSTALLING PERL IN VOS
       USING PERL IN VOS
           Restrictions of Perl on VOS
           Handling of underflow and overflow
       TEST STATUS
       SUPPORT STATUS
       AUTHOR
       LAST UPDATE

       perlwin32 - Perl under Windows


       SYNOPSIS
       DESCRIPTION
           Setting Up Perl on Win32
               Make, Command Shell, Borland C++, Microsoft Visual C++,
               Microsoft Visual C++ 2008 Express Edition Beta 2, Microsoft
               Visual C++ 2005 Express Edition, Microsoft Visual C++ Toolkit
               2003, Microsoft Platform SDK 64-bit Compiler, MinGW release 3
               with gcc, MinGW release 1 with gcc

           Building
           Testing Perl on Win32
           Installation of Perl on Win32
           Usage Hints for Perl on Win32
               Environment Variables, File Globbing, Using perl from the
               command line, Building Extensions, Command-line Wildcard
               Expansion, Win32 Specific Extensions, Notes on 64-bit Windows

           Running Perl Scripts
           Miscellaneous Things
       BUGS AND CAVEATS
       ACKNOWLEDGEMENTS
       AUTHORS
           Gary Ng <71564.1743@CompuServe.COM>, Gurusamy Sarathy
           <gsar@activestate.com>, Nick Ing-Simmons <nick@ing-simmons.net>,
           Jan Dubois <jand@activestate.com>, Steve Hay
           <steve.hay@uk.radan.com>

       SEE ALSO
       HISTORY

PRAGMA DOCUMENTATION
       attrs - set/get attributes of a subroutine (deprecated)


       SYNOPSIS
       DESCRIPTION
           method, locked

       re - Perl pragma to alter regular expression behaviour


       SYNOPSIS
       DESCRIPTION
           'taint' mode
           'eval' mode
           'debug' mode
           'Debug' mode
               Compile related options, COMPILE, PARSE, OPTIMISE, TRIEC, DUMP,
               Execute related options, EXECUTE, MATCH, TRIEE, INTUIT, Extra
               debugging options, EXTRA, BUFFERS, TRIEM, STATE, STACK,
               OPTIMISEM, OFFSETS, OFFSETSDBG, Other useful flags, ALL, All,
               MORE, More

           Exportable Functions
               is_regexp($ref), regexp_pattern($ref), regmust($ref),
               regname($name,$all), regnames($all), regnames_count()

       SEE ALSO

       threadshared::shared, threads::shared - Perl extension for sharing data
       structures between threads

       VERSION
       SYNOPSIS
       DESCRIPTION
       EXPORT
       FUNCTIONS
           share VARIABLE, is_shared VARIABLE, lock VARIABLE, cond_wait
           VARIABLE, cond_wait CONDVAR, LOCKVAR, cond_timedwait VARIABLE,
           ABS_TIMEOUT, cond_timedwait CONDVAR, ABS_TIMEOUT, LOCKVAR,
           cond_signal VARIABLE, cond_broadcast VARIABLE

       OBJECTS
       NOTES
       BUGS AND LIMITATIONS
       SEE ALSO
       AUTHOR

       threads - Perl interpreter-based threads


       VERSION
       SYNOPSIS
       DESCRIPTION
           $thr = threads->create(FUNCTION, ARGS), $thr->join(),
           $thr->detach(), threads->detach(), threads->self(), $thr->tid(),
           threads->tid(), "$thr", threads->object($tid), threads->yield(),
           threads->list(), threads->list(threads::all),
           threads->list(threads::running), threads->list(threads::joinable),
           $thr1->equal($thr2), async BLOCK;, $thr->error(), $thr->_handle(),
           threads->_handle()

       EXITING A THREAD
           threads->exit(), threads->exit(status), die(), exit(status), use
           threads 'exit' => 'threads_only', threads->create({'exit' =>
           'thread_only'}, ...), $thr->set_thread_exit_only(boolean),
           threads->set_thread_exit_only(boolean)

       THREAD STATE
           $thr->is_running(), $thr->is_joinable(), $thr->is_detached(),
           threads->is_detached()

       THREAD CONTEXT
           Explicit context
           Implicit context
           $thr->wantarray()
           threads->wantarray()
       THREAD STACK SIZE
           threads->get_stack_size();, $size = $thr->get_stack_size();,
           $old_size = threads->set_stack_size($new_size);, use threads
           ('stack_size' => VALUE);, $ENV{'PERL5_ITHREADS_STACK_SIZE'},
           threads->create({'stack_size' => VALUE}, FUNCTION, ARGS), $thr2 =
           $thr1->create(FUNCTION, ARGS)

       THREAD SIGNALLING
           $thr->kill('SIG...');

       WARNINGS
           Perl exited with active threads:, Thread creation failed:
           pthread_create returned #, Thread # terminated abnormally: ..,
           Using minimum thread stack size of #, Thread creation failed:
           pthread_attr_setstacksize(SIZE) returned 22

       ERRORS
           This Perl not built to support threads, Cannot change stack size of
           an existing thread, Cannot signal threads without safe signals,
           Unrecognized signal name: ..

       BUGS AND LIMITATIONS
           Thread-safe modules, Using non-thread-safe modules, Current working
           directory, Environment variables, Parent-child threads, Creating
           threads inside special blocks, Unsafe signals, Perl has been built
           with "PERL_OLD_SIGNALS" (see "perl -V"), The environment variable
           "PERL_SIGNALS" is set to "unsafe" (see "PERL_SIGNALS" in perlrun),
           The module Perl::Unsafe::Signals is used, Returning closures from
           threads, Returning objects from threads, Perl Bugs and the CPAN
           Version of threads

       REQUIREMENTS
       SEE ALSO
       AUTHOR
       ACKNOWLEDGEMENTS

       attributes - get/set subroutine or variable attributes


       SYNOPSIS
       DESCRIPTION
           Built-in Attributes
               locked, method, lvalue

           Available Subroutines
               get, reftype

           Package-specific Attribute Handling
               FETCH_type_ATTRIBUTES, MODIFY_type_ATTRIBUTES

           Syntax of Attribute Lists
       EXPORTS
           Default exports
           Available exports
           Export tags defined
       EXAMPLES
       SEE ALSO

       autouse - postpone load of modules until a function is used


       SYNOPSIS
       DESCRIPTION
       WARNING
       AUTHOR
       SEE ALSO

       base - Establish an ISA relationship with base classes at compile time


       SYNOPSIS
       DESCRIPTION
       DIAGNOSTICS
           Base class package "%s" is empty, Class 'Foo' tried to inherit from
           itself

       HISTORY
       CAVEATS
       SEE ALSO

       bigint - Transparent BigInteger support for Perl


       SYNOPSIS
       DESCRIPTION
           use integer vs. use bigint
           Options
               a or accuracy, p or precision, t or trace, hex, oct, l, lib,
               try or only, v or version

           Math Library
           Internal Format
           Sign
           Methods
               inf(), NaN(), e, PI, bexp(), bpi(), upgrade(), in_effect()

           MATH LIBRARY
           Caveat
       CAVAETS
           in_effect(), hex()/oct()

       MODULES USED
       EXAMPLES
       LICENSE
       SEE ALSO
       AUTHORS

       bignum - Transparent BigNumber support for Perl


       SYNOPSIS
       DESCRIPTION
           Options
               a or accuracy, p or precision, t or trace, l or lib, hex, oct,
               v or version

           Methods
           Caveats
               inf(), NaN(), e, PI(), bexp(), bpi(), upgrade(), in_effect()

           Math Library
           INTERNAL FORMAT
           SIGN
       CAVAETS
           in_effect(), hex()/oct()

       MODULES USED
       EXAMPLES
       LICENSE
       SEE ALSO
       AUTHORS

       bigrat - Transparent BigNumber/BigRational support for Perl


       SYNOPSIS
       DESCRIPTION
           Modules Used
           Math Library
           Sign
           Methods
               inf(), NaN(), e, PI, bexp(), bpi(), upgrade(), in_effect()

           MATH LIBRARY
           Cavaet
           Options
               a or accuracy, p or precision, t or trace, l or lib, hex, oct,
               v or version

       CAVAETS
           in_effect(), hex()/oct()

       EXAMPLES
                   perl -Mbigrat -le 'print sqrt(33)'
                   perl -Mbigrat -le 'print 2*255'
                   perl -Mbigrat -le 'print 4.5+2*255'
                   perl -Mbigrat -le 'print 3/7 + 5/7 + 8/3'
                   perl -Mbigrat -le 'print 12->is_odd()';
                   perl -Mbignum=l,GMP -le 'print 7 ** 7777'

       LICENSE
       SEE ALSO
       AUTHORS

       blib - Use MakeMaker's uninstalled version of a package


       SYNOPSIS
       DESCRIPTION
       BUGS
       AUTHOR

       bytes - Perl pragma to force byte semantics rather than character
       semantics


       SYNOPSIS
       DESCRIPTION
       LIMITATIONS
       SEE ALSO

       charnames - define character names for "\N{named}" string literal
       escapes


       SYNOPSIS
       DESCRIPTION
       ALIASES
       CUSTOM ALIASES
           Anonymous hashes
           Alias file
           Alias shortcut
       charnames::viacode(code)
       charnames::vianame(name)
       CUSTOM TRANSLATORS
       ILLEGAL CHARACTERS
       BUGS

       constant - Perl pragma to declare constants


       SYNOPSIS
       DESCRIPTION
       NOTES
           List constants
           Defining multiple constants at once
           Magic constants
       TECHNICAL NOTES
       CAVEATS
       BUGS
       AUTHORS
       COPYRIGHT

       diagnostics, splain - produce verbose warning diagnostics


       SYNOPSIS
       DESCRIPTION
           The "diagnostics" Pragma
           The splain Program
       EXAMPLES
       INTERNALS
       BUGS
       AUTHOR

       encoding - allows you to write your script in non-ascii or non-utf8


       SYNOPSIS
       ABSTRACT
           Literal Conversions
           PerlIO layers for "STD(IN|OUT)"
           Implicit upgrading for byte strings
           Side effects
           Side effects
           Side effects
       FEATURES THAT REQUIRE 5.8.1
           "NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle

       USAGE
           use encoding [ENCNAME] ;, use encoding ENCNAME [ STDIN =>
           ENCNAME_IN ...] ;, use encoding ENCNAME Filter=>1;, no encoding;

       The Filter Option
           Filter-related changes at Encode version 1.87
       CAVEATS
           NOT SCOPED
           DO NOT MIX MULTIPLE ENCODINGS
           tr/// with ranges
               Legend of characters above

       EXAMPLE - Greekperl
       KNOWN PROBLEMS
           literals in regex that are longer than 127 bytes, EBCDIC, format,
           Thread safety

           The Logic of :locale
       HISTORY
       SEE ALSO

       encoding::warnings - Warn on implicit encoding conversions


       VERSION
       SYNOPSIS
       DESCRIPTION
           Overview of the problem
           Detecting the problem
           Solving the problem
               Upgrade both sides to unicode-strings, Downgrade both sides to
               byte-strings, Specify the encoding for implicit byte-string
               upgrading, PerlIO layers for STDIN and STDOUT, Literal
               conversions, Implicit upgrading for byte-strings

       CAVEATS
       SEE ALSO
       AUTHORS
       COPYRIGHT

       feature - Perl pragma to enable new syntactic features


       SYNOPSIS
       DESCRIPTION
           Lexical effect
           "no feature"
           The 'switch' feature
           The 'say' feature
           the 'state' feature
       FEATURE BUNDLES
       IMPLICIT LOADING

       fields - compile-time class fields


       SYNOPSIS
       DESCRIPTION
           new, phash

       SEE ALSO

       filetest - Perl pragma to control the filetest permission operators

       SYNOPSIS
       DESCRIPTION
           Consider this carefully
           The "access" sub-pragma
           Limitation with regard to "_"

       if - "use" a Perl module if a condition holds


       SYNOPSIS
       DESCRIPTION
       BUGS
       AUTHOR

       integer - Perl pragma to use integer arithmetic instead of floating
       point


       SYNOPSIS
       DESCRIPTION

       less - perl pragma to request less of something


       SYNOPSIS
       DESCRIPTION
       FOR MODULE AUTHORS
           "BOOLEAN = less->of( FEATURE )"
           "FEATURES = less->of()"
       CAVEATS
           This probably does nothing, This works only on 5.10+

       lib - manipulate @INC at compile time


       SYNOPSIS
       DESCRIPTION
           Adding directories to @INC
           Deleting directories from @INC
           Restoring original @INC
       CAVEATS
       NOTES
       SEE ALSO
       AUTHOR

       locale - Perl pragma to use and avoid POSIX locales for built-in
       operations


       SYNOPSIS
       DESCRIPTION

       mro - Method Resolution Order


       SYNOPSIS
       DESCRIPTION
       OVERVIEW
       The C3 MRO
           What is C3?
           How does C3 work
       Functions
           mro::get_linear_isa($classname[, $type])
           mro::set_mro($classname, $type)
           mro::get_mro($classname)
           mro::get_isarev($classname)
           mro::is_universal($classname)
           mro::invalidate_all_method_caches()
           mro::method_changed_in($classname)
           mro::get_pkg_gen($classname)
           next::method
           next::can
           maybe::next::method
       SEE ALSO
           The original Dylan paper
               <http://www.webcom.com/haahr/dylan/linearization-oopsla96.html>

           The prototype Perl 6 Object Model uses C3
               <http://svn.openfoundry.org/pugs/perl5/Perl6-MetaModel/>

           Parrot now uses C3
               <http://aspn.activestate.com/ASPN/Mail/Message/perl6-internals/2746631>,
               <http://use.perl.org/~autrijus/journal/25768>

           Python 2.3 MRO related links
               <http://www.python.org/2.3/mro.html>,
               <http://www.python.org/2.2.2/descrintro.html#mro>

           C3 for TinyCLOS
               <http://www.call-with-current-continuation.org/eggs/c3.html>

           Class::C3
               Class::C3

       AUTHOR

       open - perl pragma to set default PerlIO layers for input and output

       SYNOPSIS
       DESCRIPTION
       NONPERLIO FUNCTIONALITY
       IMPLEMENTATION DETAILS
       SEE ALSO

       ops - Perl pragma to restrict unsafe operations when compiling


       SYNOPSIS
       DESCRIPTION
       SEE ALSO

       overload - Package for overloading Perl operations


       SYNOPSIS
       DESCRIPTION
           Declaration of overloaded functions
           Calling Conventions for Binary Operations
               FALSE, TRUE, "undef"

           Calling Conventions for Unary Operations
           Calling Conventions for Mutators
               "++" and "--", "x=" and other assignment versions

           Overloadable Operations
               Arithmetic operations, Comparison operations, Bit operations,
               Increment and decrement, Transcendental functions, Boolean,
               string and numeric conversion, Iteration, Dereferencing,
               Special

           Inheritance and overloading
               Strings as values of "use overload" directive, Overloading of
               an operation is inherited by derived classes

       SPECIAL SYMBOLS FOR "use overload"
           Last Resort
           Fallback
               "undef", TRUE, defined, but FALSE

           Smart Match
           Copy Constructor
               Example

       MAGIC AUTOGENERATION
           Assignment forms of arithmetic operations, Conversion operations,
           Increment and decrement, "abs($a)", Unary minus, Negation,
           Concatenation, Comparison operations, Iterator, Dereferencing, Copy
           operator

       Minimal set of overloaded operations
       Losing overloading
       Run-time Overloading
       Public functions
           overload::StrVal(arg), overload::Overloaded(arg),
           overload::Method(obj,op)

       Overloading constants
           integer, float, binary, q, qr

       IMPLEMENTATION
       Metaphor clash
       Cookbook
           Two-face scalars
           Two-face references
           Symbolic calculator
           Really symbolic calculator
       AUTHOR
       DIAGNOSTICS
           Odd number of arguments for overload::constant, `%s' is not an
           overloadable type, `%s' is not a code reference

       BUGS

       sigtrap - Perl pragma to enable simple signal handling

       SYNOPSIS
       DESCRIPTION
       OPTIONS
           SIGNAL HANDLERS
               stack-trace, die, handler your-handler

           SIGNAL LISTS
               normal-signals, error-signals, old-interface-signals

           OTHER
               untrapped, any, signal, number

       EXAMPLES

       sort - perl pragma to control sort() behaviour

       SYNOPSIS
       DESCRIPTION
       CAVEATS

       strict - Perl pragma to restrict unsafe constructs


       SYNOPSIS
       DESCRIPTION
           "strict refs", "strict vars", "strict subs"

       HISTORY

       subs - Perl pragma to predeclare sub names

       SYNOPSIS
       DESCRIPTION

       threadshared, threads::shared - Perl extension for sharing data
       structures between threads


       VERSION
       SYNOPSIS
       DESCRIPTION
       EXPORT
       FUNCTIONS
           share VARIABLE, is_shared VARIABLE, lock VARIABLE, cond_wait
           VARIABLE, cond_wait CONDVAR, LOCKVAR, cond_timedwait VARIABLE,
           ABS_TIMEOUT, cond_timedwait CONDVAR, ABS_TIMEOUT, LOCKVAR,
           cond_signal VARIABLE, cond_broadcast VARIABLE

       OBJECTS
       NOTES
       BUGS AND LIMITATIONS
       SEE ALSO
       AUTHOR

       utf8 - Perl pragma to enable/disable UTF-8 (or UTF-EBCDIC) in source
       code


       SYNOPSIS
       DESCRIPTION
           Utility functions
               $num_octets = utf8::upgrade($string), $success =
               utf8::downgrade($string[, FAIL_OK]), utf8::encode($string),
               $success = utf8::decode($string), $flag =
               utf8::is_utf8(STRING), $flag = utf8::valid(STRING)

       BUGS
       SEE ALSO

       vars - Perl pragma to predeclare global variable names (obsolete)


       SYNOPSIS
       DESCRIPTION

       version - Perl extension for Version Objects


       SYNOPSIS
       DESCRIPTION
           BEST PRACTICES
               Be consistent, Be careful

           Using modules that use version.pm
               Numeric versions always work, Extended version work sometimes

           What IS a version
               Numeric Versions, Extended Versions

           Numeric Versions
           Extended Versions
           Numeric Alpha Versions
           Object Methods
               New Operator, qv(), Normal Form, Numification, Stringification,
               Comparison operators, Logical Operators

           Quoting
           What about v-strings?
           Types of Versions Objects
               Ordinary versions, Alpha Versions

           Replacement UNIVERSAL::VERSION
       SUBCLASSING
       EXPORT
       AUTHOR
       SEE ALSO

       vmsish - Perl pragma to control VMS-specific language features


       SYNOPSIS
       DESCRIPTION
           "vmsish status", "vmsish exit", "vmsish time", "vmsish hushed"

       warnings - Perl pragma to control optional warnings


       SYNOPSIS
       DESCRIPTION
           use warnings::register, warnings::enabled(),
           warnings::enabled($category), warnings::enabled($object),
           warnings::warn($message), warnings::warn($category, $message),
           warnings::warn($object, $message), warnings::warnif($message),
           warnings::warnif($category, $message), warnings::warnif($object,
           $message)

       warnings::register - warnings import function


       SYNOPSIS
       DESCRIPTION

MODULE DOCUMENTATION
       AnyDBM_File - provide framework for multiple DBMs


       SYNOPSIS
       DESCRIPTION
           DBM Comparisons
               [0], [1], [2], [3]

       SEE ALSO

       Archive::Extract - A generic archive extracting mechanism

       SYNOPSIS
       DESCRIPTION
       METHODS
           $ae = Archive::Extract->new(archive => '/path/to/archive',[type =>
           TYPE])
               tar, tgz, gz, Z, zip, bz2, tbz

       $ae->extract( [to => '/output/path'] )
           $ae->extract_path, $ae->files

       ACCESSORS
           $ae->error([BOOL])
           $ae->extract_path
           $ae->files
           $ae->archive
           $ae->type
           $ae->types
       $ae->is_tgz
       $ae->is_tar
       $ae->is_gz
       $ae->is_Z
       $ae->is_zip
       $ae->bin_tar
       $ae->bin_gzip
       $ae->bin_unzip
       HOW IT WORKS
       CAVEATS
           File Extensions
           Supporting Very Large Files
           Bunzip2 support of arbitrary extensions.
       GLOBAL VARIABLES
           $Archive::Extract::DEBUG
           $Archive::Extract::WARN
           $Archive::Extract::PREFER_BIN
       TODO
           Mime magic support

       BUG REPORTS
       AUTHOR
       COPYRIGHT

       Archive::Tar - module for manipulations of tar archives


       SYNOPSIS
       DESCRIPTION
       Object Methods
           Archive::Tar->new( [$file, $compressed] )
       $tar->read ( $filename|$handle, $compressed, {opt => 'val'} )
           limit, extract

       $tar->contains_file( $filename )
       $tar->extract( [@filenames] )
       $tar->extract_file( $file, [$extract_path] )
       $tar->list_files( [\@properties] )
       $tar->get_files( [@filenames] )
       $tar->get_content( $file )
       $tar->replace_content( $file, $content )
       $tar->rename( $file, $new_name )
       $tar->remove (@filenamelist)
       $tar->clear
       $tar->write ( [$file, $compressed, $prefix] )
       $tar->add_files( @filenamelist )
       $tar->add_data ( $filename, $data, [$opthashref] )
           FILE, HARDLINK, SYMLINK, CHARDEV, BLOCKDEV, DIR, FIFO, SOCKET

       $tar->error( [$BOOL] )
       $tar->setcwd( $cwd );
       $bool = $tar->has_io_string
       $bool = $tar->has_perlio
       Class Methods
           Archive::Tar->create_archive($file, $compression, @filelist)
       Archive::Tar->list_archive ($file, $compressed, [\@properties])
       Archive::Tar->extract_archive ($file, $gzip)
       Archive::Tar->can_handle_compressed_files
       GLOBAL VARIABLES
           $Archive::Tar::FOLLOW_SYMLINK
           $Archive::Tar::CHOWN
           $Archive::Tar::CHMOD
           $Archive::Tar::DO_NOT_USE_PREFIX
           $Archive::Tar::DEBUG
           $Archive::Tar::WARN
           $Archive::Tar::error
           $Archive::Tar::INSECURE_EXTRACT_MODE
           $Archive::Tar::HAS_PERLIO
           $Archive::Tar::HAS_IO_STRING
       FAQ What's the minimum perl version required to run Archive::Tar?,
           Isn't Archive::Tar slow?, Isn't Archive::Tar heavier on memory than
           /bin/tar?, Can't you lazy-load data instead?, How much memory will
           an X kb tar file need?, What do you do with unsupported filetypes
           in an archive?, I'm using WinZip, or some other non-POSIX client,
           and files are not being extracted properly!, How do I extract only
           files that have property X from an archive?, How do I access .tar.Z
           files?, How do I handle Unicode strings?

       TODO
           Check if passed in handles are open for read/write, Allow archives
           to be passed in as string, Facilitate processing an opened
           filehandle of a compressed archive

       SEE ALSO
           The GNU tar specification, The PAX format specication, A comparison
           of GNU and POSIX tar standards;
           "http://www.delorie.com/gnu/docs/tar/tar_114.html", GNU tar intends
           to switch to POSIX compatibility, A Comparison between various tar
           implementations

       AUTHOR
       ACKNOWLEDGEMENTS
       COPYRIGHT

       Archive::Tar::File - a subclass for in-memory extracted file from
       Archive::Tar


       SYNOPSIS
       DESCRIPTION
           Accessors
               name, mode, uid, gid, size, mtime, chksum, type, linkname,
               magic, version, uname, gname, devmajor, devminor, prefix, raw

       Methods
           new( file => $path )
           new( data => $path, $data, $opt )
           new( chunk => $chunk )
       full_path
       validate
       has_content
       get_content
       get_content_by_ref
       replace_content( $content )
       rename( $new_name )
       Convenience methods
           is_file, is_dir, is_hardlink, is_symlink, is_chardev, is_blockdev,
           is_fifo, is_socket, is_longlink, is_label, is_unknown

       Attribute::Handlers - Simpler definition of attribute handlers


       VERSION
       SYNOPSIS
       DESCRIPTION
           [0], [1], [2], [3], [4], [5], [6], [7]

           Typed lexicals
           Type-specific attribute handlers
           Non-interpretive attribute handlers
           Phase-specific attribute handlers
           Attributes as "tie" interfaces
       EXAMPLES
       DIAGNOSTICS
           "Bad attribute type: ATTR(%s)", "Attribute handler %s doesn't
           handle %s attributes", "Declaration of %s attribute in package %s
           may clash with future reserved word", "Can't have two ATTR
           specifiers on one subroutine", "Can't autotie a %s", "Internal
           error: %s symbol went missing", "Won't be able to apply END
           handler"

       AUTHOR
       BUGS
       COPYRIGHT

       AutoLoader - load subroutines only on demand


       SYNOPSIS
       DESCRIPTION
           Subroutine Stubs
           Using AutoLoader's AUTOLOAD Subroutine
           Overriding AutoLoader's AUTOLOAD Subroutine
           Package Lexicals
           Not Using AutoLoader
           AutoLoader vs. SelfLoader
       CAVEATS
       SEE ALSO

       AutoSplit - split a package for autoloading


       SYNOPSIS
       DESCRIPTION
           $keep, $check, $modtime

           Multiple packages
       DIAGNOSTICS

       B - The Perl Compiler


       SYNOPSIS
       DESCRIPTION
       OVERVIEW
       Utility Functions
           Functions Returning "B::SV", "B::AV", "B::HV", and "B::CV" objects
               sv_undef, sv_yes, sv_no, svref_2object(SVREF),
               amagic_generation, init_av, check_av, unitcheck_av, begin_av,
               end_av, comppadlist, regex_padav, main_cv

           Functions for Examining the Symbol Table
               walksymtable(SYMREF, METHOD, RECURSE, PREFIX)

           Functions Returning "B::OP" objects or for walking op trees
               main_root, main_start, walkoptree(OP, METHOD),
               walkoptree_debug(DEBUG)

           Miscellaneous Utility Functions
               ppname(OPNUM), hash(STR), cast_I32(I), minus_c, cstring(STR),
               perlstring(STR), class(OBJ), threadsv_names

           Exported utility variabiles
               @optype, @specialsv_name

       OVERVIEW OF CLASSES
           SV-RELATED CLASSES
           B::SV Methods
               REFCNT, FLAGS, object_2svref

           B::IV Methods
               IV, IVX, UVX, int_value, needs64bits, packiv

           B::NV Methods
               NV, NVX

           B::RV Methods
               RV

           B::PV Methods
               PV, RV, PVX

           B::PVMG Methods
               MAGIC, SvSTASH

           B::MAGIC Methods
               MOREMAGIC, precomp, PRIVATE, TYPE, FLAGS, OBJ, PTR, REGEX

           B::PVLV Methods
               TARGOFF, TARGLEN, TYPE, TARG

           B::BM Methods
               USEFUL, PREVIOUS, RARE, TABLE

           B::GV Methods
               is_empty, NAME, SAFENAME, STASH, SV, IO, FORM, AV, HV, EGV, CV,
               CVGEN, LINE, FILE, FILEGV, GvREFCNT, FLAGS

           B::IO Methods
               LINES, PAGE, PAGE_LEN, LINES_LEFT, TOP_NAME, TOP_GV, FMT_NAME,
               FMT_GV, BOTTOM_NAME, BOTTOM_GV, SUBPROCESS, IoTYPE, IoFLAGS,
               IsSTD

           B::AV Methods
               FILL, MAX, ARRAY, ARRAYelt, OFF, AvFLAGS

           B::CV Methods
               STASH, START, ROOT, GV, FILE, DEPTH, PADLIST, OUTSIDE,
               OUTSIDE_SEQ, XSUB, XSUBANY, CvFLAGS, const_sv

           B::HV Methods
               FILL, MAX, KEYS, RITER, NAME, ARRAY, PMROOT

           OP-RELATED CLASSES
           B::OP Methods
               next, sibling, name, ppaddr, desc, targ, type, opt, flags,
               private, spare

           B::UNOP METHOD
               first

           B::BINOP METHOD
               last

           B::LOGOP METHOD
               other

           B::LISTOP METHOD
               children

           B::PMOP Methods
               pmreplroot, pmreplstart, pmnext, pmregexp, pmflags, extflags,
               precomp, pmoffset

           B::SVOP METHOD
               sv, gv

           B::PADOP METHOD
               padix

           B::PVOP METHOD
               pv

           B::LOOP Methods
               redoop, nextop, lastop

           B::COP Methods
               label, stash, stashpv, file, cop_seq, arybase, line, warnings,
               io, hints, hints_hash

       AUTHOR

       B::Concise - Walk Perl syntax tree, printing concise info about ops

       SYNOPSIS
       DESCRIPTION
       EXAMPLE
       OPTIONS
           Options for Opcode Ordering
               -basic, -exec, -tree

           Options for Line-Style
               -concise, -terse, -linenoise, -debug, -env

           Options for tree-specific formatting
               -compact, -loose, -vt, -ascii

           Options controlling sequence numbering
               -basen, -bigendian, -littleendian

           Other options
               -src, -stash="somepackage", -main, -nomain, -nobanner, -banner,
               -banneris => subref

           Option Stickiness
       ABBREVIATIONS
           OP class abbreviations
           OP flags abbreviations
       FORMATTING SPECIFICATIONS
           Special Patterns
               (x(exec_text;basic_text)x), (*(text)*), (*(text1;text2)*),
               (?(text1#varText2)?), ~

           # Variables
               #var, #varN, #Var, #addr, #arg, #class, #classsym, #coplabel,
               #exname, #extarg, #firstaddr, #flags, #flagval, #hints,
               #hintsval, #hyphseq, #label, #lastaddr, #name, #NAME, #next,
               #nextaddr, #noise, #private, #privval, #seq, #seqnum, #opt,
               #sibaddr, #svaddr, #svclass, #svval, #targ, #targarg,
               #targarglife, #typenum

       One-Liner Command tips
           perl -MO=Concise,bar foo.pl, perl -MDigest::MD5=md5 -MO=Concise,md5
           -e1, perl -MPOSIX -MO=Concise,_POSIX_ARG_MAX -e1, perl -MPOSIX
           -MO=Concise,a -e 'print _POSIX_SAVED_IDS', perl -MPOSIX
           -MO=Concise,a -e 'sub a{_POSIX_SAVED_IDS}', perl -MB::Concise -e
           'B::Concise::compile("-exec","-src", \%B::Concise::)->()'

       Using B::Concise outside of the O framework
           Example: Altering Concise Renderings
           set_style()
           set_style_standard($name)
           add_style()
           add_callback()
           Running B::Concise::compile()
           B::Concise::reset_sequence()
           Errors
       AUTHOR

       B::Debug - Walk Perl syntax tree, printing debug info about ops


       SYNOPSIS
       DESCRIPTION
       AUTHOR

       B::Deparse - Perl compiler backend to produce perl code


       SYNOPSIS
       DESCRIPTION
       OPTIONS
           -d, -fFILE, -l, -p, -P, -q, -sLETTERS, C, iNUMBER, T, vSTRING.,
           -xLEVEL

       USING B::Deparse AS A MODULE
           Synopsis
           Description
           new
           ambient_pragmas
               strict, $[, bytes, utf8, integer, re, warnings, hint_bits,
               warning_bits, %^H

           coderef2text
       BUGS
       AUTHOR

       B::Lint - Perl lint


       SYNOPSIS
       DESCRIPTION
       OPTIONS AND LINT CHECKS
           magic-diamond, context, implicit-read and implicit-write, bare-
           subs, dollar-underscore, private-names, undefined-subs, regexp-
           variables, all, none

       NON LINT-CHECK OPTIONS
           -u Package

       EXTENDING LINT
       TODO
           while(<FH>) stomps $_, strict oo, unchecked system calls, more
           tests, validate against older perls

       BUGS
       AUTHOR

       B::O, O - Generic interface to Perl Compiler backends


       SYNOPSIS
       DESCRIPTION
       CONVENTIONS
       IMPLEMENTATION
       BUGS
       AUTHOR

       B::Showlex - Show lexical variables used in functions or files


       SYNOPSIS
       DESCRIPTION
       EXAMPLES
           OPTIONS
       SEE ALSO
       TODO
       AUTHOR

       B::Terse - Walk Perl syntax tree, printing terse info about ops


       SYNOPSIS
       DESCRIPTION
       AUTHOR

       B::Xref - Generates cross reference reports for Perl programs


       SYNOPSIS
       DESCRIPTION
       OPTIONS
           "-oFILENAME", "-r", "-d", "-D[tO]"

       BUGS
       AUTHOR

       Benchmark - benchmark running times of Perl code


       SYNOPSIS
       DESCRIPTION
           Methods
               new, debug, iters

           Standard Exports
               timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE
               ]] ), timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff (
               T1, T2 ), timestr ( TIMEDIFF, [ STYLE, [ FORMAT ] ] )

           Optional Exports
               clearcache ( COUNT ), clearallcache ( ), cmpthese ( COUNT,
               CODEHASHREF, [ STYLE ] ), cmpthese ( RESULTSHASHREF, [ STYLE ]
               ), countit(TIME, CODE), disablecache ( ), enablecache ( ),
               timesum ( T1, T2 )

           :hireswallclock
       NOTES
       EXAMPLES
       INHERITANCE
       CAVEATS
       SEE ALSO
       AUTHORS
       MODIFICATION HISTORY

       CGI - Simple Common Gateway Interface Class


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
           PROGRAMMING STYLE
           CALLING CGI.PM ROUTINES
           CREATING A NEW QUERY OBJECT (OBJECT-ORIENTED STYLE):
           CREATING A NEW QUERY OBJECT FROM AN INPUT FILE
           FETCHING A LIST OF KEYWORDS FROM THE QUERY:
           FETCHING THE NAMES OF ALL THE PARAMETERS PASSED TO YOUR SCRIPT:
           FETCHING THE VALUE OR VALUES OF A SINGLE NAMED PARAMETER:
           SETTING THE VALUE(S) OF A NAMED PARAMETER:
           APPENDING ADDITIONAL VALUES TO A NAMED PARAMETER:
           IMPORTING ALL PARAMETERS INTO A NAMESPACE:
           DELETING A PARAMETER COMPLETELY:
           DELETING ALL PARAMETERS:
           HANDLING NON-URLENCODED ARGUMENTS
           DIRECT ACCESS TO THE PARAMETER LIST:
           FETCHING THE PARAMETER LIST AS A HASH:
           SAVING THE STATE OF THE SCRIPT TO A FILE:
           RETRIEVING CGI ERRORS
           USING THE FUNCTION-ORIENTED INTERFACE
               :cgi, :form, :html2, :html3, :html4, :netscape, :html,
               :standard, :all

           PRAGMAS
               -any, -compile, -nosticky, -tabindex, -no_undef_params,
               -no_xhtml, -nph, -newstyle_urls, -oldstyle_urls, -autoload,
               -no_debug, -debug, -private_tempfiles

           SPECIAL FORMS FOR IMPORTING HTML-TAG FUNCTIONS
               1. start_table() (generates a <table> tag), 2. end_table()
               (generates a </table> tag), 3. start_ul() (generates a <ul>
               tag), 4. end_ul() (generates a </ul> tag)

       GENERATING DYNAMIC DOCUMENTS
           CREATING A STANDARD HTTP HEADER:
           GENERATING A REDIRECTION HEADER
           CREATING THE HTML DOCUMENT HEADER
               Parameters:, 4, 5, 6..

           ENDING THE HTML DOCUMENT:
           CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:
           OBTAINING THE SCRIPT'S URL
               -absolute, -relative, -full, -path (-path_info), -query
               (-query_string), -base, -rewrite

           MIXING POST AND URL PARAMETERS
       CREATING STANDARD HTML ELEMENTS:
           PROVIDING ARGUMENTS TO HTML SHORTCUTS
           THE DISTRIBUTIVE PROPERTY OF HTML SHORTCUTS
           HTML SHORTCUTS AND LIST INTERPOLATION
           NON-STANDARD HTML SHORTCUTS
           AUTOESCAPING HTML
               $escaped_string = escapeHTML("unescaped string");, $charset =
               charset([$charset]);, $flag = autoEscape([$flag]);

           PRETTY-PRINTING HTML
       CREATING FILL-OUT FORMS:
           CREATING AN ISINDEX TAG
           STARTING AND ENDING A FORM
               application/x-www-form-urlencoded, multipart/form-data

           FORM ELEMENTS
               -name, -value, -values, -tabindex, -id, -override, -onChange,
               -onFocus, -onBlur, -onMouseOver, -onMouseOut, -onSelect

           CREATING A TEXT FIELD
               Parameters

           CREATING A BIG TEXT FIELD
           CREATING A PASSWORD FIELD
           CREATING A FILE UPLOAD FIELD
               Parameters

           CREATING A POPUP MENU
           CREATING AN OPTION GROUP
           CREATING A SCROLLING LIST
               Parameters:

           CREATING A GROUP OF RELATED CHECKBOXES
               Parameters:

           CREATING A STANDALONE CHECKBOX
               Parameters:

           CREATING A RADIO BUTTON GROUP
               Parameters:

           CREATING A SUBMIT BUTTON
               Parameters:

           CREATING A RESET BUTTON
           CREATING A DEFAULT BUTTON
           CREATING A HIDDEN FIELD
               Parameters:

           CREATING A CLICKABLE IMAGE BUTTON
               Parameters:, 3. The third option (-align, optional) is an
               alignment type, and may be TOP, BOTTOM or MIDDLE

           CREATING A JAVASCRIPT ACTION BUTTON
       HTTP COOKIES
           1. an expiration time, 2. a domain, 3. a path, 4. a "secure" flag,
           -name, -value, -path, -domain, -expires, -secure

       WORKING WITH FRAMES
           1. Create a <Frameset> document, 2. Specify the destination for the
           document in the HTTP header, 3. Specify the destination for the
           document in the <form> tag

       SUPPORT FOR JAVASCRIPT
           onLoad, onUnload, onSubmit, onClick, onChange, onFocus, onBlur,
           onSelect, onMouseOver, onMouseOut

       LIMITED SUPPORT FOR CASCADING STYLE SHEETS
       DEBUGGING
           DUMPING OUT ALL THE NAME/VALUE PAIRS
       FETCHING ENVIRONMENT VARIABLES
           Accept(), raw_cookie(), user_agent(), path_info(),
           path_translated(), remote_host(), script_name() Return the script
           name as a partial URL, for self-refering scripts, referer(),
           auth_type (), server_name (), virtual_host (), server_port (),
           virtual_port (), server_software (), remote_user (), user_name (),
           request_method(), content_type(), http(), https()

       USING NPH SCRIPTS
           In the use statement, By calling the nph() method:, By using -nph
           parameters

       Server Push
           multipart_init(), multipart_start(), multipart_end(),
           multipart_final()

       Avoiding Denial of Service Attacks
           $CGI::POST_MAX, $CGI::DISABLE_UPLOADS, 1. On a script-by-script
           basis, 2. Globally for all scripts

       COMPATIBILITY WITH CGI-LIB.PL
       AUTHOR INFORMATION
       CREDITS
           Matt Heffron (heffron@falstaff.css.beckman.com), James Taylor
           (james.taylor@srs.gov), Scott Anguish <sanguish@digifix.com>, Mike
           Jewell (mlj3u@virginia.edu), Timothy Shimmin
           (tes@kbs.citri.edu.au), Joergen Haegg (jh@axis.se), Laurent
           Delfosse (delfosse@delfosse.com), Richard Resnick
           (applepi1@aol.com), Craig Bishop (csb@barwonwater.vic.gov.au), Tony
           Curtis (tc@vcpc.univie.ac.at), Tim Bunce (Tim.Bunce@ig.co.uk), Tom
           Christiansen (tchrist@convex.com), Andreas Koenig
           (k@franz.ww.TU-Berlin.DE), Tim MacKenzie
           (Tim.MacKenzie@fulcrum.com.au), Kevin B. Hendricks
           (kbhend@dogwood.tyler.wm.edu), Stephen Dahmen
           (joyfire@inxpress.net), Ed Jordan (ed@fidalgo.net), David Alan
           Pisoni (david@cnation.com), Doug MacEachern (dougm@opengroup.org),
           Robin Houston (robin@oneworld.org), ...and many many more..

       A COMPLETE EXAMPLE OF A SIMPLE FORM-BASED SCRIPT
       BUGS
       SEE ALSO

       CGI::Apache - Backward compatibility module for CGI.pm


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
       AUTHOR INFORMATION
       BUGS
       SEE ALSO

       CGI::Carp, CGI::Carp - CGI routines for writing to the HTTPD (or other)
       error log


       SYNOPSIS
       DESCRIPTION
       REDIRECTING ERROR MESSAGES
       MAKING PERL ERRORS APPEAR IN THE BROWSER WINDOW
           Changing the default message
       DOING MORE THAN PRINTING A MESSAGE IN THE EVENT OF PERL ERRORS
       MAKING WARNINGS APPEAR AS HTML COMMENTS
       OVERRIDING THE NAME OF THE PROGRAM
       AUTHORS
       SEE ALSO

       CGI::Cookie - Interface to Netscape Cookies


       SYNOPSIS
       DESCRIPTION
       USING CGI::Cookie
           1. expiration date, 2. domain, 3. path, 4. secure flag, 4.
           httponly flag

           Creating New Cookies
           Sending the Cookie to the Browser
           Recovering Previous Cookies
           Manipulating Cookies
               name(), value(), domain(), path(), expires()

       AUTHOR INFORMATION
       BUGS
       SEE ALSO

       CGI::Fast - CGI Interface for Fast CGI


       SYNOPSIS
       DESCRIPTION
       OTHER PIECES OF THE PUZZLE
       WRITING FASTCGI PERL SCRIPTS
       INSTALLING FASTCGI SCRIPTS
       USING FASTCGI SCRIPTS AS CGI SCRIPTS
       EXTERNAL FASTCGI SERVER INVOCATION
           FCGI_SOCKET_PATH, FCGI_LISTEN_QUEUE

       CAVEATS
       AUTHOR INFORMATION
       BUGS
       SEE ALSO

       CGI::Pretty - module to produce nicely formatted HTML code


       SYNOPSIS
       DESCRIPTION
           Tags that won't be formatted
           Customizing the Indenting
       BUGS
       AUTHOR
       SEE ALSO

       CGI::Push - Simple Interface to Server Push


       SYNOPSIS
       DESCRIPTION
       USING CGI::Push
           -next_page, -last_page, -type, -delay, -cookie, -target, -expires,
           -nph

           Heterogeneous Pages
           Changing the Page Delay on the Fly
       INSTALLING CGI::Push SCRIPTS
       AUTHOR INFORMATION
       BUGS
       SEE ALSO

       CGI::Switch - Backward compatibility module for defunct CGI::Switch


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
       AUTHOR INFORMATION
       BUGS
       SEE ALSO

       CGI::Util - Internal utilities used by CGI module


       SYNOPSIS
       DESCRIPTION
       AUTHOR INFORMATION
       SEE ALSO

       CORE - Pseudo-namespace for Perl's core routines


       SYNOPSIS
       DESCRIPTION
       OVERRIDING CORE FUNCTIONS
       AUTHOR
       SEE ALSO

       CPAN - query, download and build perl modules from CPAN sites


       SYNOPSIS
       DESCRIPTION
           CPAN::shell([$prompt, $command]) Starting Interactive Mode
               Searching for authors, bundles, distribution files and modules,
               "get", "make", "test", "install", "clean" modules or
               distributions, "readme", "perldoc", "look" module or
               distribution, "ls" author, "ls" globbing_expression, "failed",
               Persistence between sessions, The "force" and the "fforce"
               pragma, Lockfile, Signals

           CPAN::Shell
           autobundle
           hosts
           mkmyconfig
           recent ***EXPERIMENTAL COMMAND***
           recompile
           report Bundle|Distribution|Module
           smoke ***EXPERIMENTAL COMMAND***
           upgrade [Module|/Regex/]...
           The four "CPAN::*" Classes: Author, Bundle, Module, Distribution
           Integrating local directories
       CONFIGURATION
           completion support, displaying some help: o conf help, displaying
           current values: o conf [KEY], changing of scalar values: o conf KEY
           VALUE, changing of list values: o conf KEY
           SHIFT|UNSHIFT|PUSH|POP|SPLICE|LIST, reverting to saved: o conf
           defaults, saving the config: o conf commit

           Config Variables
               "o conf <scalar option>", "o conf <scalar option> <value>", "o
               conf <list option>", "o conf <list option> [shift|pop]", "o
               conf <list option> [unshift|push|splice] <list>", interactive
               editing: o conf init [MATCH|LIST]

           CPAN::anycwd($path): Note on config variable getcwd
               cwd, getcwd, fastcwd, backtickcwd

           Note on the format of the urllist parameter
           The urllist parameter has CD-ROM support
           Maintaining the urllist parameter
           The "requires" and "build_requires" dependency declarations
           Configuration for individual distributions (Distroprefs)
           Filenames
           Fallback Data::Dumper and Storable
           Blueprint
           Language Specs
               comment [scalar], cpanconfig [hash], depends [hash] ***
               EXPERIMENTAL FEATURE ***, disabled [boolean], goto [string],
               install [hash], make [hash], match [hash], patches [array], pl
               [hash], test [hash]

           Processing Instructions
               args [array], commandline, eexpect [hash], env [hash], expect
               [array]

           Schema verification with "Kwalify"
           Example Distroprefs Files
       PROGRAMMER'S INTERFACE
           expand($type,@things), expandany(@things), Programming Examples

           Methods in the other Classes
               CPAN::Author::as_glimpse(), CPAN::Author::as_string(),
               CPAN::Author::email(), CPAN::Author::fullname(),
               CPAN::Author::name(), CPAN::Bundle::as_glimpse(),
               CPAN::Bundle::as_string(), CPAN::Bundle::clean(),
               CPAN::Bundle::contains(), CPAN::Bundle::force($method,@args),
               CPAN::Bundle::get(), CPAN::Bundle::inst_file(),
               CPAN::Bundle::inst_version(), CPAN::Bundle::uptodate(),
               CPAN::Bundle::install(), CPAN::Bundle::make(),
               CPAN::Bundle::readme(), CPAN::Bundle::test(),
               CPAN::Distribution::as_glimpse(),
               CPAN::Distribution::as_string(), CPAN::Distribution::author,
               CPAN::Distribution::pretty_id(), CPAN::Distribution::base_id(),
               CPAN::Distribution::clean(),
               CPAN::Distribution::containsmods(),
               CPAN::Distribution::cvs_import(), CPAN::Distribution::dir(),
               CPAN::Distribution::force($method,@args),
               CPAN::Distribution::get(), CPAN::Distribution::install(),
               CPAN::Distribution::install_tested(),
               CPAN::Distribution::isa_perl(),
               CPAN::Distribution::is_tested(), CPAN::Distribution::look(),
               CPAN::Distribution::make(), CPAN::Distribution::perldoc(),
               CPAN::Distribution::prefs(), CPAN::Distribution::prereq_pm(),
               CPAN::Distribution::readme(), CPAN::Distribution::reports(),
               CPAN::Distribution::read_yaml(), CPAN::Distribution::test(),
               CPAN::Distribution::uptodate(), CPAN::Index::force_reload(),
               CPAN::Index::reload(), CPAN::InfoObj::dump(),
               CPAN::Module::as_glimpse(), CPAN::Module::as_string(),
               CPAN::Module::clean(), CPAN::Module::cpan_file(),
               CPAN::Module::cpan_version(), CPAN::Module::cvs_import(),
               CPAN::Module::description(), CPAN::Module::distribution(),
               CPAN::Module::dslip_status(),
               CPAN::Module::force($method,@args), CPAN::Module::get(),
               CPAN::Module::inst_file(), CPAN::Module::available_file(),
               CPAN::Module::inst_version(),
               CPAN::Module::available_version(), CPAN::Module::install(),
               CPAN::Module::look(), CPAN::Module::make(),
               CPAN::Module::manpage_headline(), CPAN::Module::perldoc(),
               CPAN::Module::readme(), CPAN::Module::reports(),
               CPAN::Module::test(), CPAN::Module::uptodate(),
               CPAN::Module::userid()

           Cache Manager
           Bundles
       PREREQUISITES
       UTILITIES
           Finding packages and VERSION
           Debugging
               o debug package.., o debug -package.., o debug all, o debug
               number

           Floppy, Zip, Offline Mode
           Basic Utilities for Programmers
               has_inst($module), has_usable($module), instance($module)

       SECURITY
           Cryptographically signed modules
       EXPORT
       ENVIRONMENT
       POPULATE AN INSTALLATION WITH LOTS OF MODULES
       WORKING WITH CPAN.pm BEHIND FIREWALLS
           Three basic types of firewalls
               http firewall, ftp firewall, One way visibility, SOCKS, IP
               Masquerade

           Configuring lynx or ncftp for going through a firewall
       FAQ 1), 2), 3), 4), 5), 6), 7), 8), 9), 10), 11), 12), 13), 14), 15),
           16)

       COMPATIBILITY
           OLD PERL VERSIONS
           CPANPLUS
       SECURITY ADVICE
       BUGS
       AUTHOR
       LICENSE
       TRANSLATIONS
       SEE ALSO

       CPAN::API::HOWTO - a recipe book for programming with CPAN.pm


       RECIPES
           What distribution contains a particular module?
           What modules does a particular distribution contain?
       SEE ALSO
       LICENSE
       AUTHOR

       CPAN::FirstTime - Utility for CPAN::Config file Initialization


       SYNOPSIS
       DESCRIPTION

       auto_commit, build_cache, build_dir, build_dir_reuse,
       build_requires_install_policy, cache_metadata, check_sigs,
       colorize_output, colorize_print, colorize_warn, colorize_debug,
       commandnumber_in_prompt, ftp_passive, getcwd, histfile, histsize,
       inactivity_timeout, index_expire, inhibit_startup_message,
       keep_source_where, load_module_verbosity, makepl_arg, make_arg,
       make_install_arg, make_install_make_command, mbuildpl_arg, mbuild_arg,
       mbuild_install_arg, mbuild_install_build_command, pager,
       prefer_installer, prefs_dir, prerequisites_policy, randomize_urllist,
       scan_cache, shell, show_unparsable_versions, show_upload_date,
       show_zero_versions, tar_verbosity, term_is_latin, term_ornaments,
       test_report, use_sqlite, yaml_load_code, yaml_module

       LICENSE

       CPAN::Kwalify - Interface between CPAN.pm and Kwalify.pm

       SYNOPSIS
       DESCRIPTION
           _validate($schema_name, $data, $file, $doc), yaml($schema_name)

       AUTHOR
       LICENSE

       CPAN::Version - utility functions to compare CPAN versions


       SYNOPSIS
       DESCRIPTION
       LICENSE

       CPANPLUS - API & CLI access to the CPAN mirrors


       SYNOPSIS
       GUIDE TO DOCUMENTATION
           GENERAL USAGE
           API REFERENCE
       COMMANDLINE TOOLS
           STARTING AN INTERACTIVE SHELL
           BUILDING PACKAGES
           $bool = install( Module::Name | /A/AU/AUTHOR/Module-Name-1.tgz )
           $where = fetch( Module::Name | /A/AU/AUTHOR/Module-Name-1.tgz )
           $where = get( Module::Name | /A/AU/AUTHOR/Module-Name-1.tgz )
           shell()
       FAQ
       BUG REPORTS
       AUTHOR
       COPYRIGHT
       SEE ALSO
       CONTACT INFORMATION
           Bug reporting: bug-cpanplus@rt.cpan.org, Questions & suggestions:
           cpanplus-devel@lists.sourceforge.net

       CPANPLUS::Backend


       SYNOPSIS
       DESCRIPTION
       ENVIRONMENT
       METHODS
           $cb = CPANPLUS::Backend->new( [CONFIGURE_OBJ] )
               Provide a valid "CPANPLUS::Configure" object, No arguments

       $href = $cb->module_tree( [@modules_names_list] )
       $href = $cb->author_tree( [@author_names_list] )
       $conf = $cb->configure_object;
       $su = $cb->selfupdate_object;
       @mods = $cb->search( type => TYPE, allow => AREF, [data => AREF,
       verbose => BOOL] )
       $backend_rv = $cb->fetch( modules => \@mods )
       $backend_rv = $cb->extract( modules => \@mods )
       $backend_rv = $cb->install( modules => \@mods )
       $backend_rv = $cb->readme( modules => \@mods )
       $backend_rv = $cb->files( modules => \@mods )
       $backend_rv = $cb->distributions( modules => \@mods )
       $mod_obj = $cb->parse_module( module => $modname|$distname|$modobj|URI
       )
           Text::Bastardize, Text-Bastardize, Text-Bastardize-1.06,
           AYRNIEU/Text-Bastardize, AYRNIEU/Text-Bastardize-1.06,
           AYRNIEU/Text-Bastardize-1.06.tar.gz,
           http://example.com/Text-Bastardize-1.06.tar.gz,
           file:///tmp/Text-Bastardize-1.06.tar.gz

       $bool = $cb->reload_indices( [update_source => BOOL, verbose => BOOL]
       );
       $bool = $cb->flush(CACHE_NAME)
           "methods", "hosts", "modules", "lib", "load", "all"

       @mods = $cb->installed()
       $bool = $cb->local_mirror([path => '/dir/to/save/to', index_files =>
       BOOL, force => BOOL, verbose => BOOL] )
           path, index_files, force, verbose

       $file = $cb->autobundle([path => OUTPUT_PATH, force => BOOL, verbose =>
       BOOL])
       CUSTOM MODULE SOURCES
           %files = $cb->list_custom_sources
       $local_index = $cb->add_custom_source( uri => URI, [verbose => BOOL] );
       $local_index = $cb->remove_custom_source( uri => URI, [verbose => BOOL]
       );
       $bool = $cb->update_custom_source( [remote => URI] );
       $file = $cb->write_custom_source_index( path => /path/to/package/root,
       [to => /path/to/index/file, verbose => BOOL] );
       BUG REPORTS
       AUTHOR
       COPYRIGHT
       SEE ALSO

       CPANPLUS::Backend::RV


       SYNOPSIS
       DESCRIPTION
       METHODS
           new( ok => BOOL, args => DATA, rv => DATA, [function =>
           $method_name] )
               ok, args, rv, function

       BUG REPORTS
       AUTHOR
       COPYRIGHT

       CPANPLUS::Config


       DESCRIPTION
       CONFIGURATION
       Section 'conf'
           hosts

       base

       buildflags

       cpantest

       cpantest_mx

       debug

       dist_type

       email

       extractdir

       fetchdir

       flush

       force

       lib

       makeflags

       makemakerflags

       md5

       no_update

       passive

       prefer_bin

       prefer_makefile

       prereqs

       shell

       show_startup_tip

       signature

       skiptest

       storable

       timeout

       verbose

       write_install_log

       editor

       make

       pager

       shell

       sudo

       perlwrapper

       BUG REPORTS
       AUTHOR
       COPYRIGHT
       SEE ALSO

       CPANPLUS::Configure


       SYNOPSIS
       DESCRIPTION
       METHODS
           $Configure = CPANPLUS::Configure->new( load_configs => BOOL )
       $bool = $Configure->init( [rescan => BOOL])
       can_save( [$config_location] )
       $file = $conf->save( [$package_name] )
       options( type => TYPE )
       ACCESSORS
           get_SOMETHING( ITEM, [ITEM, ITEM, ... ] );
           set_SOMETHING( ITEM => VAL, [ITEM => VAL, ITEM => VAL, ... ] );
           add_SOMETHING( ITEM => VAL, [ITEM => VAL, ITEM => VAL, ... ] );
               set|get_conf, set|get_program, _set|_get_build,
               _set|_get_source, _set|_get_mirror, _set|_get_fetch

       BUG REPORTS
       AUTHOR
       COPYRIGHT
       SEE ALSO

       CPANPLUS::Dist


       SYNOPSIS
       DESCRIPTION
       ACCESSORS
           parent(), status()

       STATUS ACCESSORS
           created(), installed(), uninstalled(), dist()

       $dist = CPANPLUS::Dist->new( module => MODOBJ, [format => DIST_TYPE] );
       @dists = CPANPLUS::Dist->dist_types;
       prereq_satisfied( modobj => $modobj, version => $version_spec )
       _resolve_prereqs

       CPANPLUS::Dist::Base - Base class for custom distribution classes


       SYNOPSIS
       DESCRIPTION
       FLOW
       METHODS
       $bool = $Class->format_available
       $bool = $dist->init
       $bool = $dist->prepare
       $bool = $dist->create
       $bool = $dist->install
       $bool = $dist->uninstall

       CPANPLUS::Dist::Build


       SYNOPSIS
       DESCRIPTION
       ACCESSORS
           parent(), status()

       STATUS ACCESSORS
           build_pl (), build (), test (), prepared (), distdir (), created
           (), installed (), uninstalled (), _create_args (), _install_args
           (), _mb_object ()

       METHODS
           $bool = CPANPLUS::Dist::Build->format_available();
       $bool = $dist->init();
       $bool = $dist->prepare([perl => '/path/to/perl', buildflags =>
       'EXTRA=FLAGS', force => BOOL, verbose => BOOL])
       $dist->create([perl => '/path/to/perl', buildflags => 'EXTRA=FLAGS',
       prereq_target => TARGET, force => BOOL, verbose => BOOL, skiptest =>
       BOOL])
       $dist->install([verbose => BOOL, perl => /path/to/perl])
       KNOWN ISSUES
           Module::Build can not be upgraded using its own API (#13169),
           Module::Build does not provide access to install history (#9793)

       AUTHOR
       COPYRIGHT

       CPANPLUS::Dist::MM


       SYNOPSIS
       ACCESSORS
           parent(), status()

       STATUS ACCESSORS
           makefile (), make (), test (), prepared (), distdir (), created (),
           installed (), uninstalled (), _create_args (), _install_args ()

       METHODS
           $bool = $dist->format_available();
       $href = $dist->_find_prereqs( file => '/path/to/Makefile', [verbose =>
       BOOL])
       $bool = $dist->create([perl => '/path/to/perl', make =>
       '/path/to/make', makeflags => 'EXTRA=FLAGS', prereq_target => TARGET,
       skiptest => BOOL, force => BOOL, verbose => BOOL])
       $bool = $dist->install([make => '/path/to/make',  makemakerflags =>
       'EXTRA=FLAGS', force => BOOL, verbose => BOOL])
       $bool = $dist->write_makefile_pl([force => BOOL, verbose => BOOL])

       CPANPLUS::Dist::Sample -- Sample code to create your own Dist::* plugin


       Description.

       CPANPLUS::Error

       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
           cp_msg("message string" [,VERBOSE])
           msg()
           cp_error("error string" [,VERBOSE])
           error()
       CLASS METHODS
           CPANPLUS::Error->stack()
           CPANPLUS::Error->stack_as_string([TRACE])
           CPANPLUS::Error->flush()
       GLOBAL VARIABLES
           $ERROR_FH, $MSG_FH

       CPANPLUS::FAQ


       DESCRIPTION
       BUG REPORTS
       AUTHOR
       COPYRIGHT

       CPANPLUS::Hacking


       DESCRIPTION
       OBTAINING CPANPLUS
       INSTALLING CPANPLUS
       CONFIGURING CPANPLUS
       RUNNING CPANPLUS FROM DEVELOPMENT ENVIRONMENT
       RUNNING CPANPLUS TESTS
       FINDING BUGS
           Problem description, Program demonstrating the bug, [OPTIONAL] A
           patch to the test suite to test for the bug, [OPTIONAL] A patch to
           the code + tests + documentation

       SUPPLYING PATCHES
           In "diff -u" or "diff -c" format, From the root of the snapshot,
           Including patches for code + tests + docs, Sent per mail to
           cpanplus-devel@lists.sourceforge.net, With subject containing
           "[PATCH]" + description of the patch

       CPANPLUS::Internals


       SYNOPSIS
       DESCRIPTION
       ACCESSORS
           _conf, _id, _lib, _perl5lib

       METHODS
           $internals = CPANPLUS::Internals->_init( _conf => CONFIG_OBJ )
       $bool = $internals->_flush( list => \@caches )
       $bool = $internals->_register_callback( name => CALLBACK_NAME, code =>
       CODEREF );
           install_prerequisite, send_test_report, munge_test_report,
           edit_test_report, proceed_on_test_failure, munge_dist_metafile

       $bool = $internals->_add_to_includepath( directories => \@dirs )
       $id = CPANPLUS::Internals->_last_id
       $id = CPANPLUS::Internals->_store_id( $internals )
       $obj = CPANPLUS::Internals->_retrieve_id( $ID )
       CPANPLUS::Internals->_remove_id( $ID )
       @objs = CPANPLUS::Internals->_return_all_objects

       CPANPLUS::Internals::Extract


       SYNOPSIS
       DESCRIPTION
           $dir = _extract( module => $modobj, [perl => '/path/to/perl',
           extractdir => '/path/to/extract/to', prefer_bin => BOOL, verbose =>
           BOOL, force => BOOL] )
               module, extractdir, prefer_bin, perl, verbose, force

       CPANPLUS::Internals::Fetch


       SYNOPSIS
       DESCRIPTION
       METHODS
       $path = _fetch( module => $modobj, [fetchdir => '/path/to/save/to',
       fetch_from => 'scheme://path/to/fetch/from', verbose => BOOL, force =>
       BOOL, prefer_bin => BOOL] )
       _add_fail_host( host => $host_hashref )
       _host_ok( host => $host_hashref )

       CPANPLUS::Internals::Report


       SYNOPSIS
       DESCRIPTION
       METHODS
           $bool = $cb->_have_query_report_modules
           $bool = $cb->_have_send_report_modules
       @list = $cb->_query_report( module => $modobj, [all_versions => BOOL,
       verbose => BOOL] )
       $bool = $cb->_send_report( module => $modobj, buffer => $make_output,
       failed => BOOL, [save => BOOL, address => $email_to, dontcc => BOOL,
       verbose => BOOL, force => BOOL]);
           module, buffer, failed, save, address, dontcc, verbose, force

       CPANPLUS::Internals::Search


       SYNOPSIS
       DESCRIPTION
       METHODS
           _search_module_tree( type => TYPE, allow => \@regexex, [data =>
           \@previous_results ] )
               type, allow, data

       _search_author_tree( type => TYPE, allow => \@regexex, [data =>
       \@previous_results ] )
           type, allow, data

       _all_installed()

       CPANPLUS::Internals::Source

       SYNOPSIS
       DESCRIPTION
       METHODS
       $cb->_check_trees( [update_source => BOOL, path => PATH, verbose =>
       BOOL] )
           update_source, path, verbose

       $cb->__check_uptodate( file => $file, name => $name, [update_source =>
       BOOL, verbose => BOOL] )
           file, name, update_source, verbose

       $cb->_update_source( name => $name, [path => $path, verbose => BOOL] )
           name, path, verbose

       $cb->_build_trees( uptodate => BOOL, [use_stored => BOOL, path =>
       $path, verbose => BOOL] )
           uptodate, path, verbose, use_stored

       $cb->__retrieve_source(name => $name, [path => $path, uptodate => BOOL,
       verbose => BOOL])
           name, uptodate, path, verbose

       $cb->_save_source([verbose => BOOL, path => $path])
           path, verbose

       $cb->__create_author_tree([path => $path, uptodate => BOOL, verbose =>
       BOOL])
           uptodate, path, verbose

       $cb->_create_mod_tree([path => $path, uptodate => BOOL, verbose =>
       BOOL])
           uptodate, path, verbose

       $cb->__create_dslip_tree([path => $path, uptodate => BOOL, verbose =>
       BOOL])
           uptodate, path, verbose

       $cb->_dslip_defs ()
       $file = $cb->_add_custom_module_source( uri => URI, [verbose => BOOL]
       );
       $index = $cb->__custom_module_source_index_file( uri => $uri );
       $file = $cb->_remove_custom_module_source( uri => URI, [verbose =>
       BOOL] );
       %files = $cb->__list_custom_module_sources
       $bool = $cb->__update_custom_module_sources( [verbose => BOOL] );
       $ok = $cb->__update_custom_module_source
       $bool = $cb->__write_custom_module_index( path => /path/to/packages,
       [to => /path/to/index/file, verbose => BOOL] )
       $bool = $cb->__create_custom_module_entries( [verbose => BOOL] )

       CPANPLUS::Internals::Utils


       SYNOPSIS
       DESCRIPTION
       METHODS
           $cb->_mkdir( dir => '/some/dir' )
       $cb->_chdir( dir => '/some/dir' )
       $cb->_rmdir( dir => '/some/dir' );
       $cb->_perl_version ( perl => 'some/perl/binary' );
       $cb->_version_to_number( version => $version );
       $cb->_whoami
       _get_file_contents( file => $file );
       $cb->_mode_plus_w( file => '/path/to/file' );
       $uri = $cb->_host_to_uri( scheme => SCHEME, host => HOST, path => PATH
       );
       $cb->_vcmp( VERSION, VERSION );
       $cb->_home_dir
       $path = $cb->_safe_path( path => $path );
       ($pkg, $version, $ext) = $cb->_split_package_string( package =>
       PACKAGE_STRING );

       CPANPLUS::Module


       SYNOPSIS
       DESCRIPTION
       CLASS METHODS
           accessors ()
       ACCESSORS
           name, module, version, path, comment, package, description, dslip

       status, author, parent

       STATUS ACCESSORS
           installer_type, dist_cpan, dist, prereqs, signature, extract,
           fetch, readme, uninstall, created, installed, checksums,
           checksum_ok, checksum_value

       METHODS
           $self = CPANPLUS::Module::new( OPTIONS )
       $mod->package_name
       $mod->package_version
       $mod->package_extension
       $mod->package_is_perl_core
       $mod->module_is_supplied_with_perl_core( [version => $]] )
       $mod->is_bundle
       $mod->is_third_party
       $mod->third_party_information
       $clone = $self->clone
       $where = $self->fetch
       $path = $self->extract
       $type = $self->get_installer_type([prefer_makefile => BOOL])
       $dist = $self->dist([target => 'prepare|create', format =>
       DISTRIBUTION_TYPE, args => {key => val}]);
       $bool = $mod->prepare( )
           Convenience method around "install()" that prepares a module
           without actually building it. This is equivalent to invoking
           "install" with "target" set to "prepare"

       $bool = $mod->create( )
       $bool = $mod->test( )
       $bool = $self->install([ target => 'prepare|create|install', format =>
       FORMAT_TYPE, extractdir => DIRECTORY, fetchdir => DIRECTORY, prefer_bin
       => BOOL, force => BOOL, verbose => BOOL, ..... ]);
       $text = $self->readme
       $version = $self->installed_version()
       $where = $self->installed_file()
       $bool = $self->is_uptodate([version => VERSION_NUMBER])
       $href = $self->details()
       @list = $self->contains()
       @list_of_hrefs = $self->fetch_report()
       $bool = $self->uninstall([type => [all|man|prog])
       @modobj = $self->distributions()
       @list = $self->files ()
       @list = $self->directory_tree ()
       @list = $self->packlist ()
       @list = $self->validate ()
       $bool = $self->add_to_includepath;
       $path = $self->best_path_to_module_build();
       BUG REPORTS
       AUTHOR
       COPYRIGHT

       CPANPLUS::Module::Author


       SYNOPSIS
       DESCRIPTION
       ACCESSORS
           author, cpanid, email, parent

       METHODS
           $auth = CPANPLUS::Module::Author->new( author => AUTHOR_NAME,
           cpanid => CPAN_ID, _id => INTERNALS_ID [, email => AUTHOR_EMAIL] )
       @mod_objs = $auth->modules()
       @dists = $auth->distributions()
       CLASS METHODS
           accessors ()

       CPANPLUS::Module::Author::Fake


       SYNOPSIS
       DESCRIPTION
       METHODS
           new( _id => DIGIT )

       CPANPLUS::Module::Checksums


       SYNOPSIS
       DESCRIPTION
       METHODS
           $mod->checksums

       CPANPLUS::Module::Fake


       SYNOPSIS
       DESCRIPTION
       METHODS
           new( module => $mod, path => $path, package => $pkg, [_id => DIGIT]
           )

       CPANPLUS::inc


       DESCRIPTION

       CPANPLUS::inc - runtime inclusion of privately bundled modules

       SYNOPSIS
       DESCRIPTION
           Put a coderef at the beginning of @INC, Add the full path to the
           "CPANPLUS/inc" directory to "$ENV{PERL5LIB"

       METHODS
           CPANPLUS::inc->inc_path()
           CPANPLUS::inc->my_path()
           CPANPLUS::inc->installer_path()
       CPANPLUS::inc->original_perl5lib
       CPANPLUS::inc->original_perl5opt
       CPANPLUS::inc->original_inc
       CPANPLUS::inc->limited_perl5opt(@modules);
       CPANPLUS::inc->interesting_modules()
       INTERESTING MODULES
           Loop over your @INC, Check the version on every suitable module
           found in @INC

       DEBUG
       CAVEATS
           On multiple "use lib" calls, our coderef may not be the first in
           @INC, Non-directories in @INC

       CPANPLUSelfupdate, CPANPLUS::Selfupdate


       SYNOPSIS
       METHODS
           $self = CPANPLUS::Selfupdate->new( $backend_object );
       %list = $self->list_modules_to_update( update =>
       "core|dependencies|enabled_features|features|all", [latest => BOOL] )
           List which modules "selfupdate" would upgrade. You can update
           either the core (CPANPLUS itself), the core dependencies, all
           features you have currently turned on, or all features available,
           or everything.

       @features = $self->list_features
       @features = $self->list_enabled_features
       @mods = $self->modules_for_feature( FEATURE [,AS_HASH] )
       @mods = $self->list_core_dependencies( [AS_HASH] )
       @mods = $self->list_core_modules( [AS_HASH] )
       CPANPLUS::Selfupdate::Module
       $version = $mod->version_required
       $bool = $mod->is_installed_version_sufficient
       BUG REPORTS
       AUTHOR
       COPYRIGHT

       CPANPLUShell, CPANPLUS::Shell


       SYNOPSIS
       DESCRIPTION
       BUG REPORTS
       AUTHOR
       COPYRIGHT
       SEE ALSO

       CPANPLUShell::Classic, CPANPLUS::Shell::Classic - CPAN.pm emulation for
       CPANPLUS


       DESCRIPTION
       BUG REPORTS
       AUTHOR
       COPYRIGHT
       SEE ALSO
       SEE ALSO

       CPANPLUShell::Default, CPANPLUS::Shell::Default


       SYNOPSIS
       DESCRIPTION
       BUG REPORTS
       AUTHOR
       COPYRIGHT
       SEE ALSO

       CPANPLUShell::Default::Plugins::CustomSource,
       CPANPLUS::Shell::Default::Plugins::CustomSource


       SYNOPSIS
               ### elaborate help text
               CPAN Terminal> /? cs

       DESCRIPTION

       CPANPLUShell::Default::Plugins::HOWTO,
       CPANPLUS::Shell::Default::Plugins::HOWTO -- documentation on how to
       write your own plugins

       SYNOPSIS
       HOWTO
           Registering Plugin Modules
           Registering Plugin Commands
           Registering Plugin Help
           Arguments to Plugin Commands
               Classname -- The name of your plugin class, Shell     -- The
               CPANPLUS::Shell::Default object, Backend   -- The
               CPANPLUS::Backend object, Command   -- The command issued by
               the user, Input     -- The input string from the user,
               Options    -- A hashref of options provided by the user

       BUG REPORTS
       AUTHOR
       COPYRIGHT
       SEE ALSO

       CPANPLUShell::Default::Plugins::Remote,
       CPANPLUS::Shell::Default::Plugins::Remote


       SYNOPSIS
       DESCRIPTION
       BUG REPORTS
       AUTHOR
       COPYRIGHT
       SEE ALSO

       CPANPLUShell::Default::Plugins::Source,
       CPANPLUS::Shell::Default::Plugins::Source


       SYNOPSIS
       DESCRIPTION
       BUG REPORTS
       AUTHOR
       COPYRIGHT
       SEE ALSO

       CPANox, CPAN::Nox - Wrapper around CPAN.pm without using any XS module


       SYNOPSIS
       DESCRIPTION
       LICENSE
       SEE ALSO

       Carp, carp    - warn of errors (from perspective of caller)


       SYNOPSIS
       DESCRIPTION
           Forcing a Stack Trace
       GLOBAL VARIABLES
           $Carp::MaxEvalLen
           $Carp::MaxArgLen
           $Carp::MaxArgNums
           $Carp::Verbose
           %Carp::Internal
           %Carp::CarpInternal
           $Carp::CarpLevel
       BUGS

       Carp::Heavy - heavy machinery, no user serviceable parts inside


       Class::ISA -- report the search path for a class's ISA tree


       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
           the function Class::ISA::super_path($CLASS), the function
           Class::ISA::self_and_super_path($CLASS), the function
           Class::ISA::self_and_super_versions($CLASS)

       CAUTIONARY NOTES
       COPYRIGHT
       AUTHOR

       Class::Struct - declare struct-like datatypes as Perl classes


       SYNOPSIS
       DESCRIPTION
           The "struct()" function
           Class Creation at Compile Time
           Element Types and Accessor Methods
               Scalar ('$' or '*$'), Array ('@' or '*@'), Hash ('%' or '*%'),
               Class ('Class_Name' or '*Class_Name')

           Initializing with "new"
       EXAMPLES
           Example 1, Example 2, Example 3

       Author and Modification History

       Compress::Raw::Zlib - Low-Level Interface to zlib compression library

       SYNOPSIS
       DESCRIPTION
       Compress::Raw::Zlib::Deflate
           ($d, $status) = new Compress::Raw::Zlib::Deflate( [OPT] )
               -Level, -Method, -WindowBits, -MemLevel, -Strategy,
               -Dictionary, -Bufsize, -AppendOutput, -CRC32, -ADLER32

           $status = $d->deflate($input, $output)
           $status = $d->flush($output [, $flush_type])
           $status = $d->deflateParams([OPT])
               -Level, -Strategy, -BufSize

           $status = $d->deflateTune($good_length, $max_lazy, $nice_length,
           $max_chain)
           $d->dict_adler()
           $d->crc32()
           $d->adler32()
           $d->msg()
           $d->total_in()
           $d->total_out()
           $d->get_Strategy()
           $d->get_Level()
           $d->get_BufSize()
           Example
       Compress::Raw::Zlib::Inflate
            ($i, $status) = new Compress::Raw::Zlib::Inflate( [OPT] )
               -WindowBits, -Bufsize, -Dictionary, -AppendOutput, -CRC32,
               -ADLER32, -ConsumeInput

            $status = $i->inflate($input, $output [,$eof])
           $status = $i->inflateSync($input)
           $i->dict_adler()
           $i->crc32()
           $i->adler32()
           $i->msg()
           $i->total_in()
           $i->total_out()
           $d->get_BufSize()
           Example
       CHECKSUM FUNCTIONS
       ACCESSING ZIP FILES
       CONSTANTS
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       Compress::Raw::Zlib::Compress::Raw::Zlib, Compress::Raw::Zlib - Low-
       Level Interface to zlib compression library


       SYNOPSIS
       DESCRIPTION
       Compress::Raw::Zlib::Deflate
           ($d, $status) = new Compress::Raw::Zlib::Deflate( [OPT] )
               -Level, -Method, -WindowBits, -MemLevel, -Strategy,
               -Dictionary, -Bufsize, -AppendOutput, -CRC32, -ADLER32

           $status = $d->deflate($input, $output)
           $status = $d->flush($output [, $flush_type])
           $status = $d->deflateParams([OPT])
               -Level, -Strategy, -BufSize

           $status = $d->deflateTune($good_length, $max_lazy, $nice_length,
           $max_chain)
           $d->dict_adler()
           $d->crc32()
           $d->adler32()
           $d->msg()
           $d->total_in()
           $d->total_out()
           $d->get_Strategy()
           $d->get_Level()
           $d->get_BufSize()
           Example
       Compress::Raw::Zlib::Inflate
            ($i, $status) = new Compress::Raw::Zlib::Inflate( [OPT] )
               -WindowBits, -Bufsize, -Dictionary, -AppendOutput, -CRC32,
               -ADLER32, -ConsumeInput

            $status = $i->inflate($input, $output [,$eof])
           $status = $i->inflateSync($input)
           $i->dict_adler()
           $i->crc32()
           $i->adler32()
           $i->msg()
           $i->total_in()
           $i->total_out()
           $d->get_BufSize()
           Example
       CHECKSUM FUNCTIONS
       ACCESSING ZIP FILES
       CONSTANTS
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       Compress::Zlib - Interface to zlib compression library


       SYNOPSIS
       DESCRIPTION
           Notes for users of Compress::Zlib version 1
       GZIP INTERFACE
           $gz = gzopen($filename, $mode), $gz = gzopen($filehandle, $mode),
           $bytesread = $gz->gzread($buffer [, $size]) ;, $bytesread =
           $gz->gzreadline($line) ;, $byteswritten = $gz->gzwrite($buffer) ;,
           $status = $gz->gzflush($flush_type) ;, $offset = $gz->gztell() ;,
           $status = $gz->gzseek($offset, $whence) ;, $gz->gzclose,
           $gz->gzsetparams($level, $strategy, $level, $strategy,
           $gz->gzerror, $gzerrno

           Examples
           Compress::Zlib::memGzip
           Compress::Zlib::memGunzip
       COMPRESS/UNCOMPRESS
           $dest = compress($source [, $level] ) ;, $dest =
           uncompress($source) ;

       Deflate Interface
           ($d, $status) = deflateInit( [OPT] )
               -Level, -Method, -WindowBits, -MemLevel, -Strategy,
               -Dictionary, -Bufsize

           ($out, $status) = $d->deflate($buffer)
           ($out, $status) = $d->flush([flush_type])
           $status = $d->deflateParams([OPT])
               -Level, -Strategy

           $d->dict_adler()
           $d->msg()
           $d->total_in()
           $d->total_out()
           Example
       Inflate Interface
           ($i, $status) = inflateInit()
               -WindowBits, -Bufsize, -Dictionary

           ($out, $status) = $i->inflate($buffer)
           $status = $i->inflateSync($buffer)
           $i->dict_adler()
           $i->msg()
           $i->total_in()
           $i->total_out()
           Example
       CHECKSUM FUNCTIONS
       CONSTANTS
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       Compress::Zlib::Compress::Zlib, Compress::Zlib - Interface to zlib
       compression library


       SYNOPSIS
       DESCRIPTION
           Notes for users of Compress::Zlib version 1
       GZIP INTERFACE
           $gz = gzopen($filename, $mode), $gz = gzopen($filehandle, $mode),
           $bytesread = $gz->gzread($buffer [, $size]) ;, $bytesread =
           $gz->gzreadline($line) ;, $byteswritten = $gz->gzwrite($buffer) ;,
           $status = $gz->gzflush($flush_type) ;, $offset = $gz->gztell() ;,
           $status = $gz->gzseek($offset, $whence) ;, $gz->gzclose,
           $gz->gzsetparams($level, $strategy, $level, $strategy,
           $gz->gzerror, $gzerrno

           Examples
           Compress::Zlib::memGzip
           Compress::Zlib::memGunzip
       COMPRESS/UNCOMPRESS
           $dest = compress($source [, $level] ) ;, $dest =
           uncompress($source) ;

       Deflate Interface
           ($d, $status) = deflateInit( [OPT] )
               -Level, -Method, -WindowBits, -MemLevel, -Strategy,
               -Dictionary, -Bufsize

           ($out, $status) = $d->deflate($buffer)
           ($out, $status) = $d->flush([flush_type])
           $status = $d->deflateParams([OPT])
               -Level, -Strategy

           $d->dict_adler()
           $d->msg()
           $d->total_in()
           $d->total_out()
           Example
       Inflate Interface
           ($i, $status) = inflateInit()
               -WindowBits, -Bufsize, -Dictionary

           ($out, $status) = $i->inflate($buffer)
           $status = $i->inflateSync($buffer)
           $i->dict_adler()
           $i->msg()
           $i->total_in()
           $i->total_out()
           Example
       CHECKSUM FUNCTIONS
       CONSTANTS
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       Config - access Perl configuration information


       SYNOPSIS
       DESCRIPTION
           myconfig(), config_sh(), config_re($regex), config_vars(@names)

       EXAMPLE
       WARNING
       GLOSSARY
           _   "_a", "_exe", "_o"

           a   "afs", "afsroot", "alignbytes", "ansi2knr", "aphostname",
               "api_revision", "api_subversion", "api_version",
               "api_versionstring", "ar", "archlib", "archlibexp", "archname",
               "archname64", "archobjs", "asctime_r_proto", "awk"

           b   "baserev", "bash", "bin", "binexp", "bison", "byacc",
               "byteorder"

           c   "c", "castflags", "cat", "cc", "cccdlflags", "ccdlflags",
               "ccflags", "ccflags_uselargefiles", "ccname", "ccsymbols",
               "ccversion", "cf_by", "cf_email", "cf_time", "chgrp", "chmod",
               "chown", "clocktype", "comm", "compress", "contains", "cp",
               "cpio", "cpp", "cpp_stuff", "cppccsymbols", "cppflags",
               "cpplast", "cppminus", "cpprun", "cppstdin", "cppsymbols",
               "crypt_r_proto", "cryptlib", "csh", "ctermid_r_proto",
               "ctime_r_proto"

           d   "d__fwalk", "d_access", "d_accessx", "d_aintl", "d_alarm",
               "d_archlib", "d_asctime_r", "d_atolf", "d_atoll",
               "d_attribute_format", "d_attribute_malloc",
               "d_attribute_nonnull", "d_attribute_noreturn",
               "d_attribute_pure", "d_attribute_unused",
               "d_attribute_warn_unused_result", "d_bcmp", "d_bcopy", "d_bsd",
               "d_bsdgetpgrp", "d_bsdsetpgrp", "d_builtin_choose_expr",
               "d_builtin_expect", "d_bzero", "d_c99_variadic_macros",
               "d_casti32", "d_castneg", "d_charvspr", "d_chown", "d_chroot",
               "d_chsize", "d_class", "d_clearenv", "d_closedir",
               "d_cmsghdr_s", "d_const", "d_copysignl", "d_cplusplus",
               "d_crypt", "d_crypt_r", "d_csh", "d_ctermid", "d_ctermid_r",
               "d_ctime_r", "d_cuserid", "d_dbl_dig", "d_dbminitproto",
               "d_difftime", "d_dir_dd_fd", "d_dirfd", "d_dirnamlen",
               "d_dlerror", "d_dlopen", "d_dlsymun", "d_dosuid",
               "d_drand48_r", "d_drand48proto", "d_dup2", "d_eaccess",
               "d_endgrent", "d_endgrent_r", "d_endhent", "d_endhostent_r",
               "d_endnent", "d_endnetent_r", "d_endpent", "d_endprotoent_r",
               "d_endpwent", "d_endpwent_r", "d_endsent", "d_endservent_r",
               "d_eofnblk", "d_eunice", "d_faststdio", "d_fchdir", "d_fchmod",
               "d_fchown", "d_fcntl", "d_fcntl_can_lock", "d_fd_macros",
               "d_fd_set", "d_fds_bits", "d_fgetpos", "d_finite", "d_finitel",
               "d_flexfnam", "d_flock", "d_flockproto", "d_fork",
               "d_fp_class", "d_fpathconf", "d_fpclass", "d_fpclassify",
               "d_fpclassl", "d_fpos64_t", "d_frexpl", "d_fs_data_s",
               "d_fseeko", "d_fsetpos", "d_fstatfs", "d_fstatvfs", "d_fsync",
               "d_ftello", "d_ftime", "d_futimes", "d_Gconvert", "d_getcwd",
               "d_getespwnam", "d_getfsstat", "d_getgrent", "d_getgrent_r",
               "d_getgrgid_r", "d_getgrnam_r", "d_getgrps", "d_gethbyaddr",
               "d_gethbyname", "d_gethent", "d_gethname", "d_gethostbyaddr_r",
               "d_gethostbyname_r", "d_gethostent_r", "d_gethostprotos",
               "d_getitimer", "d_getlogin", "d_getlogin_r", "d_getmnt",
               "d_getmntent", "d_getnbyaddr", "d_getnbyname", "d_getnent",
               "d_getnetbyaddr_r", "d_getnetbyname_r", "d_getnetent_r",
               "d_getnetprotos", "d_getpagsz", "d_getpbyname",
               "d_getpbynumber", "d_getpent", "d_getpgid", "d_getpgrp",
               "d_getpgrp2", "d_getppid", "d_getprior", "d_getprotobyname_r",
               "d_getprotobynumber_r", "d_getprotoent_r", "d_getprotoprotos",
               "d_getprpwnam", "d_getpwent", "d_getpwent_r", "d_getpwnam_r",
               "d_getpwuid_r", "d_getsbyname", "d_getsbyport", "d_getsent",
               "d_getservbyname_r", "d_getservbyport_r", "d_getservent_r",
               "d_getservprotos", "d_getspnam", "d_getspnam_r", "d_gettimeod",
               "d_gmtime_r", "d_gnulibc", "d_grpasswd", "d_hasmntopt",
               "d_htonl", "d_ilogbl", "d_inc_version_list", "d_index",
               "d_inetaton", "d_int64_t", "d_isascii", "d_isfinite",
               "d_isinf", "d_isnan", "d_isnanl", "d_killpg", "d_lchown",
               "d_ldbl_dig", "d_libm_lib_version", "d_link", "d_localtime_r",
               "d_localtime_r_needs_tzset", "d_locconv", "d_lockf",
               "d_longdbl", "d_longlong", "d_lseekproto", "d_lstat",
               "d_madvise", "d_malloc_good_size", "d_malloc_size", "d_mblen",
               "d_mbstowcs", "d_mbtowc", "d_memchr", "d_memcmp", "d_memcpy",
               "d_memmove", "d_memset", "d_mkdir", "d_mkdtemp", "d_mkfifo",
               "d_mkstemp", "d_mkstemps", "d_mktime", "d_mmap", "d_modfl",
               "d_modfl_pow32_bug", "d_modflproto", "d_mprotect", "d_msg",
               "d_msg_ctrunc", "d_msg_dontroute", "d_msg_oob", "d_msg_peek",
               "d_msg_proxy", "d_msgctl", "d_msgget", "d_msghdr_s",
               "d_msgrcv", "d_msgsnd", "d_msync", "d_munmap", "d_mymalloc",
               "d_nice", "d_nl_langinfo", "d_nv_preserves_uv",
               "d_nv_zero_is_allbits_zero", "d_off64_t",
               "d_old_pthread_create_joinable", "d_oldpthreads", "d_oldsock",
               "d_open3", "d_pathconf", "d_pause", "d_perl_otherlibdirs",
               "d_phostname", "d_pipe", "d_poll", "d_portable", "d_PRId64",
               "d_PRIeldbl", "d_PRIEUldbl", "d_PRIfldbl", "d_PRIFUldbl",
               "d_PRIgldbl", "d_PRIGUldbl", "d_PRIi64",
               "d_printf_format_null", "d_PRIo64", "d_PRIu64", "d_PRIx64",
               "d_PRIXU64", "d_procselfexe", "d_pseudofork",
               "d_pthread_atfork", "d_pthread_attr_setscope",
               "d_pthread_yield", "d_pwage", "d_pwchange", "d_pwclass",
               "d_pwcomment", "d_pwexpire", "d_pwgecos", "d_pwpasswd",
               "d_pwquota", "d_qgcvt", "d_quad", "d_random_r", "d_readdir",
               "d_readdir64_r", "d_readdir_r", "d_readlink", "d_readv",
               "d_recvmsg", "d_rename", "d_rewinddir", "d_rmdir",
               "d_safebcpy", "d_safemcpy", "d_sanemcmp", "d_sbrkproto",
               "d_scalbnl", "d_sched_yield", "d_scm_rights", "d_SCNfldbl",
               "d_seekdir", "d_select", "d_sem", "d_semctl",
               "d_semctl_semid_ds", "d_semctl_semun", "d_semget", "d_semop",
               "d_sendmsg", "d_setegid", "d_seteuid", "d_setgrent",
               "d_setgrent_r", "d_setgrps", "d_sethent", "d_sethostent_r",
               "d_setitimer", "d_setlinebuf", "d_setlocale", "d_setlocale_r",
               "d_setnent", "d_setnetent_r", "d_setpent", "d_setpgid",
               "d_setpgrp", "d_setpgrp2", "d_setprior", "d_setproctitle",
               "d_setprotoent_r", "d_setpwent", "d_setpwent_r", "d_setregid",
               "d_setresgid", "d_setresuid", "d_setreuid", "d_setrgid",
               "d_setruid", "d_setsent", "d_setservent_r", "d_setsid",
               "d_setvbuf", "d_sfio", "d_shm", "d_shmat", "d_shmatprototype",
               "d_shmctl", "d_shmdt", "d_shmget", "d_sigaction", "d_signbit",
               "d_sigprocmask", "d_sigsetjmp", "d_sitearch", "d_snprintf",
               "d_sockatmark", "d_sockatmarkproto", "d_socket", "d_socklen_t",
               "d_sockpair", "d_socks5_init", "d_sprintf_returns_strlen",
               "d_sqrtl", "d_srand48_r", "d_srandom_r", "d_sresgproto",
               "d_sresuproto", "d_statblks", "d_statfs_f_flags", "d_statfs_s",
               "d_statvfs", "d_stdio_cnt_lval", "d_stdio_ptr_lval",
               "d_stdio_ptr_lval_nochange_cnt", "d_stdio_ptr_lval_sets_cnt",
               "d_stdio_stream_array", "d_stdiobase", "d_stdstdio",
               "d_strchr", "d_strcoll", "d_strctcpy", "d_strerrm",
               "d_strerror", "d_strerror_r", "d_strftime", "d_strlcat",
               "d_strlcpy", "d_strtod", "d_strtol", "d_strtold", "d_strtoll",
               "d_strtoq", "d_strtoul", "d_strtoull", "d_strtouq",
               "d_strxfrm", "d_suidsafe", "d_symlink", "d_syscall",
               "d_syscallproto", "d_sysconf", "d_sysernlst", "d_syserrlst",
               "d_system", "d_tcgetpgrp", "d_tcsetpgrp", "d_telldir",
               "d_telldirproto", "d_time", "d_times", "d_tm_tm_gmtoff",
               "d_tm_tm_zone", "d_tmpnam_r", "d_truncate", "d_ttyname_r",
               "d_tzname", "d_u32align", "d_ualarm", "d_umask", "d_uname",
               "d_union_semun", "d_unordered", "d_unsetenv", "d_usleep",
               "d_usleepproto", "d_ustat", "d_vendorarch", "d_vendorbin",
               "d_vendorlib", "d_vendorscript", "d_vfork", "d_void_closedir",
               "d_voidsig", "d_voidtty", "d_volatile", "d_vprintf",
               "d_vsnprintf", "d_wait4", "d_waitpid", "d_wcstombs",
               "d_wctomb", "d_writev", "d_xenix", "date", "db_hashtype",
               "db_prefixtype", "db_version_major", "db_version_minor",
               "db_version_patch", "defvoidused", "direntrytype", "dlext",
               "dlsrc", "doublesize", "drand01", "drand48_r_proto",
               "dynamic_ext"

           e   "eagain", "ebcdic", "echo", "egrep", "emacs",
               "endgrent_r_proto", "endhostent_r_proto", "endnetent_r_proto",
               "endprotoent_r_proto", "endpwent_r_proto",
               "endservent_r_proto", "eunicefix", "exe_ext", "expr",
               "extensions", "extras"

           f   "fflushall", "fflushNULL", "find", "firstmakefile", "flex",
               "fpossize", "fpostype", "freetype", "from", "full_ar",
               "full_csh", "full_sed"

           g   "gccansipedantic", "gccosandvers", "gccversion",
               "getgrent_r_proto", "getgrgid_r_proto", "getgrnam_r_proto",
               "gethostbyaddr_r_proto", "gethostbyname_r_proto",
               "gethostent_r_proto", "getlogin_r_proto",
               "getnetbyaddr_r_proto", "getnetbyname_r_proto",
               "getnetent_r_proto", "getprotobyname_r_proto",
               "getprotobynumber_r_proto", "getprotoent_r_proto",
               "getpwent_r_proto", "getpwnam_r_proto", "getpwuid_r_proto",
               "getservbyname_r_proto", "getservbyport_r_proto",
               "getservent_r_proto", "getspnam_r_proto", "gidformat",
               "gidsign", "gidsize", "gidtype", "glibpth", "gmake",
               "gmtime_r_proto", "gnulibc_version", "grep", "groupcat",
               "groupstype", "gzip"

           h   "h_fcntl", "h_sysfile", "hint", "hostcat", "html1dir",
               "html1direxp", "html3dir", "html3direxp"

           i   "i16size", "i16type", "i32size", "i32type", "i64size",
               "i64type", "i8size", "i8type", "i_arpainet", "i_bsdioctl",
               "i_crypt", "i_db", "i_dbm", "i_dirent", "i_dld", "i_dlfcn",
               "i_fcntl", "i_float", "i_fp", "i_fp_class", "i_gdbm", "i_grp",
               "i_ieeefp", "i_inttypes", "i_langinfo", "i_libutil",
               "i_limits", "i_locale", "i_machcthr", "i_malloc", "i_math",
               "i_memory", "i_mntent", "i_ndbm", "i_netdb", "i_neterrno",
               "i_netinettcp", "i_niin", "i_poll", "i_prot", "i_pthread",
               "i_pwd", "i_rpcsvcdbm", "i_sfio", "i_sgtty", "i_shadow",
               "i_socks", "i_stdarg", "i_stddef", "i_stdlib", "i_string",
               "i_sunmath", "i_sysaccess", "i_sysdir", "i_sysfile",
               "i_sysfilio", "i_sysin", "i_sysioctl", "i_syslog", "i_sysmman",
               "i_sysmode", "i_sysmount", "i_sysndir", "i_sysparam",
               "i_sysresrc", "i_syssecrt", "i_sysselct", "i_syssockio",
               "i_sysstat", "i_sysstatfs", "i_sysstatvfs", "i_systime",
               "i_systimek", "i_systimes", "i_systypes", "i_sysuio",
               "i_sysun", "i_sysutsname", "i_sysvfs", "i_syswait", "i_termio",
               "i_termios", "i_time", "i_unistd", "i_ustat", "i_utime",
               "i_values", "i_varargs", "i_varhdr", "i_vfork",
               "ignore_versioned_solibs", "inc_version_list",
               "inc_version_list_init", "incpath", "inews",
               "initialinstalllocation", "installarchlib", "installbin",
               "installhtml1dir", "installhtml3dir", "installman1dir",
               "installman3dir", "installprefix", "installprefixexp",
               "installprivlib", "installscript", "installsitearch",
               "installsitebin", "installsitehtml1dir", "installsitehtml3dir",
               "installsitelib", "installsiteman1dir", "installsiteman3dir",
               "installsitescript", "installstyle", "installusrbinperl",
               "installvendorarch", "installvendorbin",
               "installvendorhtml1dir", "installvendorhtml3dir",
               "installvendorlib", "installvendorman1dir",
               "installvendorman3dir", "installvendorscript", "intsize",
               "issymlink", "ivdformat", "ivsize", "ivtype"

           k   "known_extensions", "ksh"

           l   "ld", "lddlflags", "ldflags", "ldflags_uselargefiles",
               "ldlibpthname", "less", "lib_ext", "libc", "libperl", "libpth",
               "libs", "libsdirs", "libsfiles", "libsfound", "libspath",
               "libswanted", "libswanted_uselargefiles", "line", "lint",
               "lkflags", "ln", "lns", "localtime_r_proto", "locincpth",
               "loclibpth", "longdblsize", "longlongsize", "longsize", "lp",
               "lpr", "ls", "lseeksize", "lseektype"

           m   "mad", "madlyh", "madlyobj", "madlysrc", "mail", "mailx",
               "make", "make_set_make", "mallocobj", "mallocsrc",
               "malloctype", "man1dir", "man1direxp", "man1ext", "man3dir",
               "man3direxp", "man3ext"

           M   "Mcc", "mips_type", "mistrustnm", "mkdir", "mmaptype",
               "modetype", "more", "multiarch", "mv", "myarchname",
               "mydomain", "myhostname", "myuname"

           n   "n", "need_va_copy", "netdb_hlen_type", "netdb_host_type",
               "netdb_name_type", "netdb_net_type", "nm", "nm_opt",
               "nm_so_opt", "nonxs_ext", "nroff", "nv_preserves_uv_bits",
               "nveformat", "nvEUformat", "nvfformat", "nvFUformat",
               "nvgformat", "nvGUformat", "nvsize", "nvtype"

           o   "o_nonblock", "obj_ext", "old_pthread_create_joinable",
               "optimize", "orderlib", "osname", "osvers", "otherlibdirs"

           p   "package", "pager", "passcat", "patchlevel", "path_sep",
               "perl", "perl5"

           P   "PERL_API_REVISION", "PERL_API_SUBVERSION", "PERL_API_VERSION",
               "PERL_CONFIG_SH", "PERL_PATCHLEVEL", "perl_patchlevel",
               "PERL_REVISION", "PERL_SUBVERSION", "PERL_VERSION",
               "perladmin", "perllibs", "perlpath", "pg", "phostname",
               "pidtype", "plibpth", "pmake", "pr", "prefix", "prefixexp",
               "privlib", "privlibexp", "procselfexe", "prototype", "ptrsize"

           q   "quadkind", "quadtype"

           r   "randbits", "randfunc", "random_r_proto", "randseedtype",
               "ranlib", "rd_nodata", "readdir64_r_proto", "readdir_r_proto",
               "revision", "rm", "rm_try", "rmail", "run", "runnm"

           s   "sched_yield", "scriptdir", "scriptdirexp", "sed", "seedfunc",
               "selectminbits", "selecttype", "sendmail", "setgrent_r_proto",
               "sethostent_r_proto", "setlocale_r_proto", "setnetent_r_proto",
               "setprotoent_r_proto", "setpwent_r_proto",
               "setservent_r_proto", "sh", "shar", "sharpbang", "shmattype",
               "shortsize", "shrpenv", "shsharp", "sig_count", "sig_name",
               "sig_name_init", "sig_num", "sig_num_init", "sig_size",
               "signal_t", "sitearch", "sitearchexp", "sitebin", "sitebinexp",
               "sitehtml1dir", "sitehtml1direxp", "sitehtml3dir",
               "sitehtml3direxp", "sitelib", "sitelib_stem", "sitelibexp",
               "siteman1dir", "siteman1direxp", "siteman3dir",
               "siteman3direxp", "siteprefix", "siteprefixexp", "sitescript",
               "sitescriptexp", "sizesize", "sizetype", "sleep", "smail",
               "so", "sockethdr", "socketlib", "socksizetype", "sort",
               "spackage", "spitshell", "sPRId64", "sPRIeldbl", "sPRIEUldbl",
               "sPRIfldbl", "sPRIFUldbl", "sPRIgldbl", "sPRIGUldbl",
               "sPRIi64", "sPRIo64", "sPRIu64", "sPRIx64", "sPRIXU64",
               "srand48_r_proto", "srandom_r_proto", "src", "sSCNfldbl",
               "ssizetype", "startperl", "startsh", "static_ext", "stdchar",
               "stdio_base", "stdio_bufsiz", "stdio_cnt", "stdio_filbuf",
               "stdio_ptr", "stdio_stream_array", "strerror_r_proto",
               "strings", "submit", "subversion", "sysman"

           t   "tail", "tar", "targetarch", "tbl", "tee", "test", "timeincl",
               "timetype", "tmpnam_r_proto", "to", "touch", "tr", "trnl",
               "troff", "ttyname_r_proto"

           u   "u16size", "u16type", "u32size", "u32type", "u64size",
               "u64type", "u8size", "u8type", "uidformat", "uidsign",
               "uidsize", "uidtype", "uname", "uniq", "uquadtype",
               "use5005threads", "use64bitall", "use64bitint",
               "usecrosscompile", "usedl", "usefaststdio", "useithreads",
               "uselargefiles", "uselongdouble", "usemallocwrap",
               "usemorebits", "usemultiplicity", "usemymalloc", "usenm",
               "useopcode", "useperlio", "useposix", "usereentrant",
               "userelocatableinc", "usesfio", "useshrplib",
               "usesitecustomize", "usesocks", "usethreads",
               "usevendorprefix", "usevfork", "usrinc", "uuname", "uvoformat",
               "uvsize", "uvtype", "uvuformat", "uvxformat", "uvXUformat"

           v   "vendorarch", "vendorarchexp", "vendorbin", "vendorbinexp",
               "vendorhtml1dir", "vendorhtml1direxp", "vendorhtml3dir",
               "vendorhtml3direxp", "vendorlib", "vendorlib_stem",
               "vendorlibexp", "vendorman1dir", "vendorman1direxp",
               "vendorman3dir", "vendorman3direxp", "vendorprefix",
               "vendorprefixexp", "vendorscript", "vendorscriptexp",
               "version", "version_patchlevel_string", "versiononly", "vi",
               "voidflags"

           x   "xlibpth"

           y   "yacc", "yaccflags"

           z   "zcat", "zip"

       NOTE
       SYNOPSIS
       DESCRIPTION
           dynamic, nonxs, static

       AUTHOR

       Cwd - get pathname of current working directory

       SYNOPSIS
       DESCRIPTION
           getcwd and friends
               getcwd, cwd, fastcwd, fastgetcwd, getdcwd

           abs_path and friends
               abs_path, realpath, fast_abs_path

           $ENV{PWD}
       NOTES
       AUTHOR
       COPYRIGHT
       SEE ALSO

       DB - programmatic interface to the Perl debugging API


       SYNOPSIS
       DESCRIPTION
           Global Variables
                $DB::sub,  %DB::sub,  $DB::single,  $DB::signal,  $DB::trace,  @DB::args,
               @DB::dbline,  %DB::dbline,  $DB::package,  $DB::filename,  $DB::subname,
               $DB::lineno

           API Methods
               CLIENT->register(), CLIENT->evalcode(STRING),
               CLIENT->skippkg('D::hide'), CLIENT->run(), CLIENT->step(),
               CLIENT->next(), CLIENT->done()

           Client Callback Methods
               CLIENT->init(), CLIENT->prestop([STRING]), CLIENT->stop(),
               CLIENT->idle(), CLIENT->poststop([STRING]),
               CLIENT->evalcode(STRING), CLIENT->cleanup(),
               CLIENT->output(LIST)

       BUGS
       AUTHOR

       DBM_Filter -- Filter DBM keys/values


       SYNOPSIS
       DESCRIPTION
       What is a DBM Filter?
           So what's new?
       METHODS
           $db->Filter_Push()
           $db->Filter_Key_Push()
           $db->Filter_Value_Push()
               Filter_Push, Filter_Key_Push, Filter_Value_Push

           $db->Filter_Pop()
           $db->Filtered()
       Writing a Filter
           Immediate Filters
           Canned Filters
               "name", params

       Filters Included
           utf8, encode, compress, int32, null

       NOTES
           Maintain Round Trip Integrity
           Don't mix filtered & non-filtered data in the same database file.
       EXAMPLE
       SEE ALSO
       AUTHOR

       DBM_Filter::compress - filter for DBM_Filter


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR

       DBM_Filter::encode - filter for DBM_Filter


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR

       DBM_Filter::int32 - filter for DBM_Filter


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR

       DBM_Filter::null - filter for DBM_Filter


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR

       DBM_Filter::utf8 - filter for DBM_Filter


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR

       DB_File - Perl5 access to Berkeley DB version 1.x


       SYNOPSIS
       DESCRIPTION
           DB_HASH, DB_BTREE, DB_RECNO

           Using DB_File with Berkeley DB version 2 or greater
           Interface to Berkeley DB
           Opening a Berkeley DB Database File
           Default Parameters
           In Memory Databases
       DB_HASH
           A Simple Example
       DB_BTREE
           Changing the BTREE sort order
           Handling Duplicate Keys
           The get_dup() Method
           The find_dup() Method
           The del_dup() Method
           Matching Partial Keys
       DB_RECNO
           The 'bval' Option
           A Simple Example
           Extra RECNO Methods
               $X->push(list) ;, $value = $X->pop ;, $X->shift,
               $X->unshift(list) ;, $X->length, $X->splice(offset, length,
               elements);

           Another Example
       THE API INTERFACE
           $status = $X->get($key, $value [, $flags]) ;, $status =
           $X->put($key, $value [, $flags]) ;, $status = $X->del($key [,
           $flags]) ;, $status = $X->fd ;, $status = $X->seq($key, $value,
           $flags) ;, $status = $X->sync([$flags]) ;

       DBM FILTERS
           filter_store_key, filter_store_value, filter_fetch_key,
           filter_fetch_value

           The Filter
           An Example -- the NULL termination problem.
           Another Example -- Key is a C int.
       HINTS AND TIPS
           Locking: The Trouble with fd
           Safe ways to lock a database
               Tie::DB_Lock, Tie::DB_LockFile, DB_File::Lock

           Sharing Databases With C Applications
           The untie() Gotcha
       COMMON QUESTIONS
           Why is there Perl source in my database?
           How do I store complex data structures with DB_File?
           What does "Invalid Argument" mean?
           What does "Bareword 'DB_File' not allowed" mean?
       REFERENCES
       HISTORY
       BUGS
       AVAILABILITY
       COPYRIGHT
       SEE ALSO
       AUTHOR

       Data::Dumper - stringified perl data structures, suitable for both
       printing and "eval"


       SYNOPSIS
       DESCRIPTION
           Methods
               PACKAGE->new(ARRAYREF [, ARRAYREF]), $OBJ->Dump  or
               PACKAGE->Dump(ARRAYREF [, ARRAYREF]), $OBJ->Seen([HASHREF]),
               $OBJ->Values([ARRAYREF]), $OBJ->Names([ARRAYREF]), $OBJ->Reset

           Functions
               Dumper(LIST)

           Configuration Variables or Methods
           Exports
               Dumper

       EXAMPLES
       BUGS
           NOTE
       AUTHOR
       VERSION
       SEE ALSO

       Devel::DProf - a Perl code profiler


       SYNOPSIS
       DESCRIPTION
       PROFILE FORMAT
       AUTOLOAD
       ENVIRONMENT
       BUGS
       SEE ALSO

       Devel::InnerPackage - find all the inner packages of a package


       SYNOPSIS
       DESCRIPTION
       METHODS
           list_packages <package name>
       AUTHOR
       COPYING
       BUGS

       Devel::PPPort - Perl/Pollution/Portability


       SYNOPSIS
       DESCRIPTION
           Why use ppport.h?
           How to use ppport.h
           Running ppport.h
       FUNCTIONS
           WriteFile
       COMPATIBILITY
           Provided Perl compatibility API
           Perl API not supported by ppport.h
               perl 5.9.5, perl 5.9.4, perl 5.9.3, perl 5.9.2, perl 5.9.1,
               perl 5.9.0, perl 5.8.3, perl 5.8.1, perl 5.8.0, perl 5.7.3,
               perl 5.7.2, perl 5.7.1, perl 5.6.1, perl 5.6.0, perl 5.005_03,
               perl 5.005, perl 5.004_05, perl 5.004

       BUGS
       AUTHORS
       COPYRIGHT
       SEE ALSO

       Devel::Peek - A data debugging tool for the XS programmer


       SYNOPSIS
       DESCRIPTION
           Runtime debugging
           Memory footprint debugging
       EXAMPLES
           A simple scalar string
           A simple scalar number
           A simple scalar with an extra reference
           A reference to a simple scalar
           A reference to an array
           A reference to a hash
           Dumping a large array or hash
           A reference to an SV which holds a C pointer
           A reference to a subroutine
       EXPORTS
       BUGS
       AUTHOR
       SEE ALSO

       Devel::SelfStubber - generate stubs for a SelfLoading module


       SYNOPSIS
       DESCRIPTION

       Digest - Modules that calculate message digests


       SYNOPSIS
       DESCRIPTION
           binary, hex, base64

       OO INTERFACE
           $ctx = Digest->XXX($arg,...), $ctx = Digest->new(XXX => $arg,...),
           $ctx = Digest::XXX->new($arg,...), $other_ctx = $ctx->clone,
           $ctx->reset, $ctx->add( $data ), $ctx->add( $chunk1, $chunk2, ...
           ), $ctx->addfile( $io_handle ), $ctx->add_bits( $data, $nbits ),
           $ctx->add_bits( $bitstring ), $ctx->digest, $ctx->hexdigest,
           $ctx->b64digest

       Digest speed
       SEE ALSO
       AUTHOR

       Digest::MD5 - Perl interface to the MD5 Algorithm


       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
           md5($data,...), md5_hex($data,...), md5_base64($data,...)

       METHODS
           $md5 = Digest::MD5->new, $md5->reset, $md5->clone,
           $md5->add($data,...), $md5->addfile($io_handle),
           $md5->add_bits($data, $nbits), $md5->add_bits($bitstring),
           $md5->digest, $md5->hexdigest, $md5->b64digest

       EXAMPLES
       SEE ALSO
       COPYRIGHT
       AUTHORS

       Digest::SHA - Perl extension for SHA-1/224/256/384/512


       SYNOPSIS
       SYNOPSIS (HMAC-SHA)
       ABSTRACT
       DESCRIPTION
       NIST STATEMENT ON SHA-1
       PADDING OF BASE64 DIGESTS
       EXPORT
       EXPORTABLE FUNCTIONS
           sha1($data, ...), sha224($data, ...), sha256($data, ...),
           sha384($data, ...), sha512($data, ...), sha1_hex($data, ...),
           sha224_hex($data, ...), sha256_hex($data, ...), sha384_hex($data,
           ...), sha512_hex($data, ...), sha1_base64($data, ...),
           sha224_base64($data, ...), sha256_base64($data, ...),
           sha384_base64($data, ...), sha512_base64($data, ...), new($alg),
           reset($alg), hashsize, algorithm, clone, add($data, ...),
           add_bits($data, $nbits), add_bits($bits), addfile(*FILE),
           addfile($filename [, $mode]), dump($filename), load($filename),
           digest, hexdigest, b64digest, hmac_sha1($data, $key),
           hmac_sha224($data, $key), hmac_sha256($data, $key),
           hmac_sha384($data, $key), hmac_sha512($data, $key),
           hmac_sha1_hex($data, $key), hmac_sha224_hex($data, $key),
           hmac_sha256_hex($data, $key), hmac_sha384_hex($data, $key),
           hmac_sha512_hex($data, $key), hmac_sha1_base64($data, $key),
           hmac_sha224_base64($data, $key), hmac_sha256_base64($data, $key),
           hmac_sha384_base64($data, $key), hmac_sha512_base64($data, $key)

       SEE ALSO
       AUTHOR
       ACKNOWLEDGMENTS
       COPYRIGHT AND LICENSE

       Digest::base - Digest base class


       SYNOPSIS
       DESCRIPTION
       SEE ALSO

       Digest::file - Calculate digests of files


       SYNOPSIS
       DESCRIPTION
           digest_file( $file, $algorithm, [$arg,...] ), digest_file_hex(
           $file, $algorithm, [$arg,...] ), digest_file_base64( $file,
           $algorithm, [$arg,...]  )

       SEE ALSO

       DirHandle - supply object methods for directory handles

       SYNOPSIS
       DESCRIPTION
       NOTES

       Dumpvalue - provides screen dump of Perl data.


       SYNOPSIS
       DESCRIPTION
           Creation
               "arrayDepth", "hashDepth", "compactDump", "veryCompact",
               "globPrint", "dumpDBFiles", "dumpPackages", "dumpReused",
               "tick", "quoteHighBit", "printUndef", "usageOnly", unctrl,
               subdump, bareStringify, quoteHighBit, stopDbSignal

           Methods
               dumpValue, dumpValues, stringify, dumpvars, set_quote,
               set_unctrl, compactDump, veryCompact, set, get

       DynaLoader - Dynamically load C libraries into Perl code


       SYNOPSIS
       DESCRIPTION
           @dl_library_path, @dl_resolve_using, @dl_require_symbols,
           @dl_librefs, @dl_modules, @dl_shared_objects, dl_error(),
           $dl_debug, dl_findfile(), dl_expandspec(), dl_load_file(),
           dl_unload_file(), dl_load_flags(), dl_find_symbol(),
           dl_find_symbol_anywhere(), dl_undef_symbols(), dl_install_xsub(),
           bootstrap()

       AUTHOR

       DynaLoader::XSLoader, XSLoader - Dynamically load C libraries into Perl
       code

       VERSION
       SYNOPSIS
       DESCRIPTION
           Migration from "DynaLoader"
           Backward compatible boilerplate
       Order of initialization: early load()
           The most hairy case
       DIAGNOSTICS
           "Can't find '%s' symbol in %s", "Can't load '%s' for module %s:
           %s", "Undefined symbols present after loading %s: %s",
           "XSLoader::load('Your::Module', $Your::Module::VERSION)"

       LIMITATIONS
       BUGS
       SEE ALSO
       AUTHORS
       COPYRIGHT

       Encode - character encodings


       SYNOPSIS
           Table of Contents
       DESCRIPTION
           TERMINOLOGY
       PERL ENCODING API
           $octets  = encode(ENCODING, $string [, CHECK]), $string =
           decode(ENCODING, $octets [, CHECK]), [$obj =]
           find_encoding(ENCODING), [$length =] from_to($octets, FROM_ENC,
           TO_ENC [, CHECK]), $octets = encode_utf8($string);, $string =
           decode_utf8($octets [, CHECK]);

           Listing available encodings
           Defining Aliases
           Finding IANA Character Set Registry names
       Encoding via PerlIO
       Handling Malformed Data
           NOTE: Not all encoding support this feature, CHECK =
           Encode::FB_DEFAULT ( == 0), CHECK = Encode::FB_CROAK ( == 1), CHECK
           = Encode::FB_QUIET, CHECK = Encode::FB_WARN, perlqq mode (CHECK =
           Encode::FB_PERLQQ), HTML charref mode (CHECK =
           Encode::FB_HTMLCREF), XML charref mode (CHECK =
           Encode::FB_XMLCREF), The bitmask, Encode::LEAVE_SRC

       Defining Encodings
       The UTF8 flag
           Goal #1:, Goal #2:, Goal #3:, Goal #4:

           Messing with Perl's Internals
               is_utf8(STRING [, CHECK]), _utf8_on(STRING), _utf8_off(STRING)

       UTF-8 vs. utf8 vs. UTF8
       SEE ALSO
       MAINTAINER
       COPYRIGHT

       Encode::Alias - alias definitions to encodings


       SYNOPSIS
       DESCRIPTION
           As a simple string, As a qr// compiled regular expression, e.g.:,
           As a code reference, e.g.:

           Alias overloading
       SEE ALSO

       Encode::Byte - Single Byte Encodings


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
       SEE ALSO

       Encode::CJKConstants -- Internally used by Encode::??::ISO_2022_*


       Encode::CN - China-based Chinese Encodings


       SYNOPSIS
       DESCRIPTION
       NOTES
       BUGS
       SEE ALSO

       Encode::CN::HZ -- internally used by Encode::CN


       Encode::Config -- internally used by Encode


       Encode::EBCDIC - EBCDIC Encodings


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
       SEE ALSO

       Encode::Encoding - Encode Implementation Base Class


       SYNOPSIS
       DESCRIPTION
           Methods you should implement
               ->encode($string [,$check]), ->decode($octets [,$check]),
               ->cat_decode($destination, $octets, $offset, $terminator
               [,$check])

           Other methods defined in Encode::Encodings
               ->name, ->mime_name, ->renew, ->renewed, ->perlio_ok(),
               ->needs_lines()

           Example: Encode::ROT13
       Why the heck Encode API is different?
           Compiled Encodings
       SEE ALSO
           Scheme 1, Scheme 2, Other Schemes

       Encode::GSM0338 -- ESTI GSM 03.38 Encoding


       SYNOPSIS
       DESCRIPTION
       NOTES
       BUGS
       SEE ALSO

       Encode::Guess -- Guesses encoding from data


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
           Encode::Guess->set_suspects, Encode::Guess->add_suspects,
           Encode::decode("Guess" ...), Encode::Guess->guess($data),
           guess_encoding($data, [, list of suspects])

       CAVEATS
       TO DO
       SEE ALSO

       Encode::JP - Japanese Encodings


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
       Note on ISO-2022-JP(-1)?
       BUGS
       SEE ALSO

       Encode::JP::H2Z -- internally used by Encode::JP::2022_JP*


       Encode::JP::JIS7 -- internally used by Encode::JP


       Encode::KR - Korean Encodings


       SYNOPSIS
       DESCRIPTION
       BUGS
       SEE ALSO

       Encode::KR::2022_KR -- internally used by Encode::KR


       Encode::MIME::Header -- MIME 'B' and 'Q' header encoding


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
       BUGS
       SEE ALSO

       Encode::MIME::Name, Encode::MIME::NAME -- internally used by Encode


       SEE ALSO

       Encode::PerlIO -- a detailed document on Encode and PerlIO

       Overview
       How does it work?
       Line Buffering
           How can I tell whether my encoding fully supports PerlIO ?
       SEE ALSO

       Encode::Supported -- Encodings supported by Encode


       DESCRIPTION
           Encoding Names
       Supported Encodings
           Built-in Encodings
           Encode::Unicode -- other Unicode encodings
           Encode::Byte -- Extended ASCII
               ISO-8859 and corresponding vendor mappings, KOI8 - De Facto
               Standard for the Cyrillic world

           gsm0338 - Hentai Latin 1
               gsm0338 support before 2.19

           CJK: Chinese, Japanese, Korean (Multibyte)
               Encode::CN -- Continental China, Encode::JP -- Japan,
               Encode::KR -- Korea, Encode::TW -- Taiwan, Encode::HanExtra --
               More Chinese via CPAN, Encode::JIS2K -- JIS X 0213 encodings
               via CPAN

           Miscellaneous encodings
               Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header,
               Encode::Guess

       Unsupported encodings
             ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
           Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
           System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
           Various Mac encodings, (Mac) Indic encodings

       Encoding vs. Charset -- terminology
       Encoding Classification (by Anton Tagunov and Dan Kogai)
           Microsoft-related naming mess
               KS_C_5601-1987, GB2312, Big5, Shift_JIS

       Glossary
           character repertoire, coded character set (CCS), character encoding
           scheme (CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2,
           Unicode, UTF, UTF-16

       See Also
       References
           ECMA, ECMA-035 (eq "ISO-2022"), IANA, Assigned Charset Names by
           IANA, ISO, RFC, UC, Unicode Glossary

           Other Notable Sites
               czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
               "Introduction to i18n"

           Offline sources
               "CJKV Information Processing" by Ken Lunde

       Encode::Symbol - Symbol Encodings


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
       SEE ALSO

       Encode::TW - Taiwan-based Chinese Encodings


       SYNOPSIS
       DESCRIPTION
       NOTES
       BUGS
       SEE ALSO

       Encode::Unicode -- Various Unicode Transformation Formats


       SYNOPSIS
       ABSTRACT
           <http://www.unicode.org/glossary/> says:, Quick Reference

       Size, Endianness, and BOM
           by size
           by endianness
               BOM as integer when fetched in network byte order

       Surrogate Pairs
       Error Checking
       SEE ALSO

       Encode::Unicode::UTF7 -- UTF-7 encoding


       SYNOPSIS
       ABSTRACT
       In Practice
       SEE ALSO

       Encode::lib::Encode::Alias, Encode::Alias - alias definitions to
       encodings


       SYNOPSIS
       DESCRIPTION
           As a simple string, As a qr// compiled regular expression, e.g.:,
           As a code reference, e.g.:

           Alias overloading
       SEE ALSO

       Encode::lib::Encode::CJKConstants, Encode::CJKConstants.pm --
       Internally used by Encode::??::ISO_2022_*


       Encode::lib::Encode::CN::HZ, Encode::CN::HZ -- internally used by
       Encode::CN


       Encode::lib::Encode::Config, Encode::Config -- internally used by
       Encode


       Encode::lib::Encode::Encoding, Encode::Encoding - Encode Implementation
       Base Class


       SYNOPSIS
       DESCRIPTION
           Methods you should implement
               ->encode($string [,$check]), ->decode($octets [,$check]),
               ->cat_decode($destination, $octets, $offset, $terminator
               [,$check])

           Other methods defined in Encode::Encodings
               ->name, ->mime_name, ->renew, ->renewed, ->perlio_ok(),
               ->needs_lines()

           Example: Encode::ROT13
       Why the heck Encode API is different?
           Compiled Encodings
       SEE ALSO
           Scheme 1, Scheme 2, Other Schemes

       Encode::lib::Encode::GSM0338, Encode::GSM0338 -- ESTI GSM 03.38
       Encoding


       SYNOPSIS
       DESCRIPTION
       NOTES
       BUGS
       SEE ALSO

       Encode::lib::Encode::Guess, Encode::Guess -- Guesses encoding from data


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
           Encode::Guess->set_suspects, Encode::Guess->add_suspects,
           Encode::decode("Guess" ...), Encode::Guess->guess($data),
           guess_encoding($data, [, list of suspects])

       CAVEATS
       TO DO
       SEE ALSO

       Encode::lib::Encode::JP::H2Z, Encode::JP::H2Z -- internally used by
       Encode::JP::2022_JP*


       Encode::lib::Encode::JP::JIS7, Encode::JP::JIS7 -- internally used by
       Encode::JP


       Encode::lib::Encode::KR::2022_KR, Encode::KR::2022_KR -- internally
       used by Encode::KR


       Encode::lib::Encode::MIME::Header, Encode::MIME::Header -- MIME 'B' and
       'Q' header encoding


       SYNOPSIS
       ABSTRACT
       DESCRIPTION
       BUGS
       SEE ALSO

       Encode::lib::Encode::MIME::Name, Encode::MIME::NAME -- internally used
       by Encode


       SEE ALSO

       Encode::lib::Encode::PerlIO, Encode::PerlIO -- a detailed document on
       Encode and PerlIO

       Overview
       How does it work?
       Line Buffering
           How can I tell whether my encoding fully supports PerlIO ?
       SEE ALSO

       Encode::lib::Encode::Supported, Encode::Supported -- Encodings
       supported by Encode


       DESCRIPTION
           Encoding Names
       Supported Encodings
           Built-in Encodings
           Encode::Unicode -- other Unicode encodings
           Encode::Byte -- Extended ASCII
               ISO-8859 and corresponding vendor mappings, KOI8 - De Facto
               Standard for the Cyrillic world

           gsm0338 - Hentai Latin 1
               gsm0338 support before 2.19

           CJK: Chinese, Japanese, Korean (Multibyte)
               Encode::CN -- Continental China, Encode::JP -- Japan,
               Encode::KR -- Korea, Encode::TW -- Taiwan, Encode::HanExtra --
               More Chinese via CPAN, Encode::JIS2K -- JIS X 0213 encodings
               via CPAN

           Miscellaneous encodings
               Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header,
               Encode::Guess

       Unsupported encodings
             ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
           Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
           System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
           Various Mac encodings, (Mac) Indic encodings

       Encoding vs. Charset -- terminology
       Encoding Classification (by Anton Tagunov and Dan Kogai)
           Microsoft-related naming mess
               KS_C_5601-1987, GB2312, Big5, Shift_JIS

       Glossary
           character repertoire, coded character set (CCS), character encoding
           scheme (CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2,
           Unicode, UTF, UTF-16

       See Also
       References
           ECMA, ECMA-035 (eq "ISO-2022"), IANA, Assigned Charset Names by
           IANA, ISO, RFC, UC, Unicode Glossary

           Other Notable Sites
               czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
               "Introduction to i18n"

           Offline sources
               "CJKV Information Processing" by Ken Lunde

       Encode::lib::Encode::Unicode::UTF7, Encode::Unicode::UTF7 -- UTF-7
       encoding


       SYNOPSIS
       ABSTRACT
       In Practice
       SEE ALSO

       Encode::lib::Encoder, Encode::Encoder -- Object Oriented Encoder


       SYNOPSIS
       ABSTRACT
       Description
           Predefined Methods
               $e = Encode::Encoder->new([$data, $encoding]);, encoder(),
               $e->data([$data]), $e->encoding([$encoding]),
               $e->bytes([$encoding])

           Example: base64 transcoder
           Operator Overloading
       SEE ALSO

       Encodencoding, encoding - allows you to write your script in non-ascii
       or non-utf8


       SYNOPSIS
       ABSTRACT
           Literal Conversions
           PerlIO layers for "STD(IN|OUT)"
           Implicit upgrading for byte strings
           Side effects
           Side effects
           Side effects
       FEATURES THAT REQUIRE 5.8.1
           "NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle

       USAGE
           use encoding [ENCNAME] ;, use encoding ENCNAME [ STDIN =>
           ENCNAME_IN ...] ;, use encoding ENCNAME Filter=>1;, no encoding;

       The Filter Option
           Filter-related changes at Encode version 1.87
       CAVEATS
           NOT SCOPED
           DO NOT MIX MULTIPLE ENCODINGS
           tr/// with ranges
               Legend of characters above

       EXAMPLE - Greekperl
       KNOWN PROBLEMS
           literals in regex that are longer than 127 bytes, EBCDIC, format,
           Thread safety

           The Logic of :locale
       HISTORY
       SEE ALSO

       Encoder, Encode::Encoder -- Object Oriented Encoder


       SYNOPSIS
       ABSTRACT
       Description
           Predefined Methods
               $e = Encode::Encoder->new([$data, $encoding]);, encoder(),
               $e->data([$data]), $e->encoding([$encoding]),
               $e->bytes([$encoding])

           Example: base64 transcoder
           Operator Overloading
       SEE ALSO

       English - use nice English (or awk) names for ugly punctuation
       variables


       SYNOPSIS
       DESCRIPTION
       PERFORMANCE

       Env - perl module that imports environment variables as scalars or
       arrays


       SYNOPSIS
       DESCRIPTION
       LIMITATIONS
       AUTHOR

       Errno - System errno constants


       SYNOPSIS
       DESCRIPTION
       CAVEATS
       AUTHOR
       COPYRIGHT

       Exporter - Implements default import method for modules


       SYNOPSIS
       DESCRIPTION
           How to Export
           Selecting What To Export
           How to Import
               "use ModuleName;", "use ModuleName ();", "use ModuleName
               qw(...);"

       Advanced features
           Specialised Import Lists
           Exporting without using Exporter's import method
           Exporting without inheriting from Exporter
           Module Version Checking
           Managing Unknown Symbols
           Tag Handling Utility Functions
           Generating combined tags
           "AUTOLOAD"ed Constants
       Good Practices
           Declaring @EXPORT_OK and Friends
           Playing Safe
           What not to Export
       SEE ALSO
       LICENSE

       Exporter::Heavy - Exporter guts


       SYNOPSIS
       DESCRIPTION

       ExtUtils::CBuilder - Compile and link C code for Perl modules


       SYNOPSIS
       DESCRIPTION
       METHODS
           new, have_compiler, compile, "object_file", "include_dirs",
           "extra_compiler_flags", link, lib_file, module_name,
           extra_linker_flags, link_executable, exe_file, object_file,
           lib_file, exe_file, prelink, need_prelink,
           extra_link_args_after_prelink

       TO DO
       HISTORY
       AUTHOR
       COPYRIGHT
       SEE ALSO

       ExtUtils::CBuilder::Platform::Windows - Builder class for Windows
       platforms


       DESCRIPTION
       AUTHOR
       SEE ALSO

       ExtUtils::Command - utilities to replace common UNIX commands in
       Makefiles etc.


       SYNOPSIS
       DESCRIPTION
           FUNCTIONS

       cat

       eqtime

       rm_rf

       rm_f

       touch

       mv

       cp

       chmod

       mkpath

       test_f

       test_d

       dos2unix

       SEE ALSO
       AUTHOR

       ExtUtils::Command::MM - Commands for the MM's to use in Makefiles


       SYNOPSIS
       DESCRIPTION
           test_harness

       pod2man

       warn_if_old_packlist

       perllocal_install

       uninstall

       ExtUtils::Constant - generate XS code to import C header constants


       SYNOPSIS
       DESCRIPTION
       USAGE
           IV, UV, NV, PV, PVN, SV, YES, NO, UNDEF

       FUNCTIONS

       constant_types

       XS_constant PACKAGE, TYPES, SUBNAME, C_SUBNAME

       autoload PACKAGE, VERSION, AUTOLOADER

       WriteMakefileSnippet

       WriteConstants ATTRIBUTE => VALUE [, ...], NAME, DEFAULT_TYPE,
       BREAKOUT_AT, NAMES, C_FH, C_FILE, XS_FH, XS_FILE, SUBNAME, C_SUBNAME

       AUTHOR

       ExtUtils::Constant::Base - base class for ExtUtils::Constant objects

       SYNOPSIS
       DESCRIPTION
       USAGE

       header

       memEQ_clause args_hashref

       dump_names arg_hashref, ITEM..

       assign arg_hashref, VALUE..

       return_clause arg_hashref, ITEM

       switch_clause arg_hashref, NAMELEN, ITEMHASH, ITEM..

       params WHAT

       dogfood arg_hashref, ITEM..

       normalise_items args, default_type, seen_types, seen_items, ITEM..

       C_constant arg_hashref, ITEM.., name, type, value, macro, default, pre,
       post, def_pre, def_post, utf8, weight

       BUGS
       AUTHOR

       ExtUtils::Constant::Utils - helper functions for ExtUtils::Constant


       SYNOPSIS
       DESCRIPTION
       USAGE
           C_stringify NAME

       perl_stringify NAME

       AUTHOR

       ExtUtils::Constant::XS, ExtUtils::Constant::Base - base class for
       ExtUtils::Constant objects

       SYNOPSIS
       DESCRIPTION
       BUGS
       AUTHOR

       ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications


       SYNOPSIS
       DESCRIPTION
       @EXPORT
       FUNCTIONS
           xsinit(), Examples, ldopts(), Examples, perl_inc(), ccflags(),
           ccdlflags(), ccopts(), xsi_header(), xsi_protos(@modules),
           xsi_body(@modules)

       EXAMPLES
       SEE ALSO
       AUTHOR

       ExtUtils::Install - install files from here to there


       SYNOPSIS
       DESCRIPTION
           _chmod($$;$), _warnonce(@), _choke(@)

       _move_file_at_boot( $file, $target, $moan  )

       _unlink_or_rename( $file, $tryhard, $installing )

       Functions
           install

       _get_install_skip

       _have_write_access

       _can_write_dir($dir)

       _mkpath($dir,$show,$mode,$verbose,$fake)

       _copy($from,$to,$verbose,$fake)

       _chdir($from)

       _do_cleanup

       install_rooted_file( $file ), install_rooted_dir( $dir )

       forceunlink( $file, $tryhard )

       directory_not_empty( $dir )

       install_default DISCOURAGED

       uninstall

       inc_uninstall($filepath,$libdir,$verbose,$nonono,$ignore)

       run_filter($cmd,$src,$dest)

       pm_to_blib

       _autosplit

       _invokant

       ENVIRONMENT
           PERL_INSTALL_ROOT, EU_INSTALL_IGNORE_SKIP, EU_INSTALL_SITE_SKIPFILE

       AUTHOR
       LICENSE

       ExtUtils::Installed - Inventory management of installed modules


       SYNOPSIS
       DESCRIPTION
       USAGE
       FUNCTIONS
           new(), modules(), files(), directories(), directory_tree(),
           validate(), packlist(), version()

       EXAMPLE
       AUTHOR

       ExtUtils::Liblist - determine libraries to use and how to use them


       SYNOPSIS
       DESCRIPTION
           For static extensions, For dynamic extensions at build/link time,
           For dynamic extensions at load time

           EXTRALIBS
           LDLOADLIBS and LD_RUN_PATH
           BSLOADLIBS
       PORTABILITY
           VMS implementation
           Win32 implementation
       SEE ALSO

       ExtUtils::MM - OS adjusted ExtUtils::MakeMaker subclass


       SYNOPSIS
       DESCRIPTION

       ExtUtils::MM_AIX - AIX specific subclass of ExtUtils::MM_Unix


       SYNOPSIS
       DESCRIPTION
           Overridden methods
       AUTHOR
       SEE ALSO

       ExtUtils::MM_Any - Platform-agnostic MM methods


       SYNOPSIS
       DESCRIPTION
       METHODS
           Cross-platform helper methods
       Targets
       Init methods
       Tools
       File::Spec wrappers
       Misc
       AUTHOR

       ExtUtils::MM_BeOS - methods to override UN*X behaviour in
       ExtUtils::MakeMaker


       SYNOPSIS
       DESCRIPTION

       os_flavor

       init_linker

       ExtUtils::MM_Cygwin - methods to override UN*X behaviour in
       ExtUtils::MakeMaker


       SYNOPSIS
       DESCRIPTION
           os_flavor

       cflags

       replace_manpage_separator

       init_linker

       ExtUtils::MM_DOS - DOS specific subclass of ExtUtils::MM_Unix


       SYNOPSIS
       DESCRIPTION
           Overridden methods
               os_flavor

       replace_manpage_separator

       AUTHOR
       SEE ALSO

       ExtUtils::MM_MacOS - once produced Makefiles for MacOS Classic


       SYNOPSIS
       DESCRIPTION

       ExtUtils::MM_NW5 - methods to override UN*X behaviour in
       ExtUtils::MakeMaker


       SYNOPSIS
       DESCRIPTION

       os_flavor

       init_platform, platform_constants

       const_cccmd

       static_lib

       dynamic_lib

       ExtUtils::MM_OS2 - methods to override UN*X behaviour in
       ExtUtils::MakeMaker


       SYNOPSIS
       DESCRIPTION
       METHODS
           init_dist

       init_linker

       os_flavor

       ExtUtils::MM_QNX - QNX specific subclass of ExtUtils::MM_Unix


       SYNOPSIS
       DESCRIPTION
           Overridden methods
       AUTHOR
       SEE ALSO

       ExtUtils::MM_UWIN - U/WIN specific subclass of ExtUtils::MM_Unix


       SYNOPSIS
       DESCRIPTION
           Overridden methods
               os_flavor

       replace_manpage_separator

       AUTHOR
       SEE ALSO

       ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker


       SYNOPSIS
       DESCRIPTION
       METHODS
       Methods
           os_flavor

       c_o (o)

       cflags (o)

       const_cccmd (o)

       const_config (o)

       const_loadlibs (o)

       constants (o)

       depend (o)

       init_DEST

       init_dist

       dist (o)

       dist_basics (o)

       dist_ci (o)

       dist_core (o)

       dist_target

       tardist_target

       zipdist_target

       tarfile_target

       zipfile_target

       uutardist_target

       shdist_target

       dlsyms (o)

       dynamic_bs (o)

       dynamic_lib (o)

       exescan

       extliblist

       find_perl

       fixin

       force (o)

       guess_name

       has_link_code

       init_dirscan

       init_MANPODS

       init_MAN1PODS

       init_MAN3PODS

       init_PM

       init_DIRFILESEP

       init_main

       init_others

       init_linker

       init_lib2arch

       init_PERL

       init_platform, platform_constants

       init_PERM

       init_xs

       install (o)

       installbin (o)

       linkext (o)

       lsdir

       macro (o)

       makeaperl (o)

       makefile (o)

       maybe_command

       needs_linking (o)

       parse_abstract

       parse_version

       pasthru (o)

       perl_script

       perldepend (o)

       perm_rw (o)

       perm_rwx (o)

       pm_to_blib

       post_constants (o)

       post_initialize (o)

       postamble (o)

       ppd

       prefixify

       processPL (o)

       quote_paren

       replace_manpage_separator

       cd

       oneliner

       quote_literal

       escape_newlines

       max_exec_len

       static (o)

       static_lib (o)

       staticmake (o)

       subdir_x (o)

       subdirs (o)

       test (o)

       test_via_harness (override)

       test_via_script (override)

       tools_other (o)

       tool_xsubpp (o)

       all_target

       top_targets (o)

       writedoc

       xs_c (o)

       xs_cpp (o)

       xs_o (o)

       SEE ALSO

       ExtUtils::MM_VMS - methods to override UN*X behaviour in
       ExtUtils::MakeMaker

       SYNOPSIS
       DESCRIPTION
           Methods always loaded
               wraplist

       Methods
           guess_name (override)

       find_perl (override)

       maybe_command (override)

       pasthru (override)

       pm_to_blib (override)

       perl_script (override)

       replace_manpage_separator

       init_DEST

       init_DIRFILESEP

       init_main (override)

       init_others (override)

       init_platform (override)

       platform_constants

       init_VERSION (override)

       constants (override)

       special_targets

       cflags (override)

       const_cccmd (override)

       tools_other (override)

       init_dist (override)

       c_o (override)

       xs_c (override)

       xs_o (override)

       dlsyms (override)

       dynamic_lib (override)

       static_lib (override)

       extra_clean_files

       zipfile_target, tarfile_target, shdist_target

       install (override)

       perldepend (override)

       makeaperl (override)

       maketext_filter (override)

       prefixify (override)

       cd

       oneliner

       echo

       quote_literal

       escape_newlines

       max_exec_len

       init_linker

       eliminate_macros

       fixpath

       os_flavor

       AUTHOR

       ExtUtils::MM_VOS - VOS specific subclass of ExtUtils::MM_Unix

       SYNOPSIS
       DESCRIPTION
           Overridden methods
       AUTHOR
       SEE ALSO

       ExtUtils::MM_Win32 - methods to override UN*X behaviour in
       ExtUtils::MakeMaker


       SYNOPSIS
       DESCRIPTION
       Overridden methods
           dlsyms

       replace_manpage_separator

       maybe_command

       init_DIRFILESEP

       init_others

       init_platform, platform_constants

       special_targets

       static_lib

       dynamic_lib

       extra_clean_files

       init_linker

       perl_script

       xs_o

       pasthru

       oneliner

       cd

       max_exec_len

       os_flavor

       cflags

       ExtUtils::MM_Win95 - method to customize MakeMaker for Win9X


       SYNOPSIS
       DESCRIPTION
           Overridden methods
               xs_c

       xs_cpp

       xs_o

       max_exec_len

       os_flavor

       AUTHOR

       ExtUtils::MY - ExtUtils::MakeMaker subclass for customization

       SYNOPSIS
       DESCRIPTION

       ExtUtils::MakeMaker - Create a module Makefile


       SYNOPSIS
       DESCRIPTION
           How To Write A Makefile.PL
           Default Makefile Behaviour
           make test
           make testdb
           make install
           INSTALL_BASE
           PREFIX and LIB attribute
           AFS users
           Static Linking of a new Perl Binary
           Determination of Perl Library and Installation Locations
           Which architecture dependent directory?
           Using Attributes and Parameters
               ABSTRACT, ABSTRACT_FROM, AUTHOR, BINARY_LOCATION, C, CCFLAGS,
               CONFIG, CONFIGURE, DEFINE, DESTDIR, DIR, DISTNAME, DISTVNAME,
               DL_FUNCS, DL_VARS, EXCLUDE_EXT, EXE_FILES, FIRST_MAKEFILE,
               FULLPERL, FULLPERLRUN, FULLPERLRUNINST, FUNCLIST, H, IMPORTS,
               INC, INCLUDE_EXT, INSTALLARCHLIB, INSTALLBIN, INSTALLDIRS,
               INSTALLMAN1DIR, INSTALLMAN3DIR, INSTALLPRIVLIB, INSTALLSCRIPT,
               INSTALLSITEARCH, INSTALLSITEBIN, INSTALLSITELIB,
               INSTALLSITEMAN1DIR, INSTALLSITEMAN3DIR, INSTALLSITESCRIPT,
               INSTALLVENDORARCH, INSTALLVENDORBIN, INSTALLVENDORLIB,
               INSTALLVENDORMAN1DIR, INSTALLVENDORMAN3DIR,
               INSTALLVENDORSCRIPT, INST_ARCHLIB, INST_BIN, INST_LIB,
               INST_MAN1DIR, INST_MAN3DIR, INST_SCRIPT, LD, LDDLFLAGS, LDFROM,
               LIB, LIBPERL_A, LIBS, LICENSE, LINKTYPE, MAKE, MAKEAPERL,
               MAKEFILE_OLD, MAN1PODS, MAN3PODS, MAP_TARGET, MYEXTLIB, NAME,
               NEEDS_LINKING, NOECHO, NORECURS, NO_META, NO_VC, OBJECT,
               OPTIMIZE, PERL, PERL_CORE, PERLMAINCC, PERL_ARCHLIB, PERL_LIB,
               PERL_MALLOC_OK, PERLPREFIX, PERLRUN, PERLRUNINST, PERL_SRC,
               PERM_RW, PERM_RWX, PL_FILES, PM, PMLIBDIRS, PM_FILTER, POLLUTE,
               PPM_INSTALL_EXEC, PPM_INSTALL_SCRIPT, PREFIX, PREREQ_FATAL,
               PREREQ_PM, PREREQ_PRINT, PRINT_PREREQ, SITEPREFIX, SIGN, SKIP,
               TYPEMAPS, VENDORPREFIX, VERBINST, VERSION, VERSION_FROM,
               VERSION_SYM, XS, XSOPT, XSPROTOARG, XS_VERSION

           Additional lowercase attributes
               clean, depend, dist, dynamic_lib, linkext, macro, postamble,
               realclean, test, tool_autosplit

           Overriding MakeMaker Methods
           The End Of Cargo Cult Programming
               "MAN3PODS => ' '"

           Hintsfile support
           Distribution Support
                  make distcheck,    make skipcheck,    make distclean,    make manifest,
                 make distdir,   make disttest,    make tardist,    make dist,    make
               uutardist,    make shdist,    make zipdist,    make ci

           Module Meta-Data
           Disabling an extension
           Other Handy Functions
               prompt

       ENVIRONMENT
           PERL_MM_OPT, PERL_MM_USE_DEFAULT, PERL_CORE

       SEE ALSO
       AUTHORS
       LICENSE

       ExtUtils::MakeMaker::Config - Wrapper around Config.pm


       SYNOPSIS
       DESCRIPTION

       ExtUtils::MakeMaker::FAQ - Frequently Asked Questions About MakeMaker


       DESCRIPTION
           Module Installation
               How do I install a module into my home directory?, How do I get
               MakeMaker and Module::Build to install to the same place?, How
               do I keep from installing man pages?, How do I use a module
               without installing it?, PREFIX vs INSTALL_BASE from
               Module::Build::Cookbook

           Philosophy and History
               Why not just use <insert other build config tool here>?, What
               is Module::Build and how does it relate to MakeMaker?, pure
               perl.   no make, no shell commands, easier to customize,
               cleaner internals, less cruft

           Module Writing
               How do I keep my $VERSION up to date without resetting it
               manually?, What's this META.yml thing and how did it get in my
               MANIFEST?!, How do I delete everything not in my MANIFEST?

           XS  How to I prevent "object version X.XX does not match bootstrap
               parameter Y.YY" errors?, How do I make two or more XS files
               coexist in the same directory?

       PATCHING
       AUTHOR
       SEE ALSO

       ExtUtils::MakeMaker::Tutorial - Writing a module with MakeMaker


       SYNOPSIS
       DESCRIPTION
           The Mantra
           The Layout
               Makefile.PL, MANIFEST, lib/, t/, Changes, README, INSTALL,
               MANIFEST.SKIP, bin/

       SEE ALSO

       ExtUtils::MakeMaker::bytes - Version-agnostic bytes.pm

       SYNOPSIS
       DESCRIPTION

       ExtUtils::MakeMaker::vmsish - Platform-agnostic vmsish.pm


       SYNOPSIS
       DESCRIPTION

       ExtUtils::Manifest - utilities to write and check a MANIFEST file


       SYNOPSIS
       DESCRIPTION
           Functions
               mkmanifest

       manifind

       manicheck

       filecheck

       fullcheck

       skipcheck

       maniread

       manicopy

       maniadd

       MANIFEST
       MANIFEST.SKIP
           #!include_default, #!include /Path/to/another/manifest.skip

       EXPORT_OK
       GLOBAL VARIABLES
       DIAGNOSTICS
           "Not in MANIFEST:" file, "Skipping" file, "No such file:" file,
           "MANIFEST:" $!, "Added to MANIFEST:" file

       ENVIRONMENT
           PERL_MM_MANIFEST_DEBUG

       SEE ALSO
       AUTHOR

       ExtUtils::Miniperl, writemain - write the C code for perlmain.c


       SYNOPSIS
       DESCRIPTION
       SEE ALSO

       ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader


       SYNOPSIS
       DESCRIPTION

       ExtUtils::Mksymlists - write linker options files for dynamic extension


       SYNOPSIS
       DESCRIPTION
           DLBASE, DL_FUNCS, DL_VARS, FILE, FUNCLIST, IMPORTS, NAME

       AUTHOR
       REVISION
           mkfh()

       __find_relocations

       ExtUtils::Packlist - manage .packlist files


       SYNOPSIS
       DESCRIPTION
       USAGE
       FUNCTIONS
           new(), read(), write(), validate(), packlist_file()

       EXAMPLE
       AUTHOR

       ExtUtils::ParseXS - converts Perl XS code into C code


       SYNOPSIS
       EXPORT
       FUNCTIONS
           process_xs(), C++, hiertype, except, typemap, prototypes,
           versioncheck, linenumbers, optimize, inout, argtypes, s, errors()

       AUTHOR
       COPYRIGHT
       SEE ALSO

       ExtUtils::testlib - add blib/* directories to @INC


       SYNOPSIS
       DESCRIPTION

       Fatal - replace functions with equivalents which succeed or die


       SYNOPSIS
       DESCRIPTION
       BUGS
       AUTHOR

       Fcntl - load the C Fcntl.h defines


       SYNOPSIS
       DESCRIPTION
       NOTE
       EXPORTED SYMBOLS

       File::Basename - Parse file paths into directory, filename and suffix.


       SYNOPSIS
       DESCRIPTION

       "fileparse"

       "basename"

       "dirname"

       "fileparse_set_fstype"

       SEE ALSO

       File::CheckTree - run many filetest checks on a tree

       SYNOPSIS
       DESCRIPTION
       AUTHOR
       HISTORY

       File::Compare - Compare files or filehandles


       SYNOPSIS
       DESCRIPTION
       RETURN
       AUTHOR

       File::Copy - Copy files or filehandles


       SYNOPSIS
       DESCRIPTION
           copy  , move   , syscopy , rmscopy($from,$to[,$date_flag])

       RETURN
       NOTES
       AUTHOR

       File::DosGlob - DOS like globbing and then some


       SYNOPSIS
       DESCRIPTION
       NOTES
       EXPORTS (by request only)
       BUGS
       AUTHOR
       HISTORY
       SEE ALSO

       File::Fetch - A generic file fetching mechanism


       SYNOPSIS
       DESCRIPTION
       ACCESSORS
           $ff->uri, $ff->scheme, $ff->host, $ff->vol, $ff->share, $ff->path,
           $ff->file

       $ff->output_file

       METHODS
           $ff = File::Fetch->new( uri => 'http://some.where.com/dir/file.txt'
           );
       $ff->fetch( [to => /my/output/dir/] )
       $ff->error([BOOL])
       HOW IT WORKS
       GLOBAL VARIABLES
           $File::Fetch::FROM_EMAIL
           $File::Fetch::USER_AGENT
           $File::Fetch::FTP_PASSIVE
           $File::Fetch::TIMEOUT
           $File::Fetch::WARN
           $File::Fetch::DEBUG
           $File::Fetch::BLACKLIST
           $File::Fetch::METHOD_FAIL
       MAPPING
       FREQUENTLY ASKED QUESTIONS
           So how do I use a proxy with File::Fetch?
           I used 'lynx' to fetch a file, but its contents is all wrong!
           Files I'm trying to fetch have reserved characters or non-ASCII
           characters in them. What do I do?
       TODO
           Implement $PREFER_BIN

       BUG REPORTS
       AUTHOR
       COPYRIGHT

       File::Find - Traverse a directory tree.


       SYNOPSIS
       DESCRIPTION
           find, finddepth

           %options
               "wanted", "bydepth", "preprocess", "postprocess", "follow",
               "follow_fast", "follow_skip", "dangling_symlinks", "no_chdir",
               "untaint", "untaint_pattern", "untaint_skip"

           The wanted function
               $File::Find::dir is the current directory name,, $_ is the
               current filename within that directory, $File::Find::name is
               the complete pathname to the file

       WARNINGS
       CAVEAT
           $dont_use_nlink, symlinks

       NOTES
       BUGS AND CAVEATS
       HISTORY

       File::Glob - Perl extension for BSD glob routine


       SYNOPSIS
       DESCRIPTION
           META CHARACTERS
           POSIX FLAGS
               "GLOB_ERR", "GLOB_LIMIT", "GLOB_MARK", "GLOB_NOCASE",
               "GLOB_NOCHECK", "GLOB_NOSORT", "GLOB_BRACE", "GLOB_NOMAGIC",
               "GLOB_QUOTE", "GLOB_TILDE", "GLOB_CSH", "GLOB_ALPHASORT"

       DIAGNOSTICS
           "GLOB_NOSPACE", "GLOB_ABEND"

       NOTES
       SEE ALSO
       AUTHOR

       File::GlobMapper - Extend File Glob to Allow Input and Output Files


       SYNOPSIS
       DESCRIPTION
           This code is a work in progress, There are known bugs, The
           interface defined here is tentative, There are portability issues,
           Do not use in production code, Consider yourself warned!

           Behind The Scenes
           Limitations
           Input File Glob
               ~, ~user, ., *, ?, \,  [],  {,},  ()

           Output File Glob
               "*", #1

           Returned Data
       EXAMPLES
           A Rename script
           A few example globmaps
       SEE ALSO
       AUTHOR
       COPYRIGHT AND LICENSE

       File::Path - Create or remove directory trees


       VERSION
       SYNOPSIS
       DESCRIPTION
           FUNCTIONS
               mode, verbose, error, verbose, safe, keep_root, result, error

           TRADITIONAL INTERFACE
           ERROR HANDLING
           NOTES
       DIAGNOSTICS
           mkdir [path]: [errmsg] (SEVERE), No root path(s) specified, No such
           file or directory, cannot fetch initial working directory:
           [errmsg], cannot stat initial working directory: [errmsg], cannot
           chdir to [dir]: [errmsg], directory [dir] changed before chdir,
           expected dev=[n] inode=[n], actual dev=[n] ino=[n], aborting.
           (FATAL), cannot make directory [dir] read+writeable: [errmsg],
           cannot read [dir]: [errmsg], cannot reset chmod [dir]: [errmsg],
           cannot chdir to [parent-dir] from [child-dir]: [errmsg], aborting.
           (FATAL), cannot stat prior working directory [dir]: [errmsg],
           aborting. (FATAL), previous directory [parent-dir] changed before
           entering [child-dir], expected dev=[n] inode=[n], actual dev=[n]
           ino=[n], aborting.  (FATAL), cannot make directory [dir] writeable:
           [errmsg], cannot remove directory [dir]: [errmsg], cannot restore
           permissions of [dir] to [0nnn]: [errmsg], cannot make file [file]
           writeable: [errmsg], cannot unlink file [file]: [errmsg], cannot
           restore permissions of [file] to [0nnn]: [errmsg]

       SEE ALSO
       BUGS
       ACKNOWLEDGEMENTS
       AUTHORS
       COPYRIGHT
       LICENSE

       File::Spec - portably perform operations on file names


       SYNOPSIS
       DESCRIPTION
       METHODS
           canonpath , catdir , catfile , curdir , devnull , rootdir , tmpdir
           , updir , no_upwards, case_tolerant, file_name_is_absolute, path ,
           join , splitpath  , splitdir
            , catpath(), abs2rel , rel2abs()

       SEE ALSO
       AUTHOR
       COPYRIGHT

       File::Spec::Cygwin - methods for Cygwin file specs


       SYNOPSIS
       DESCRIPTION

       canonpath

       file_name_is_absolute

       tmpdir (override)

       case_tolerant

       COPYRIGHT

       File::Spec::Epoc - methods for Epoc file specs

       SYNOPSIS
       DESCRIPTION

       canonpath()

       AUTHOR
       COPYRIGHT
       SEE ALSO

       File::Spec::Functions - portably perform operations on file names


       SYNOPSIS
       DESCRIPTION
           Exports
       COPYRIGHT
       SEE ALSO

       File::Spec::Mac - File::Spec for Mac OS (Classic)


       SYNOPSIS
       DESCRIPTION
       METHODS
           canonpath

       catdir()

       catfile

       curdir

       devnull

       rootdir

       tmpdir

       updir

       file_name_is_absolute

       path

       splitpath

       splitdir

       catpath

       abs2rel

       rel2abs

       AUTHORS
       COPYRIGHT
       SEE ALSO

       File::Spec::OS2 - methods for OS/2 file specs


       SYNOPSIS
       DESCRIPTION
           tmpdir, splitpath

       COPYRIGHT

       File::Spec::Unix - File::Spec for Unix, base for other File::Spec
       modules

       SYNOPSIS
       DESCRIPTION
       METHODS
           canonpath()

       catdir()

       catfile

       curdir

       devnull

       rootdir

       tmpdir

       updir

       no_upwards

       case_tolerant

       file_name_is_absolute

       path

       join

       splitpath

       splitdir

       catpath()

       abs2rel

       rel2abs()

       COPYRIGHT
       SEE ALSO

       File::Spec::VMS - methods for VMS file specs


       SYNOPSIS
       DESCRIPTION
           canonpath (override)

       catdir (override)

       catfile (override)

       curdir (override)

       devnull (override)

       rootdir (override)

       tmpdir (override)

       updir (override)

       case_tolerant (override)

       path (override)

       file_name_is_absolute (override)

       splitpath (override)

       splitdir (override)

       catpath (override)

       abs2rel (override)

       rel2abs (override)

       COPYRIGHT
       SEE ALSO

       File::Spec::Win32 - methods for Win32 file specs


       SYNOPSIS
       DESCRIPTION
           devnull

       tmpdir

       case_tolerant

       file_name_is_absolute

       catfile

       canonpath

       splitpath

       splitdir

       catpath

       Note For File::Spec::Win32 Maintainers
       COPYRIGHT
       SEE ALSO

       File::Temp - return name and handle of a temporary file safely


       PORTABILITY
       SYNOPSIS
       DESCRIPTION
       OBJECT-ORIENTED INTERFACE
           new

       filename

       unlink_on_destroy

       DESTROY

       FUNCTIONS
           tempfile

       tempdir

       MKTEMP FUNCTIONS
           mkstemp

       mkstemps

       mkdtemp

       mktemp

       POSIX FUNCTIONS
           tmpnam

       tmpfile

       ADDITIONAL FUNCTIONS
           tempnam

       UTILITY FUNCTIONS
           unlink0

       cmpstat

       unlink1

       cleanup

       PACKAGE VARIABLES
           safe_level, STANDARD, MEDIUM, HIGH

       TopSystemUID

       $KEEP_ALL, $DEBUG

       WARNING
           Temporary files and NFS
           Forking
           BINMODE
       HISTORY
       SEE ALSO
       AUTHOR

       File::stat - by-name interface to Perl's built-in stat() functions


       SYNOPSIS
       DESCRIPTION
       BUGS
       NOTE
       AUTHOR

       FileCache - keep more files open than the system permits


       SYNOPSIS
       DESCRIPTION
           cacheout EXPR, cacheout MODE, EXPR

       CAVEATS
       BUGS

       FileHandle - supply object methods for filehandles


       SYNOPSIS
       DESCRIPTION
           $fh->print, $fh->printf, $fh->getline, $fh->getlines

       SEE ALSO

       Filter::Simple - Simplified source filtering

       SYNOPSIS
       DESCRIPTION
           The Problem
           A Solution
           Disabling or changing <no> behaviour
           All-in-one interface
           Filtering only specific components of source code
               "code", "code_no_comments", "executable",
               "executable_no_comments", "quotelike", "string", "regex", "all"

           Filtering only the code parts of source code
               Most source code ceases to be grammatically correct when it is
               broken up into the pieces between string literals and regexes.
               So the 'code' and 'code_no_comments' component filter behave
               slightly differently from the other partial filters described
               in the previous section.

           Using Filter::Simple with an explicit "import" subroutine
           Using Filter::Simple and Exporter together
           How it works
       AUTHOR
       COPYRIGHT

       Filter::Util::Call - Perl Source Filter Utility Module


       SYNOPSIS
       DESCRIPTION
           use Filter::Util::Call
           import()
           filter() and anonymous sub
               $_, $status, filter_read and filter_read_exact, filter_del

       EXAMPLES
           Example 1: A simple filter.
           Example 2: Using the context
           Example 3: Using the context within the filter
           Example 4: Using filter_del
       Filter::Simple
       AUTHOR
       DATE

       FindBin - Locate directory of original perl script


       SYNOPSIS
       DESCRIPTION
       EXPORTABLE VARIABLES
       KNOWN ISSUES
       KNOWN BUGS
       AUTHORS
       COPYRIGHT

       GDBM_File - Perl5 access to the gdbm library.


       SYNOPSIS
       DESCRIPTION
       AVAILABILITY
       BUGS
       SEE ALSO

       Getopt::Long - Extended processing of command line options


       SYNOPSIS
       DESCRIPTION
       Command Line Options, an Introduction
       Getting Started with Getopt::Long
           Simple options
           A little bit less simple options
           Mixing command line option with other arguments
           Options with values
           Options with multiple values
           Options with hash values
           User-defined subroutines to handle options
           Options with multiple names
           Case and abbreviations
           Summary of Option Specifications
               !, +, s, i, o, f, : type [ desttype ], : number [ desttype ], :
               + [ desttype ]

       Advanced Possibilities
           Object oriented interface
           Thread Safety
           Documentation and help texts
           Parsing options from an arbitrary array
           Parsing options from an arbitrary string
           Storing options values in a hash
           Bundling
           The lonesome dash
           Argument callback
       Configuring Getopt::Long
           default, posix_default, auto_abbrev, getopt_compat, gnu_compat,
           gnu_getopt, require_order, permute, bundling (default: disabled),
           bundling_override (default: disabled), ignore_case  (default:
           enabled), ignore_case_always (default: disabled), auto_version
           (default:disabled), auto_help (default:disabled), pass_through
           (default: disabled), prefix, prefix_pattern, long_prefix_pattern,
           debug (default: disabled)

       Exportable Methods
           VersionMessage, "-message", "-msg", "-exitval", "-output",
           HelpMessage

       Return values and Errors
       Legacy
           Default destinations
           Alternative option starters
           Configuration variables
       Tips and Techniques
           Pushing multiple values in a hash option
       Trouble Shooting
           GetOptions does not return a false result when an option is not
           supplied
           GetOptions does not split the command line correctly
           Undefined subroutine &main::GetOptions called
           How do I put a "-?" option into a Getopt::Long?
       AUTHOR
       COPYRIGHT AND DISCLAIMER

       Getopt::Std, getopt, getopts - Process single-character switches with
       switch clustering


       SYNOPSIS
       DESCRIPTION
       "--help" and "--version"

       Hash::Util - A selection of general-utility hash subroutines


       SYNOPSIS
       DESCRIPTION
           Restricted hashes
               lock_keys, unlock_keys

       lock_keys_plus

       lock_value, unlock_value

       lock_hash, unlock_hash

       lock_hash_recurse, unlock_hash_recurse

       hash_unlocked

       legal_keys, hidden_keys, all_keys, hash_seed

       hv_store

       Operating on references to hashes.
           lock_ref_keys, unlock_ref_keys, lock_ref_keys_plus, lock_ref_value,
           unlock_ref_value, lock_hashref, unlock_hashref,
           lock_hashref_recurse, unlock_hashref_recurse, hash_ref_unlocked,
           legal_ref_keys, hidden_ref_keys

       CAVEATS
       BUGS
       AUTHOR
       SEE ALSO

       Hash::Util::FieldHash - Support for Inside-Out Classes


       SYNOPSIS
       FUNCTIONS
           id, id_2obj, register, idhash, idhashes, fieldhash, fieldhashes

       DESCRIPTION
           The Inside-out Technique
           Problems of Inside-out
           Solutions
           More Problems
           The Generic Object
           How to use Field Hashes
           Garbage-Collected Hashes
       EXAMPLES
           "init()", "first()", "last()", "name()", "Name_hash", "Name_id",
           "Name_idhash", "Name_id_reg", "Name_idhash_reg", "Name_fieldhash"

           Example 1
           Example 2
       GUTS
           The "PERL_MAGIC_uvar" interface for hashes
           Weakrefs call uvar magic
           How field hashes work
           Internal function Hash::Util::FieldHash::_fieldhash
       AUTHOR
       COPYRIGHT AND LICENSE

       Hash::Util::FieldHash::lib::Hash::Util::FieldHash,
       Hash::Util::FieldHash - Support for Inside-Out Classes


       SYNOPSIS
       FUNCTIONS
           id, id_2obj, register, idhash, idhashes, fieldhash, fieldhashes

       DESCRIPTION
           The Inside-out Technique
           Problems of Inside-out
           Solutions
           More Problems
           The Generic Object
           How to use Field Hashes
           Garbage-Collected Hashes
       EXAMPLES
           "init()", "first()", "last()", "name()", "Name_hash", "Name_id",
           "Name_idhash", "Name_id_reg", "Name_idhash_reg", "Name_fieldhash"

           Example 1
           Example 2
       GUTS
           The "PERL_MAGIC_uvar" interface for hashes
           Weakrefs call uvar magic
           How field hashes work
           Internal function Hash::Util::FieldHash::_fieldhash
       AUTHOR
       COPYRIGHT AND LICENSE

       Hash::Utilib::Hash::Util, Hash::Util - A selection of general-utility
       hash subroutines


       SYNOPSIS
       DESCRIPTION
           Restricted hashes
               lock_keys, unlock_keys

       lock_keys_plus

       lock_value, unlock_value

       lock_hash, unlock_hash

       lock_hash_recurse, unlock_hash_recurse

       hash_unlocked

       legal_keys, hidden_keys, all_keys, hash_seed

       hv_store

       Operating on references to hashes.
           lock_ref_keys, unlock_ref_keys, lock_ref_keys_plus, lock_ref_value,
           unlock_ref_value, lock_hashref, unlock_hashref,
           lock_hashref_recurse, unlock_hashref_recurse, hash_ref_unlocked,
           legal_ref_keys, hidden_ref_keys

       CAVEATS
       BUGS
       AUTHOR
       SEE ALSO

       I18N::Collate - compare 8-bit scalar data according to the current
       locale


       SYNOPSIS
       DESCRIPTION

       I18N::LangTags - functions for dealing with RFC3066-style language tags


       SYNOPSIS
       DESCRIPTION

       the function is_language_tag($lang1)

       the function extract_language_tags($whatever)

       the function same_language_tag($lang1, $lang2)

       the function similarity_language_tag($lang1, $lang2)

       the function is_dialect_of($lang1, $lang2)

       the function super_languages($lang1)

       the function locale2language_tag($locale_identifier)

       the function encode_language_tag($lang1)

       the function alternate_language_tags($lang1)

       the function @langs = panic_languages(@accept_languages)

       the function implicate_supers( ...languages... ), the function
       implicate_supers_strictly( ...languages... )

       ABOUT LOWERCASING
       ABOUT UNICODE PLAINTEXT LANGUAGE TAGS
       SEE ALSO
       COPYRIGHT
       AUTHOR

       I18N::LangTags::Detect - detect the user's language preferences


       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
       ENVIRONMENT
       SEE ALSO
       COPYRIGHT
       AUTHOR

       I18N::LangTags::List -- tags and names for human languages


       SYNOPSIS
       DESCRIPTION
       ABOUT LANGUAGE TAGS
       LIST OF LANGUAGES
           {ab} : Abkhazian, {ace} : Achinese, {ach} : Acoli, {ada} : Adangme,
           {ady} : Adyghe, {aa} : Afar, {afh} : Afrihili, {af} : Afrikaans,
           [{afa} : Afro-Asiatic (Other)], {ak} : Akan, {akk} : Akkadian, {sq}
           : Albanian, {ale} : Aleut, [{alg} : Algonquian languages], [{tut} :
           Altaic (Other)], {am} : Amharic, {i-ami} : Ami, [{apa} : Apache
           languages], {ar} : Arabic, {arc} : Aramaic, {arp} : Arapaho, {arn}
           : Araucanian, {arw} : Arawak, {hy} : Armenian, {an} : Aragonese,
           [{art} : Artificial (Other)], {ast} : Asturian, {as} : Assamese,
           [{ath} : Athapascan languages], [{aus} : Australian languages],
           [{map} : Austronesian (Other)], {av} : Avaric, {ae} : Avestan,
           {awa} : Awadhi, {ay} : Aymara, {az} : Azerbaijani, {ban} :
           Balinese, [{bat} : Baltic (Other)], {bal} : Baluchi, {bm} :
           Bambara, [{bai} : Bamileke languages], {bad} : Banda, [{bnt} :
           Bantu (Other)], {bas} : Basa, {ba} : Bashkir, {eu} : Basque, {btk}
           : Batak (Indonesia), {bej} : Beja, {be} : Belarusian, {bem} :
           Bemba, {bn} : Bengali, [{ber} : Berber (Other)], {bho} : Bhojpuri,
           {bh} : Bihari, {bik} : Bikol, {bin} : Bini, {bi} : Bislama, {bs} :
           Bosnian, {bra} : Braj, {br} : Breton, {bug} : Buginese, {bg} :
           Bulgarian, {i-bnn} : Bunun, {bua} : Buriat, {my} : Burmese, {cad} :
           Caddo, {car} : Carib, {ca} : Catalan, [{cau} : Caucasian (Other)],
           {ceb} : Cebuano, [{cel} : Celtic (Other)], [{cai} : Central
           American Indian (Other)], {chg} : Chagatai, [{cmc} : Chamic
           languages], {ch} : Chamorro, {ce} : Chechen, {chr} : Cherokee,
           {chy} : Cheyenne, {chb} : Chibcha, {ny} : Chichewa, {zh} : Chinese,
           {chn} : Chinook Jargon, {chp} : Chipewyan, {cho} : Choctaw, {cu} :
           Church Slavic, {chk} : Chuukese, {cv} : Chuvash, {cop} : Coptic,
           {kw} : Cornish, {co} : Corsican, {cr} : Cree, {mus} : Creek, [{cpe}
           : English-based Creoles and pidgins (Other)], [{cpf} : French-based
           Creoles and pidgins (Other)], [{cpp} : Portuguese-based Creoles and
           pidgins (Other)], [{crp} : Creoles and pidgins (Other)], {hr} :
           Croatian, [{cus} : Cushitic (Other)], {cs} : Czech, {dak} : Dakota,
           {da} : Danish, {dar} : Dargwa, {day} : Dayak, {i-default} : Default
           (Fallthru) Language, {del} : Delaware, {din} : Dinka, {dv} :
           Divehi, {doi} : Dogri, {dgr} : Dogrib, [{dra} : Dravidian (Other)],
           {dua} : Duala, {nl} : Dutch, {dum} : Middle Dutch (ca.1050-1350),
           {dyu} : Dyula, {dz} : Dzongkha, {efi} : Efik, {egy} : Ancient
           Egyptian, {eka} : Ekajuk, {elx} : Elamite, {en} : English, {enm} :
           Old English (1100-1500), {ang} : Old English (ca.450-1100),
           {i-enochian} : Enochian (Artificial), {myv} : Erzya, {eo} :
           Esperanto, {et} : Estonian, {ee} : Ewe, {ewo} : Ewondo, {fan} :
           Fang, {fat} : Fanti, {fo} : Faroese, {fj} : Fijian, {fi} : Finnish,
           [{fiu} : Finno-Ugrian (Other)], {fon} : Fon, {fr} : French, {frm} :
           Middle French (ca.1400-1600), {fro} : Old French (842-ca.1400),
           {fy} : Frisian, {fur} : Friulian, {ff} : Fulah, {gaa} : Ga, {gd} :
           Scots Gaelic, {gl} : Gallegan, {lg} : Ganda, {gay} : Gayo, {gba} :
           Gbaya, {gez} : Geez, {ka} : Georgian, {de} : German, {gmh} : Middle
           High German (ca.1050-1500), {goh} : Old High German (ca.750-1050),
           [{gem} : Germanic (Other)], {gil} : Gilbertese, {gon} : Gondi,
           {gor} : Gorontalo, {got} : Gothic, {grb} : Grebo, {grc} : Ancient
           Greek, {el} : Modern Greek, {gn} : Guarani, {gu} : Gujarati, {gwi}
           : Gwich'in, {hai} : Haida, {ht} : Haitian, {ha} : Hausa, {haw} :
           Hawaiian, {he} : Hebrew, {hz} : Herero, {hil} : Hiligaynon, {him} :
           Himachali, {hi} : Hindi, {ho} : Hiri Motu, {hit} : Hittite, {hmn} :
           Hmong, {hu} : Hungarian, {hup} : Hupa, {iba} : Iban, {is} :
           Icelandic, {io} : Ido, {ig} : Igbo, {ijo} : Ijo, {ilo} : Iloko,
           [{inc} : Indic (Other)], [{ine} : Indo-European (Other)], {id} :
           Indonesian, {inh} : Ingush, {ia} : Interlingua (International
           Auxiliary Language Association), {ie} : Interlingue, {iu} :
           Inuktitut, {ik} : Inupiaq, [{ira} : Iranian (Other)], {ga} : Irish,
           {mga} : Middle Irish (900-1200), {sga} : Old Irish (to 900), [{iro}
           : Iroquoian languages], {it} : Italian, {ja} : Japanese, {jv} :
           Javanese, {jrb} : Judeo-Arabic, {jpr} : Judeo-Persian, {kbd} :
           Kabardian, {kab} : Kabyle, {kac} : Kachin, {kl} : Kalaallisut,
           {xal} : Kalmyk, {kam} : Kamba, {kn} : Kannada, {kr} : Kanuri, {krc}
           : Karachay-Balkar, {kaa} : Kara-Kalpak, {kar} : Karen, {ks} :
           Kashmiri, {csb} : Kashubian, {kaw} : Kawi, {kk} : Kazakh, {kha} :
           Khasi, {km} : Khmer, [{khi} : Khoisan (Other)], {kho} : Khotanese,
           {ki} : Kikuyu, {kmb} : Kimbundu, {rw} : Kinyarwanda, {ky} :
           Kirghiz, {i-klingon} : Klingon, {kv} : Komi, {kg} : Kongo, {kok} :
           Konkani, {ko} : Korean, {kos} : Kosraean, {kpe} : Kpelle, {kro} :
           Kru, {kj} : Kuanyama, {kum} : Kumyk, {ku} : Kurdish, {kru} :
           Kurukh, {kut} : Kutenai, {lad} : Ladino, {lah} : Lahnda, {lam} :
           Lamba, {lo} : Lao, {la} : Latin, {lv} : Latvian, {lb} :
           Letzeburgesch, {lez} : Lezghian, {li} : Limburgish, {ln} : Lingala,
           {lt} : Lithuanian, {nds} : Low German, {art-lojban} : Lojban
           (Artificial), {loz} : Lozi, {lu} : Luba-Katanga, {lua} : Luba-
           Lulua, {lui} : Luiseno, {lun} : Lunda, {luo} : Luo (Kenya and
           Tanzania), {lus} : Lushai, {mk} : Macedonian, {mad} : Madurese,
           {mag} : Magahi, {mai} : Maithili, {mak} : Makasar, {mg} : Malagasy,
           {ms} : Malay, {ml} : Malayalam, {mt} : Maltese, {mnc} : Manchu,
           {mdr} : Mandar, {man} : Mandingo, {mni} : Manipuri, [{mno} : Manobo
           languages], {gv} : Manx, {mi} : Maori, {mr} : Marathi, {chm} :
           Mari, {mh} : Marshall, {mwr} : Marwari, {mas} : Masai, [{myn} :
           Mayan languages], {men} : Mende, {mic} : Micmac, {min} :
           Minangkabau, {i-mingo} : Mingo, [{mis} : Miscellaneous languages],
           {moh} : Mohawk, {mdf} : Moksha, {mo} : Moldavian, [{mkh} : Mon-
           Khmer (Other)], {lol} : Mongo, {mn} : Mongolian, {mos} : Mossi,
           [{mul} : Multiple languages], [{mun} : Munda languages], {nah} :
           Nahuatl, {nap} : Neapolitan, {na} : Nauru, {nv} : Navajo, {nd} :
           North Ndebele, {nr} : South Ndebele, {ng} : Ndonga, {ne} : Nepali,
           {new} : Newari, {nia} : Nias, [{nic} : Niger-Kordofanian (Other)],
           [{ssa} : Nilo-Saharan (Other)], {niu} : Niuean, {nog} : Nogai,
           {non} : Old Norse, [{nai} : North American Indian], {no} :
           Norwegian, {nb} : Norwegian Bokmal, {nn} : Norwegian Nynorsk,
           [{nub} : Nubian languages], {nym} : Nyamwezi, {nyn} : Nyankole,
           {nyo} : Nyoro, {nzi} : Nzima, {oc} : Occitan (post 1500), {oj} :
           Ojibwa, {or} : Oriya, {om} : Oromo, {osa} : Osage, {os} : Ossetian;
           Ossetic, [{oto} : Otomian languages], {pal} : Pahlavi, {i-pwn} :
           Paiwan, {pau} : Palauan, {pi} : Pali, {pam} : Pampanga, {pag} :
           Pangasinan, {pa} : Panjabi, {pap} : Papiamento, [{paa} : Papuan
           (Other)], {fa} : Persian, {peo} : Old Persian (ca.600-400 B.C.),
           [{phi} : Philippine (Other)], {phn} : Phoenician, {pon} :
           Pohnpeian, {pl} : Polish, {pt} : Portuguese, [{pra} : Prakrit
           languages], {pro} : Old Provencal (to 1500), {ps} : Pushto, {qu} :
           Quechua, {rm} : Raeto-Romance, {raj} : Rajasthani, {rap} : Rapanui,
           {rar} : Rarotongan, [{qaa - qtz} : Reserved for local use.], [{roa}
           : Romance (Other)], {ro} : Romanian, {rom} : Romany, {rn} : Rundi,
           {ru} : Russian, [{sal} : Salishan languages], {sam} : Samaritan
           Aramaic, {se} : Northern Sami, {sma} : Southern Sami, {smn} : Inari
           Sami, {smj} : Lule Sami, {sms} : Skolt Sami, [{smi} : Sami
           languages (Other)], {sm} : Samoan, {sad} : Sandawe, {sg} : Sango,
           {sa} : Sanskrit, {sat} : Santali, {sc} : Sardinian, {sas} : Sasak,
           {sco} : Scots, {sel} : Selkup, [{sem} : Semitic (Other)], {sr} :
           Serbian, {srr} : Serer, {shn} : Shan, {sn} : Shona, {sid} : Sidamo,
           {sgn-...} : Sign Languages, {bla} : Siksika, {sd} : Sindhi, {si} :
           Sinhalese, [{sit} : Sino-Tibetan (Other)], [{sio} : Siouan
           languages], {den} : Slave (Athapascan), [{sla} : Slavic (Other)],
           {sk} : Slovak, {sl} : Slovenian, {sog} : Sogdian, {so} : Somali,
           {son} : Songhai, {snk} : Soninke, {wen} : Sorbian languages, {nso}
           : Northern Sotho, {st} : Southern Sotho, [{sai} : South American
           Indian (Other)], {es} : Spanish, {suk} : Sukuma, {sux} : Sumerian,
           {su} : Sundanese, {sus} : Susu, {sw} : Swahili, {ss} : Swati, {sv}
           : Swedish, {syr} : Syriac, {tl} : Tagalog, {ty} : Tahitian, [{tai}
           : Tai (Other)], {tg} : Tajik, {tmh} : Tamashek, {ta} : Tamil,
           {i-tao} : Tao, {tt} : Tatar, {i-tay} : Tayal, {te} : Telugu, {ter}
           : Tereno, {tet} : Tetum, {th} : Thai, {bo} : Tibetan, {tig} :
           Tigre, {ti} : Tigrinya, {tem} : Timne, {tiv} : Tiv, {tli} :
           Tlingit, {tpi} : Tok Pisin, {tkl} : Tokelau, {tog} : Tonga (Nyasa),
           {to} : Tonga (Tonga Islands), {tsi} : Tsimshian, {ts} : Tsonga,
           {i-tsu} : Tsou, {tn} : Tswana, {tum} : Tumbuka, [{tup} : Tupi
           languages], {tr} : Turkish, {ota} : Ottoman Turkish (1500-1928),
           {crh} : Crimean Turkish, {tk} : Turkmen, {tvl} : Tuvalu, {tyv} :
           Tuvinian, {tw} : Twi, {udm} : Udmurt, {uga} : Ugaritic, {ug} :
           Uighur, {uk} : Ukrainian, {umb} : Umbundu, {und} : Undetermined,
           {ur} : Urdu, {uz} : Uzbek, {vai} : Vai, {ve} : Venda, {vi} :
           Vietnamese, {vo} : Volapuk, {vot} : Votic, [{wak} : Wakashan
           languages], {wa} : Walloon, {wal} : Walamo, {war} : Waray, {was} :
           Washo, {cy} : Welsh, {wo} : Wolof, {x-...} : Unregistered (Semi-
           Private Use), {xh} : Xhosa, {sah} : Yakut, {yao} : Yao, {yap} :
           Yapese, {ii} : Sichuan Yi, {yi} : Yiddish, {yo} : Yoruba, [{ypk} :
           Yupik languages], {znd} : Zande, [{zap} : Zapotec], {zen} : Zenaga,
           {za} : Zhuang, {zu} : Zulu, {zun} : Zuni

       SEE ALSO
       COPYRIGHT AND DISCLAIMER
       AUTHOR

       I18N::Langinfo - query locale information


       SYNOPSIS
       DESCRIPTION
           EXPORT
       SEE ALSO
       AUTHOR
       COPYRIGHT AND LICENSE

       IO - load various IO modules


       SYNOPSIS
       DESCRIPTION
       DEPRECATED

       IO::Compress::Base - Base Class for IO::Compress modules


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Compress::Deflate - Write RFC 1950 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           deflate $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeIn => 0|1", "Append => 0|1"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "Append => 0|1", A Buffer, A Filename, A
               Filehandle, "Merge => 0|1", -Level, -Strategy, "Strict => 0|1"

           Examples
       Methods
           print
           printf
           syswrite
           write
           flush
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           newStream([OPTS])
           deflateParams
       Importing
           :all, :constants, :flush, :level, :strategy

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Compress::Gzip - Write RFC 1952 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           gzip $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeIn => 0|1", "Append => 0|1"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "Append => 0|1", A Buffer, A Filename, A
               Filehandle, "Merge => 0|1", -Level, -Strategy, "Minimal =>
               0|1", "Comment => $comment", "Name => $string", "Time =>
               $number", "TextFlag => 0|1", "HeaderCRC => 0|1", "OS_Code =>
               $value", "ExtraField => $data", "ExtraFlags => $value", "Strict
               => 0|1"

           Examples
       Methods
           print
           printf
           syswrite
           write
           flush
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           newStream([OPTS])
           deflateParams
       Importing
           :all, :constants, :flush, :level, :strategy

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Compress::RawDeflate - Write RFC 1951 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           rawdeflate $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeIn => 0|1", "Append => 0|1"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "Append => 0|1", A Buffer, A Filename, A
               Filehandle, "Merge => 0|1", -Level, -Strategy, "Strict => 0|1"

           Examples
       Methods
           print
           printf
           syswrite
           write
           flush
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           newStream([OPTS])
           deflateParams
       Importing
           :all, :constants, :flush, :level, :strategy

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Compress::Zip - Write zip files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           zip $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeIn => 0|1", "Append => 0|1"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "Append => 0|1", A Buffer, A Filename, A
               Filehandle, "Name => $string", "Time => $number", "ExtAttr =>
               $attr", "exTime => [$atime, $mtime, $ctime]", "Comment =>
               $comment", "ZipComment => $comment", "Method => $method",
               "Stream => 0|1", "Zip64 => 0|1", "TextFlag => 0|1",
               "ExtraFieldLocal => $data" =item "ExtraFieldCentral => $data",
               "Minimal => 1|0", "BlockSize100K => number", "WorkFactor =>
               number", -Level, -Strategy, "Strict => 0|1"

           Examples
       Methods
           print
           printf
           syswrite
           write
           flush
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           newStream([OPTS])
           deflateParams
       Importing
           :all, :constants, :flush, :level, :strategy, :zip_method

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Dir - supply object methods for directory handles


       SYNOPSIS
       DESCRIPTION
           new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell
           (), rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::File - supply object methods for filehandles


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

       METHODS
           open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ),
           binmode( [LAYER] )

       NOTE
       SEE ALSO
       HISTORY

       IO::Handle - supply object methods for I/O handles


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new (), new_from_fd ( FD, MODE )

       METHODS
           $io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
           $io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ),
           $io->error, $io->clearerr, $io->sync, $io->flush, $io->printflush (
           ARGS ), $io->blocking ( [ BOOL ] ), $io->untaint

       NOTE
       SEE ALSO
       BUGS
       HISTORY

       IO::Pipe - supply object methods for pipes


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [READER, WRITER] )

       METHODS
           reader ([ARGS]), writer ([ARGS]), handles ()

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::Poll - Object interface to system poll call


       SYNOPSIS
       DESCRIPTION
       METHODS
           mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ),
           remove ( IO ), handles( [ EVENT_MASK ] )

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::Seekable - supply seek based methods for I/O objects


       SYNOPSIS
       DESCRIPTION
           $io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0
           (SEEK_SET), WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek(
           POS, WHENCE ), $io->tell

       SEE ALSO
       HISTORY

       IO::Select - OO interface to the select system call


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ HANDLES ] )

       METHODS
           add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles,
           can_read ( [ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception
           ( [ TIMEOUT ] ), count (), bits(), select ( READ, WRITE, EXCEPTION
           [, TIMEOUT ] )

       EXAMPLE
       AUTHOR
       COPYRIGHT

       IO::Socket - Object interface to socket communications


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ARGS] )

       METHODS
           accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark,
           connected, protocol, sockdomain, sockopt(OPT [, VAL]), socktype,
           timeout([VAL])

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::Socket::INET - Object interface for AF_INET domain sockets


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ARGS] )

           METHODS
               sockaddr (), sockport (), sockhost (), peeraddr (), peerport
               (), peerhost ()

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::Socket::UNIX - Object interface for AF_UNIX domain sockets


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ARGS] )

       METHODS
           hostpath(), peerpath()

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::Uncompress::AnyInflate - Uncompress zlib-based (zip, gzip)
       file/buffer


       SYNOPSIS
       DESCRIPTION
           RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip

       Functional Interface
           anyinflate $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1", "RawInflate => 0|1",
               "ParseExtra => 0|1" If the gzip FEXTRA header field is present
               and this option is set, it will force the module to check that
               it conforms to the sub-field structure as defined in RFC 1952

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           inflateSync
           getHeaderInfo
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Uncompress::AnyUncompress - Uncompress gzip, zip, bzip2 or lzop
       file/buffer


       SYNOPSIS
       DESCRIPTION
           RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip, bzip2, lzop,
           lzf

       Functional Interface
           anyuncompress $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1", "RawInflate => 0|1"

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           getHeaderInfo
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Uncompress::Base - Base Class for IO::Uncompress modules


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Uncompress::Gunzip - Read RFC 1952 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           gunzip $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1", "ParseExtra => 0|1"
               If the gzip FEXTRA header field is present and this option is
               set, it will force the module to check that it conforms to the
               sub-field structure as defined in RFC 1952

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           inflateSync
           getHeaderInfo
               Name, Comment

           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Uncompress::Inflate - Read RFC 1950 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           inflate $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1"

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           inflateSync
           getHeaderInfo
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Uncompress::RawInflate - Read RFC 1951 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           rawinflate $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1"

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           inflateSync
           getHeaderInfo
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Uncompress::Unzip - Read zip files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           unzip $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1"

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           inflateSync
           getHeaderInfo
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO::Zlib - IO:: style interface to Compress::Zlib


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ARGS] )

       OBJECT METHODS
           open ( FILENAME, MODE ), opened, close, getc, getline, getlines,
           print ( ARGS... ), read ( BUF, NBYTES, [OFFSET] ), eof, seek (
           OFFSET, WHENCE ), tell, setpos ( POS ), getpos ( POS )

       USING THE EXTERNAL GZIP
       CLASS METHODS
           has_Compress_Zlib, gzip_external, gzip_used, gzip_read_open,
           gzip_write_open

       DIAGNOSTICS
           IO::Zlib::getlines: must be called in list context,
           IO::Zlib::gzopen_external: mode '...' is illegal, IO::Zlib::import:
           '...'  is illegal, IO::Zlib::import: ':gzip_external' requires an
           argument, IO::Zlib::import: 'gzip_read_open' requires an argument,
           IO::Zlib::import: 'gzip_read' '...' is illegal, IO::Zlib::import:
           'gzip_write_open' requires an argument, IO::Zlib::import:
           'gzip_write_open' '...' is illegal, IO::Zlib::import: no
           Compress::Zlib and no external gzip, IO::Zlib::open: needs a
           filename, IO::Zlib::READ: NBYTES must be specified,
           IO::Zlib::WRITE: too long LENGTH, IO::Zlib::WRITE: OFFSET is not
           supported

       SEE ALSO
       HISTORY
       COPYRIGHT

       IO::lib::IO::Dir, IO::Dir - supply object methods for directory handles


       SYNOPSIS
       DESCRIPTION
           new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell
           (), rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::lib::IO::File, IO::File - supply object methods for filehandles


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

       METHODS
           open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ),
           binmode( [LAYER] )

       NOTE
       SEE ALSO
       HISTORY

       IO::lib::IO::Handle, IO::Handle - supply object methods for I/O handles


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new (), new_from_fd ( FD, MODE )

       METHODS
           $io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
           $io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ),
           $io->error, $io->clearerr, $io->sync, $io->flush, $io->printflush (
           ARGS ), $io->blocking ( [ BOOL ] ), $io->untaint

       NOTE
       SEE ALSO
       BUGS
       HISTORY

       IO::lib::IO::Pipe, IO::Pipe - supply object methods for pipes


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [READER, WRITER] )

       METHODS
           reader ([ARGS]), writer ([ARGS]), handles ()

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::lib::IO::Poll, IO::Poll - Object interface to system poll call


       SYNOPSIS
       DESCRIPTION
       METHODS
           mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ),
           remove ( IO ), handles( [ EVENT_MASK ] )

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for I/O
       objects


       SYNOPSIS
       DESCRIPTION
           $io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0
           (SEEK_SET), WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek(
           POS, WHENCE ), $io->tell

       SEE ALSO
       HISTORY

       IO::lib::IO::Select, IO::Select - OO interface to the select system
       call


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ HANDLES ] )

       METHODS
           add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles,
           can_read ( [ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception
           ( [ TIMEOUT ] ), count (), bits(), select ( READ, WRITE, EXCEPTION
           [, TIMEOUT ] )

       EXAMPLE
       AUTHOR
       COPYRIGHT

       IO::lib::IO::Socket, IO::Socket - Object interface to socket
       communications


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ARGS] )

       METHODS
           accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark,
           connected, protocol, sockdomain, sockopt(OPT [, VAL]), socktype,
           timeout([VAL])

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::lib::IO::Socket::INET, IO::Socket::INET - Object interface for
       AF_INET domain sockets


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ARGS] )

           METHODS
               sockaddr (), sockport (), sockhost (), peeraddr (), peerport
               (), peerhost ()

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO::lib::IO::Socket::UNIX, IO::Socket::UNIX - Object interface for
       AF_UNIX domain sockets


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ARGS] )

       METHODS
           hostpath(), peerpath()

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IO_Compress_Base::lib::File::GlobMapper, File::GlobMapper - Extend File
       Glob to Allow Input and Output Files


       SYNOPSIS
       DESCRIPTION
           This code is a work in progress, There are known bugs, The
           interface defined here is tentative, There are portability issues,
           Do not use in production code, Consider yourself warned!

           Behind The Scenes
           Limitations
           Input File Glob
               ~, ~user, ., *, ?, \,  [],  {,},  ()

           Output File Glob
               "*", #1

           Returned Data
       EXAMPLES
           A Rename script
           A few example globmaps
       SEE ALSO
       AUTHOR
       COPYRIGHT AND LICENSE

       IO_Compress_Base::lib::IO::Compress::Base, IO::Compress::Base - Base
       Class for IO::Compress modules


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Base::lib::IO::Uncompress::AnyUncompress,
       IO::Uncompress::AnyUncompress - Uncompress gzip, zip, bzip2 or lzop
       file/buffer


       SYNOPSIS
       DESCRIPTION
           RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip, bzip2, lzop,
           lzf

       Functional Interface
           anyuncompress $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1", "RawInflate => 0|1"

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           getHeaderInfo
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Base::lib::IO::Uncompress::Base, IO::Uncompress::Base -
       Base Class for IO::Uncompress modules


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Zlib::IO::Compress::Deflate, IO::Compress::Deflate - Write
       RFC 1950 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           deflate $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeIn => 0|1", "Append => 0|1"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "Append => 0|1", A Buffer, A Filename, A
               Filehandle, "Merge => 0|1", -Level, -Strategy, "Strict => 0|1"

           Examples
       Methods
           print
           printf
           syswrite
           write
           flush
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           newStream([OPTS])
           deflateParams
       Importing
           :all, :constants, :flush, :level, :strategy

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Zlib::IO::Compress::Gzip, IO::Compress::Gzip - Write RFC
       1952 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           gzip $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeIn => 0|1", "Append => 0|1"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "Append => 0|1", A Buffer, A Filename, A
               Filehandle, "Merge => 0|1", -Level, -Strategy, "Minimal =>
               0|1", "Comment => $comment", "Name => $string", "Time =>
               $number", "TextFlag => 0|1", "HeaderCRC => 0|1", "OS_Code =>
               $value", "ExtraField => $data", "ExtraFlags => $value", "Strict
               => 0|1"

           Examples
       Methods
           print
           printf
           syswrite
           write
           flush
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           newStream([OPTS])
           deflateParams
       Importing
           :all, :constants, :flush, :level, :strategy

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Zlib::IO::Compress::RawDeflate, IO::Compress::RawDeflate -
       Write RFC 1951 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           rawdeflate $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeIn => 0|1", "Append => 0|1"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "Append => 0|1", A Buffer, A Filename, A
               Filehandle, "Merge => 0|1", -Level, -Strategy, "Strict => 0|1"

           Examples
       Methods
           print
           printf
           syswrite
           write
           flush
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           newStream([OPTS])
           deflateParams
       Importing
           :all, :constants, :flush, :level, :strategy

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Zlib::IO::Compress::Zip, IO::Compress::Zip - Write zip
       files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           zip $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeIn => 0|1", "Append => 0|1"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "Append => 0|1", A Buffer, A Filename, A
               Filehandle, "Name => $string", "Time => $number", "ExtAttr =>
               $attr", "exTime => [$atime, $mtime, $ctime]", "Comment =>
               $comment", "ZipComment => $comment", "Method => $method",
               "Stream => 0|1", "Zip64 => 0|1", "TextFlag => 0|1",
               "ExtraFieldLocal => $data" =item "ExtraFieldCentral => $data",
               "Minimal => 1|0", "BlockSize100K => number", "WorkFactor =>
               number", -Level, -Strategy, "Strict => 0|1"

           Examples
       Methods
           print
           printf
           syswrite
           write
           flush
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           newStream([OPTS])
           deflateParams
       Importing
           :all, :constants, :flush, :level, :strategy, :zip_method

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Zlib::IO::Uncompress::AnyInflate,
       IO::Uncompress::AnyInflate - Uncompress zlib-based (zip, gzip)
       file/buffer


       SYNOPSIS
       DESCRIPTION
           RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip

       Functional Interface
           anyinflate $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1", "RawInflate => 0|1",
               "ParseExtra => 0|1" If the gzip FEXTRA header field is present
               and this option is set, it will force the module to check that
               it conforms to the sub-field structure as defined in RFC 1952

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           inflateSync
           getHeaderInfo
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Zlib::IO::Uncompress::Gunzip, IO::Uncompress::Gunzip - Read
       RFC 1952 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           gunzip $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1", "ParseExtra => 0|1"
               If the gzip FEXTRA header field is present and this option is
               set, it will force the module to check that it conforms to the
               sub-field structure as defined in RFC 1952

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           inflateSync
           getHeaderInfo
               Name, Comment

           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Zlib::IO::Uncompress::Inflate, IO::Uncompress::Inflate -
       Read RFC 1950 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           inflate $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1"

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           inflateSync
           getHeaderInfo
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Zlib::IO::Uncompress::RawInflate,
       IO::Uncompress::RawInflate - Read RFC 1951 files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           rawinflate $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1"

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           inflateSync
           getHeaderInfo
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IO_Compress_Zlib::IO::Uncompress::Unzip, IO::Uncompress::Unzip - Read
       zip files/buffers


       SYNOPSIS
       DESCRIPTION
       Functional Interface
           unzip $input => $output [, OPTS]
               A filename, A filehandle, A scalar reference, An array
               reference, An Input FileGlob string, A filename, A filehandle,
               A scalar reference, An Array Reference, An Output FileGlob

           Notes
           Optional Parameters
               "AutoClose => 0|1", "BinModeOut => 0|1", "Append => 0|1",
               "MultiStream => 0|1", "TrailingData => $scalar"

           Examples
       OO Interface
           Constructor
               A filename, A filehandle, A scalar reference

           Constructor Options
               "AutoClose => 0|1", "MultiStream => 0|1", "Prime => $string",
               "Transparent => 0|1", "BlockSize => $num", "InputLength =>
               $size", "Append => 0|1", "Strict => 0|1"

           Examples
       Methods
           read
           read
           getline
           getc
           ungetc
           inflateSync
           getHeaderInfo
           tell
           eof
           seek
           binmode
           opened
           autoflush
           input_line_number
           fileno
           close
           nextStream
           trailingData
       Importing
           :all

       EXAMPLES
       SEE ALSO
       AUTHOR
       MODIFICATION HISTORY
       COPYRIGHT AND LICENSE

       IPC::Msg - SysV Msg IPC object class


       SYNOPSIS
       DESCRIPTION
       METHODS
           new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ),
           remove, set ( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ),
           snd ( TYPE, MSG [, FLAGS ] ), stat

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IPC::Open2, open2 - open a process for both reading and writing


       SYNOPSIS
       DESCRIPTION
       WARNING
       SEE ALSO

       IPC::Open3, open3 - open a process for reading, writing, and error
       handling


       SYNOPSIS
       DESCRIPTION
       See Also
           IPC::Open2, IPC::Run

       WARNING

       IPC::Semaphore - SysV Semaphore IPC object class

       SYNOPSIS
       DESCRIPTION
       METHODS
           new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM
           ), getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set
           ( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), setall (
           VALUES ), setval ( N , VALUE ), stat

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IPC::SysV - SysV IPC constants


       SYNOPSIS
       DESCRIPTION
           ftok( PATH, ID )

       SEE ALSO
       AUTHORS
       COPYRIGHT

       IPC::SysV::Msg, IPC::Msg - SysV Msg IPC object class


       SYNOPSIS
       DESCRIPTION
       METHODS
           new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ),
           remove, set ( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ),
           snd ( TYPE, MSG [, FLAGS ] ), stat

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IPC::SysV::Semaphore, IPC::Semaphore - SysV Semaphore IPC object class


       SYNOPSIS
       DESCRIPTION
       METHODS
           new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM
           ), getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set
           ( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), setall (
           VALUES ), setval ( N , VALUE ), stat

       SEE ALSO
       AUTHOR
       COPYRIGHT

       IPCmd, IPC::Cmd - finding and running system commands made easy


       SYNOPSIS
       DESCRIPTION
       CLASS METHODS
           $bool = IPC::Cmd->can_use_ipc_run( [VERBOSE] )
       $bool = IPC::Cmd->can_use_ipc_open3( [VERBOSE] )
       $bool = IPC::Cmd->can_capture_buffer
       FUNCTIONS
           $path = can_run( PROGRAM );
       $ok | ($ok, $err, $full_buf, $stdout_buff, $stderr_buff) = run( command
       => COMMAND, [verbose => BOOL, buffer => \$SCALAR] );
           command, verbose, buffer, success, errorcode, full_buffer,
           out_buffer, error_buffer

       HOW IT WORKS
       Global Variables
           $IPC::Cmd::VERBOSE
           $IPC::Cmd::USE_IPC_RUN
           $IPC::Cmd::USE_IPC_OPEN3
           $IPC::Cmd::WARN
       Caveats
           Whitespace, IO Redirect

       See Also
       ACKNOWLEDGEMENTS
       BUG REPORTS
       AUTHOR
       COPYRIGHT

       List::Util - A selection of general-utility list subroutines


       SYNOPSIS
       DESCRIPTION
           first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST,
           reduce BLOCK LIST, shuffle LIST, sum LIST

       KNOWN BUGS
       SUGGESTED ADDITIONS
       SEE ALSO
       COPYRIGHT

       List::Utilib::List::Util, List::Util - A selection of general-utility
       list subroutines


       SYNOPSIS
       DESCRIPTION
           first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST,
           reduce BLOCK LIST, shuffle LIST, sum LIST

       KNOWN BUGS
       SUGGESTED ADDITIONS
       SEE ALSO
       COPYRIGHT

       List::Utilib::Scalar::Util, Scalar::Util - A selection of general-
       utility scalar subroutines


       SYNOPSIS
       DESCRIPTION
           blessed EXPR, dualvar NUM, STRING, isvstring EXPR, isweak EXPR,
           looks_like_number EXPR, openhandle FH, refaddr EXPR, reftype EXPR,
           set_prototype CODEREF, PROTOTYPE, tainted EXPR, weaken REF

       KNOWN BUGS
       SEE ALSO
       COPYRIGHT
       BLATANT PLUG

       Locale::Constants - constants for Locale codes


       SYNOPSIS
       DESCRIPTION
       KNOWN BUGS AND LIMITATIONS
       SEE ALSO
           Locale::Language, Locale::Country, Locale::Script, Locale::Currency

       AUTHOR
       COPYRIGHT

       Locale::Country - ISO codes for country identification (ISO 3166)


       SYNOPSIS
       DESCRIPTION
           alpha-2, alpha-3, numeric

       CONVERSION ROUTINES
           code2country( CODE, [ CODESET ] ), country2code( STRING, [ CODESET
           ] ), country_code2code( CODE, CODESET, CODESET )

       QUERY ROUTINES
           "all_country_codes( [ CODESET ] )", "all_country_names( [ CODESET ]
           )"

       SEMI-PRIVATE ROUTINES
           alias_code
           rename_country
       EXAMPLES
       DOMAIN NAMES
       KNOWN BUGS AND LIMITATIONS
       SEE ALSO
           Locale::Language, Locale::Script, Locale::Currency,
           Locale::SubCountry, ISO 3166-1,
           http://www.iso.org/iso/en/prods-services/iso3166ma/index.html,
           http://www.egt.ie/standards/iso3166/iso3166-1-en.html,
           http://www.cia.gov/cia/publications/factbook/docs/app-d-1.html

       AUTHOR
       COPYRIGHT

       Locale::Currency - ISO three letter codes for currency identification
       (ISO 4217)


       SYNOPSIS
       DESCRIPTION
           XTS, XXX

       CONVERSION ROUTINES
           code2currency(), currency2code()

       QUERY ROUTINES
           "all_currency_codes()", "all_currency_names()"

       EXAMPLES
       KNOWN BUGS AND LIMITATIONS
       SEE ALSO
           Locale::Country, Locale::Script, ISO 4217:1995,
           http://www.bsi-global.com/iso4217currency

       AUTHOR
       COPYRIGHT

       Locale::Language - ISO two letter codes for language identification
       (ISO 639)


       SYNOPSIS
       DESCRIPTION
       CONVERSION ROUTINES
           code2language(), language2code()

       QUERY ROUTINES
           "all_language_codes()", "all_language_names()"

       EXAMPLES
       KNOWN BUGS AND LIMITATIONS
       SEE ALSO
           Locale::Country, Locale::Script, Locale::Currency, ISO 639:1988
           (E/F), http://lcweb.loc.gov/standards/iso639-2/langhome.html

       AUTHOR
       COPYRIGHT

       Locale::Maketext - framework for localization


       SYNOPSIS
       DESCRIPTION
       QUICK OVERVIEW
       METHODS
           Construction Methods
           The "maketext" Method
               $lh->fail_with or $lh->fail_with(PARAM),
               $lh->failure_handler_auto

           Utility Methods
               $language->quant($number, $singular), $language->quant($number,
               $singular, $plural), $language->quant($number, $singular,
               $plural, $negative), $language->numf($number),
               $language->sprintf($format, @items), $language->language_tag(),
               $language->encoding()

           Language Handle Attributes and Internals
       LANGUAGE CLASS HIERARCHIES
       ENTRIES IN EACH LEXICON
       BRACKET NOTATION
       AUTO LEXICONS
       CONTROLLING LOOKUP FAILURE
       HOW TO USE MAKETEXT
       SEE ALSO
       COPYRIGHT AND DISCLAIMER
       AUTHOR

       Locale::Maketext::Simple - Simple interface to
       Locale::Maketext::Lexicon


       VERSION
       SYNOPSIS
       DESCRIPTION
       OPTIONS
           Class
           Path
           Style
           Export
           Subclass
           Decode
           Encoding
       ACKNOWLEDGMENTS
       SEE ALSO
       AUTHORS
       COPYRIGHT
           The "MIT" License

       Locale::Maketext::TPJ13 -- article about software localization


       SYNOPSIS
       DESCRIPTION
       Localization and Perl: gettext breaks, Maketext fixes
           A Localization Horror Story: It Could Happen To You
           The Linguistic View
           Breaking gettext
           Replacing gettext
           Buzzwords: Abstraction and Encapsulation
           Buzzword: Isomorphism
           Buzzword: Inheritance
           Buzzword: Concision
           The Devil in the Details
           The Proof in the Pudding: Localizing Web Sites
           References

       Locale::Script - ISO codes for script identification (ISO 15924)


       SYNOPSIS
       DESCRIPTION
           alpha-2, alpha-3, numeric

           SPECIAL CODES
       CONVERSION ROUTINES
           code2script( CODE, [ CODESET ] ), script2code( STRING, [ CODESET ]
           ), script_code2code( CODE, CODESET, CODESET )

       QUERY ROUTINES
           "all_script_codes ( [ CODESET ] )", "all_script_names ( [ CODESET ]
           )"

       EXAMPLES
       KNOWN BUGS AND LIMITATIONS
       SEE ALSO
           Locale::Language, Locale::Currency, Locale::Country, ISO 15924,
           http://www.evertype.com/standards/iso15924/

       AUTHOR
       COPYRIGHT

       Log::Message - A generic message storing mechanism;


       SYNOPSIS
       DESCRIPTION
       Hierarchy
           Log::Message, Log::Message::Item, Log::Message::Handlers,
           Log::Message::Config

       Options
           config, private, verbose, tag, level, remove, chrono

       Methods
           new
       store
           message, tag, level, extra

       retrieve
           tag, level, message, amount, chrono, remove

       first
       last
       flush
       SEE ALSO
       AUTHOR
       Acknowledgements
       COPYRIGHT

       Log::Message::Config - Configuration options for Log::Message


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR
       Acknowledgements
       COPYRIGHT

       Log::Message::Handlers - Message handlers for Log::Message


       SYNOPSIS
       DESCRIPTION
       Default Handlers
           log
       carp
       croak
       cluck
       confess
       die
       warn
       trace
       Custom Handlers
       SEE ALSO
       AUTHOR
       Acknowledgements
       COPYRIGHT

       Log::Message::Item  - Message objects for Log::Message


       SYNOPSIS
       DESCRIPTION
       Methods and Accessors
           remove
           id
           when
           message
           level
           tag
           shortmess
           longmess
           parent
       SEE ALSO
       AUTHOR
       Acknowledgements
       COPYRIGHT

       Log::Message::Simple


       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
           msg("message string" [,VERBOSE])
           debug("message string" [,VERBOSE])
           error("error string" [,VERBOSE])
       carp();
       croak();
       confess();
       cluck();
       CLASS METHODS
           Log::Message::Simple->stack()
           Log::Message::Simple->stack_as_string([TRACE])
           Log::Message::Simple->flush()
       GLOBAL VARIABLES
           $ERROR_FH, $MSG_FH, $DEBUG_FH, $STACKTRACE_ON_ERROR

       MIME::Base64 - Encoding and decoding of base64 strings


       SYNOPSIS
       DESCRIPTION
           encode_base64($str), encode_base64($str, $eol);,
           decode_base64($str)

       DIAGNOSTICS
           Premature end of base64 data, Premature padding of base64 data,
           Wide character in subroutine entry

       EXAMPLES
       COPYRIGHT
       SEE ALSO

       MIME::Base64::QuotedPrint, MIME::QuotedPrint - Encoding and decoding of
       quoted-printable strings


       SYNOPSIS
       DESCRIPTION
           encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol,
           $binmode), decode_qp($str);

       COPYRIGHT
       SEE ALSO

       MIME::QuotedPrint - Encoding and decoding of quoted-printable strings


       SYNOPSIS
       DESCRIPTION
           encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol,
           $binmode), decode_qp($str);

       COPYRIGHT
       SEE ALSO

       Math::BigFloat - Arbitrary size floating point math package


       SYNOPSIS
       DESCRIPTION
           Canonical notation
           Output
           "mantissa()", "exponent()" and "parts()"
           Accuracy vs. Precision
           Rounding
               ffround ( +$scale ), ffround ( -$scale ), ffround ( 0 ), fround
               ( +$scale ), fround  ( -$scale ) and fround ( 0 )

       METHODS
           accuracy
           precision()
           bexp()
           bnok()
           bpi()
           bcos()
           bsin()
           batan2()
           batan()
           bmuladd()
       Autocreating constants
           Math library
           Using Math::BigInt::Lite
       EXPORTS
       BUGS
       CAVEATS
           stringify, bstr(), bdiv, brsft, Modifying and =, bpow, precision()
           vs.  accuracy()

       SEE ALSO
       LICENSE
       AUTHORS

       Math::BigInt - Arbitrary size integer/float math package


       SYNOPSIS
       DESCRIPTION
           Input, Output

       METHODS
           config()
           accuracy()
           precision()
           brsft()
           new()
           from_oct()
           from_hex()
           from_bin()
           bnan()
           bzero()
           binf()
           bone()
           is_one()/is_zero()/is_nan()/is_inf()
           is_pos()/is_neg()/is_positive()/is_negative()
                       $x->is_pos();                   # true if > 0
                       $x->is_neg();                   # true if < 0

           is_odd()/is_even()/is_int()
           bcmp()
           bacmp()
           sign()
           digit()
           bneg()
           babs()
           bnorm()
           bnot()
           binc()
           bdec()
           badd()
           bsub()
           bmul()
           bmuladd()
           bdiv()
           bmod()
           bmodinv()
           bmodpow()
           bpow()
           blog()
           bexp()
           bnok()
           bpi()
           bcos()
           bsin()
           batan2()
           batan()
           blsft()
           brsft()
           band()
           bior()
           bxor()
           bnot()
           bsqrt()
           broot()
           bfac()
           round()
           bround()
           bfround()
           bfloor()
           bceil()
           bgcd()
           blcm()
           exponent()
           mantissa()
           parts()
           copy()
           as_int()/as_number()
           bsstr()
           as_hex()
           as_bin()
           as_oct()
           numify()
           modify()
           upgrade()/downgrade()
           div_scale()
           round_mode()
       ACCURACY and PRECISION
           Precision P
           Accuracy A
           Fallback F
           Rounding mode R
               'trunc', 'even', 'odd', '+inf', '-inf', 'zero', 'common',
               Precision, Accuracy (significant digits), Setting/Accessing,
               Creating numbers, Usage, Precedence, Overriding globals, Local
               settings, Rounding, Default values, Remarks

       Infinity and Not a Number
           oct()/hex(), log(-inf), exp(), cos(), sin(), atan2()

       INTERNALS
           MATH LIBRARY
           SIGN
           mantissa(), exponent() and parts()
       EXAMPLES
             use Math::BigInt;

       Autocreating constants
       PERFORMANCE
           Alternative math libraries
           SUBCLASSING
       Subclassing Math::BigInt
       UPGRADING
           Auto-upgrade
               bsqrt(), div(), blog(), bexp()

       EXPORTS
       CAVEATS
           bstr(), bsstr() and 'cmp', int(), length, bdiv, infinity handling,
           Modifying and =, bpow, Overloading -$x, Mixing different object
           types, bsqrt(), brsft()

       LICENSE
       SEE ALSO
       AUTHORS

       Math::BigInt::Calc - Pure Perl module to support Math::BigInt


       SYNOPSIS
       DESCRIPTION
       STORAGE
       METHODS
       WRAP YOUR OWN
       LICENSE
           This program is free software; you may redistribute it and/or
           modify it under the same terms as Perl itself.

       AUTHORS
       SEE ALSO

       Math::BigInt::CalcEmu - Emulate low-level math with BigInt code


       SYNOPSIS
       DESCRIPTION
       METHODS
           __emu_bxor
           __emu_band
           __emu_bior
       LICENSE
           This program is free software; you may redistribute it and/or
           modify it under the same terms as Perl itself.

       AUTHORS
       SEE ALSO

       Math::BigInt::FastCalc - Math::BigInt::Calc with some XS for more speed


       SYNOPSIS
       DESCRIPTION
       STORAGE
       METHODS
       LICENSE
           This program is free software; you may redistribute it and/or
           modify it under the same terms as Perl itself.

       AUTHORS
       SEE ALSO

       Math::BigRat - Arbitrary big rational numbers


       SYNOPSIS
       DESCRIPTION
           MATH LIBRARY
       METHODS
           new()
           numerator()
           denominator()
                       $d = $x->denominator();

           parts()
           numify()
           as_int()/as_number()
           as_hex()
           as_bin()
           as_oct()
           from_hex()/from_bin()/from_oct()
           length()
           digit()
           bnorm()
           bfac()
           bround()/round()/bfround()
           bmod()
           bneg()
           is_one()
           is_zero()
           is_pos()/is_positive()
           is_neg()/is_negative()
           is_int()
           is_odd()
           is_even()
           bceil()
           bfloor()
                       $x->bfloor();

           bsqrt()
                       $x->bsqrt();

           broot()
                       $x->broot($n);

           badd()/bmul()/bsub()/bdiv()/bdec()/binc()
           copy()
           bstr()/bsstr()
           bacmp()/bcmp()
           blsft()/brsft()
           bpow()
           bexp()
           bnok()
           config()
       BUGS
           inf handling (partial), NaN handling (partial), rounding (not
           implemented except for bceil/bfloor), $x ** $y where $y is not an
           integer, bmod(), blog(), bmodinv() and bmodpow() (partial)

       LICENSE
       SEE ALSO
       AUTHORS

       Math::Complex - complex numbers and associated mathematical functions


       SYNOPSIS
       DESCRIPTION
       OPERATIONS
       CREATION
       DISPLAYING
           CHANGED IN PERL 5.6
       USAGE
           PI
       ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO
       ERRORS DUE TO INDIGESTIBLE ARGUMENTS
       BUGS
       AUTHORS

       Math::Trig - trigonometric functions


       SYNOPSIS
       DESCRIPTION
       TRIGONOMETRIC FUNCTIONS
           tan

           ERRORS DUE TO DIVISION BY ZERO
           SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS
       PLANE ANGLE CONVERSIONS
           deg2rad, grad2rad, rad2deg, grad2deg, deg2grad, rad2grad, rad2rad,
           deg2deg, grad2grad

       RADIAL COORDINATE CONVERSIONS
           COORDINATE SYSTEMS
           3-D ANGLE CONVERSIONS
               cartesian_to_cylindrical, cartesian_to_spherical,
               cylindrical_to_cartesian, cylindrical_to_spherical,
               spherical_to_cartesian, spherical_to_cylindrical

       GREAT CIRCLE DISTANCES AND DIRECTIONS
           great_circle_distance
           great_circle_direction
           great_circle_bearing
           great_circle_destination
           great_circle_midpoint
           great_circle_waypoint
       EXAMPLES
           CAVEAT FOR GREAT CIRCLE FORMULAS
       BUGS
       AUTHORS

       Memoize - Make functions faster by trading space for time


       SYNOPSIS
       DESCRIPTION
       DETAILS
       OPTIONS
           INSTALL
           NORMALIZER
           "SCALAR_CACHE", "LIST_CACHE"
               "MEMORY", "HASH", "TIE", "FAULT", "MERGE"

       OTHER FACILITIES
           "unmemoize"
           "flush_cache"
       CAVEATS
       PERSISTENT CACHE SUPPORT
       EXPIRATION SUPPORT
       BUGS
       MAILING LIST
       AUTHOR
       COPYRIGHT AND LICENSE
       THANK YOU

       Memoize::AnyDBM_File - glue to provide EXISTS for AnyDBM_File for
       Storable use


       DESCRIPTION

       Memoize::Expire - Plug-in module for automatic expiration of memoized
       values

       SYNOPSIS
       DESCRIPTION
       INTERFACE
            TIEHASH,  EXISTS,  STORE

       ALTERNATIVES
       CAVEATS
       AUTHOR
       SEE ALSO

       Memoize::ExpireFile - test for Memoize expiration semantics


       DESCRIPTION

       Memoize::ExpireTest - test for Memoize expiration semantics

       DESCRIPTION

       Memoize::NDBM_File - glue to provide EXISTS for NDBM_File for Storable
       use


       DESCRIPTION

       Memoize::SDBM_File - glue to provide EXISTS for SDBM_File for Storable
       use

       DESCRIPTION

       Memoize::Storable - store Memoized data in Storable database


       DESCRIPTION

       Module::Build - Build and install Perl modules

       SYNOPSIS
       DESCRIPTION
       GUIDE TO DOCUMENTATION
           General Usage (Module::Build), Authoring Reference
           (Module::Build::Authoring), API Reference (Module::Build::API),
           Cookbook (Module::Build::Cookbook)

       ACTIONS
           build, clean, code, config_data, diff, dist, distcheck, distclean,
           distdir, distmeta, distsign, disttest, docs, fakeinstall, help,
           html, install, manifest, manpages, pardist, ppd, ppmdist,
           prereq_report, pure_install, realclean, retest, skipcheck, test,
           testall, testcover, testdb, testpod, testpodcoverage,
           versioninstall

       OPTIONS
           Command Line Options
               quiet, use_rcfile, verbose, allow_mb_mismatch

           Default Options File (.modulebuildrc)
       INSTALL PATHS
           lib, arch, script, bin, bindoc, libdoc, binhtml, libhtml,
           installdirs, install_path, install_base, destdir, prefix

       MOTIVATIONS
           +, +

       TO DO
       AUTHOR
       COPYRIGHT
       SEE ALSO

       Module::Build::API - API Reference for Module Authors


       DESCRIPTION
           CONSTRUCTORS
               current(), new(), add_to_cleanup, auto_features, autosplit,
               build_class, build_requires, create_packlist, c_source,
               conflicts, create_makefile_pl, create_readme, dist_abstract,
               dist_author, dist_name, dist_version, dist_version_from,
               dynamic_config, extra_compiler_flags, extra_linker_flags,
               get_options, type, store, default, include_dirs, install_path,
               installdirs, license, apache, artistic, artistic_2, bsd, gpl,
               lgpl, mit, mozilla, open_source, perl, restrictive,
               unrestricted, meta_add, meta_merge, module_name, PL_files,
               pm_files, pod_files, recommends, recursive_test_files,
               requires, script_files, sign, test_files, xs_files,
               new_from_context(%args), resume(), subclass()

           METHODS
               add_build_element($type), add_to_cleanup(@files), args(),
               autosplit_file($from, $to), base_dir(), build_requires(),
               check_installed_status($module, $version),
               check_installed_version($module, $version),
               compare_versions($v1, $op, $v2), config($key), config($key,
               $value), config() [deprecated], config_data($name),
               config_data($name => $value), conflicts(), contains_pod($file),
               copy_if_modified(%parameters), create_build_script(),
               current_action(), depends_on(@actions),
               dir_contains($first_dir, $second_dir), dispatch($action,
               %args), dist_dir(), dist_name(), dist_version(),
               do_system($cmd, @args), feature($name), feature($name =>
               $value), have_c_compiler(), install_base_relpaths(),
               install_base_relpaths($type), install_base_relpaths($type =>
               $path), install_destination($type), install_path(),
               install_path($type), install_path($type => $path),
               install_types(), invoked_action(), notes(), notes($key),
               notes($key => $value), orig_dir(), os_type(), is_vmsish(),
               is_windowsish(), is_unixish(), prefix_relpaths(),
               prefix_relpaths($installdirs), prefix_relpaths($installdirs,
               $type), prefix_relpaths($installdirs, $type => $path),
               prepare_metadata(), prereq_failures(), prereq_report(),
               prompt($message, $default), recommends(), requires(),
               rscan_dir($dir, $pattern), runtime_params(),
               runtime_params($key), script_files(), up_to_date($source_file,
               $derived_file), up_to_date(\@source_files, \@derived_files),
               y_n($message, $default)

           Autogenerated Accessors
               PL_files(), allow_mb_mismatch(), autosplit(), base_dir(),
               bindoc_dirs(), blib(), build_bat(), build_class(),
               build_elements(), build_requires(), build_script(), c_source(),
               config_dir(), configure_requires(), conflicts(),
               create_makefile_pl(), create_packlist(), create_readme(),
               debugger(), destdir(), get_options(), html_css(),
               include_dirs(), install_base(), install_sets(), installdirs(),
               libdoc_dirs(), license(), magic_number(), mb_version(),
               meta_add(), meta_merge(), metafile(), module_name(),
               orig_dir(), original_prefix(), perl(), pm_files(), pod_files(),
               pollute(), prefix(), prereq_action_types(), quiet(),
               recommends(), recurse_into(), recursive_test_files(),
               requires(), scripts(), use_rcfile(), verbose(), xs_files()

       MODULE METADATA
           keywords, resources

       AUTHOR
       COPYRIGHT
       SEE ALSO

       Module::Build::Authoring - Authoring Module::Build modules


       DESCRIPTION
       STRUCTURE
       SUBCLASSING
       PREREQUISITES
           Types of prerequisites
               configure_requires, build_requires, requires, recommends,
               conflicts

           Format of prerequisites
           XS Extensions
       SAVING CONFIGURATION INFORMATION
       STARTING MODULE DEVELOPMENT
       AUTOMATION
       MIGRATION
       AUTHOR
       SEE ALSO

       Module::Build::Base - Default methods for Module::Build


       SYNOPSIS
       DESCRIPTION
       AUTHOR
       COPYRIGHT
       SEE ALSO

       Module::Build::Compat - Compatibility with ExtUtils::MakeMaker


       SYNOPSIS
       DESCRIPTION
       METHODS
           create_makefile_pl($style, $build), small, passthrough,
           traditional, run_build_pl(args => \@ARGV), args, script,
           write_makefile(), makefile

       SCENARIOS
       AUTHOR
       COPYRIGHT
       SEE ALSO

       Module::Build::ConfigData - Configuration for Module::Build


       SYNOPSIS
       DESCRIPTION
       METHODS
           config($name), feature($name), set_config($name, $value),
           set_feature($name, $value), config_names(), feature_names(),
           auto_feature_names(), write()

       AUTHOR

       Module::Build::Cookbook - Examples of Module::Build Usage

       DESCRIPTION
       BASIC RECIPES
           Installing modules that use Module::Build
           Modifying Config.pm values
           Installing modules using the programmatic interface
           Installing to a temporary directory
           Installing to a non-standard directory
           Installing in the same location as ExtUtils::MakeMaker
           Running a single test file
       ADVANCED RECIPES
           Making a CPAN.pm-compatible distribution
           Changing the order of the build process
           Adding new file types to the build process
           Adding new elements to the install process
       EXAMPLES ON CPAN
           SVN-Notify-Mirror
               1. Using "auto_features", I check to see whether two optional
               modules are available - SVN::Notify::Config and Net::SSH;, 2.
               If the S::N::Config module is loaded, I automatically generate
               testfiles for it during Build (using the "PL_files" property),
               3. If the "ssh_feature" is available, I ask if the user wishes
               to perform the ssh tests (since it requires a little
               preliminary setup);, 4. Only if the user has "ssh_feature" and
               answers yes to the testing, do I generate a test file

           Modifying an action
       AUTHOR
       COPYRIGHT
       SEE ALSO

       Module::Build::ModuleInfo, ModuleInfo - Gather package and POD
       information from a perl module files


       DESCRIPTION
           new_from_file($filename, collect_pod => 1),
           new_from_module($module, collect_pod => 1, inc => \@dirs), name(),
           version($package), filename(), packages_inside(), pod_inside(),
           contains_pod(), pod($section), find_module_by_name($module,
           \@dirs), find_module_dir_by_name($module, \@dirs)

       AUTHOR
       COPYRIGHT
       SEE ALSO

       Module::Build::Notes, $notes_name - Configuration for $module_name


       SYNOPSIS
       DESCRIPTION
       METHODS
           config(\$name), feature(\$name), set_config(\$name, \$value),
           set_feature(\$name, \$value), config_names(), feature_names(),
           auto_feature_names(), write()

       AUTHOR

       Module::Build::PPMMaker - Perl Package Manager file creation

       SYNOPSIS
       DESCRIPTION
       AUTHOR
       COPYRIGHT
       SEE ALSO

       Module::Build::Platform::Amiga - Builder class for Amiga platforms


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::Default - Stub class for unknown platforms


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::EBCDIC - Builder class for EBCDIC platforms


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::MPEiX - Builder class for MPEiX platforms


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::MacOS - Builder class for MacOS platforms


       DESCRIPTION
           Overriden Methods
               new(), make_executable(), dispatch(), ACTION_realclean()

       AUTHOR
       SEE ALSO

       Module::Build::Platform::RiscOS - Builder class for RiscOS platforms


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::Unix - Builder class for Unix platforms


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::VMS - Builder class for VMS platforms


       DESCRIPTION
           Overridden Methods
               _set_defaults

       cull_args

       manpage_separator

       prefixify

       _quote_args

       have_forkpipe

       _backticks

       do_system

       _infer_xs_spec

       rscan_dir

       dist_dir

       man3page_name

       expand_test_dir

       _detildefy

       find_perl_interpreter

       AUTHOR
       SEE ALSO

       Module::Build::Platform::VOS - Builder class for VOS platforms


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::Windows - Builder class for Windows platforms


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::aix - Builder class for AIX platform


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::cygwin - Builder class for Cygwin platform


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::darwin - Builder class for Mac OS X platform


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::Platform::os2 - Builder class for OS/2 platform


       DESCRIPTION
       AUTHOR
       SEE ALSO

       Module::Build::YAML - Provides just enough YAML support so that
       Module::Build works even if YAML.pm is not installed


       SYNOPSIS
       DESCRIPTION
       AUTHOR
       COPYRIGHT

       Module::CoreList - what modules shipped with versions of perl


       SYNOPSIS
       DESCRIPTION
       CAVEATS
       HISTORY
       AUTHOR
       COPYRIGHT
       SEE ALSO

       Module::Load - runtime require of both modules and files


       SYNOPSIS
       DESCRIPTION
       Rules
       Caveats
       ACKNOWLEDGEMENTS
       BUG REPORTS
       AUTHOR
       COPYRIGHT

       Module::Load::Conditional - Looking up module information / loading at
       runtime


       SYNOPSIS
       DESCRIPTION
       Methods
       $href = check_install( module => NAME [, version => VERSION, verbose =>
       BOOL ] );
           module, version, verbose, file, version, uptodate

       $bool = can_load( modules => { NAME => VERSION [,NAME => VERSION] },
       [verbose => BOOL, nocache => BOOL] )
           modules, verbose, nocache

       @list = requires( MODULE );
       Global Variables
           $Module::Load::Conditional::VERBOSE
           $Module::Load::Conditional::FIND_VERSION
           $Module::Load::Conditional::CHECK_INC_HASH
           $Module::Load::Conditional::CACHE
           $Module::Load::Conditional::ERROR
       See Also
       BUG REPORTS
       AUTHOR
       COPYRIGHT

       Module::Loaded - mark modules as loaded or unloaded


       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
           $bool = mark_as_loaded( PACKAGE );
       $bool = mark_as_unloaded( PACKAGE );
       $loc = is_loaded( PACKAGE );
       AUTHOR
       COPYRIGHT

       Module::Pluggable - automatically give your module the ability to have
       plugins


       SYNOPSIS
       EXAMPLE
       DESCRIPTION
       ADVANCED USAGE
       INNER PACKAGES
       OPTIONS
           sub_name
           search_path
           search_dirs
           instantiate
           require
           inner
           only
           except
           package
           file_regex
       METHODs
           search_path
       FUTURE PLANS
       AUTHOR
       COPYING
       BUGS
       SEE ALSO

       Module::Pluggable::Object - automatically give your module the ability
       to have plugins


       SYNOPSIS
       DESCRIPTION
       AUTHOR
       COPYING
       BUGS
       SEE ALSO

       NDBM_File - Tied access to ndbm files


       SYNOPSIS
       DESCRIPTION
           "O_RDONLY", "O_WRONLY", "O_RDWR"

       DIAGNOSTICS
           "ndbm store returned -1, errno 22, key "..." at ..."
       BUGS AND WARNINGS

       NEXT - Provide a pseudo-class NEXT (et al) that allows method
       redispatch


       SYNOPSIS
       DESCRIPTION
           Enforcing redispatch
           Avoiding repetitions
           Invoking all versions of a method with a single call
           Using "EVERY" methods
       AUTHOR
       BUGS AND IRRITATIONS
       COPYRIGHT

       Net::Cmd - Network Command class (as used by FTP, SMTP etc)


       SYNOPSIS
       DESCRIPTION
       USER METHODS
           debug ( VALUE ), message (), code (), ok (), status (), datasend (
           DATA ), dataend ()

       CLASS METHODS
           debug_print ( DIR, TEXT ), debug_text ( TEXT ), command ( CMD [,
           ARGS, ...  ]), unsupported (), response (), parse_response ( TEXT
           ), getline (), ungetline ( TEXT ), rawdatasend ( DATA ),
           read_until_dot (), tied_fh ()

       EXPORTS
       AUTHOR
       COPYRIGHT

       Net::Config - Local configuration data for libnet


       SYNOPSYS
       DESCRIPTION
       METHODS
           requires_firewall HOST

       NetConfig VALUES
           nntp_hosts, snpp_hosts, pop3_hosts, smtp_hosts, ph_hosts,
           daytime_hosts, time_hosts, inet_domain, ftp_firewall,
           ftp_firewall_type, ftp_ext_passive, ftp_int_passive, local_netmask,
           test_hosts, test_exists

       Net::Domain - Attempt to evaluate the current host's internet name and
       domain


       SYNOPSIS
       DESCRIPTION
           hostfqdn (), domainname (), hostname (), hostdomain ()

       AUTHOR
       COPYRIGHT

       Net::FTP - FTP Client class


       SYNOPSIS
       DESCRIPTION
       OVERVIEW
       CONSTRUCTOR
           new ([ HOST ] [, OPTIONS ])

       METHODS
           login ([LOGIN [,PASSWORD [, ACCOUNT] ] ]), authorize ( [AUTH [,
           RESP]]), site (ARGS), ascii, binary, rename ( OLDNAME, NEWNAME ),
           delete ( FILENAME ), cwd ( [ DIR ] ), cdup (), pwd (), restart (
           WHERE ), rmdir ( DIR [, RECURSE ]), mkdir ( DIR [, RECURSE ]),
           alloc ( SIZE [, RECORD_SIZE] ), ls ( [ DIR ] ), dir ( [ DIR ] ),
           get ( REMOTE_FILE [, LOCAL_FILE [, WHERE]] ), put ( LOCAL_FILE [,
           REMOTE_FILE ] ), put_unique ( LOCAL_FILE [, REMOTE_FILE ] ), append
           ( LOCAL_FILE [, REMOTE_FILE ] ), unique_name (), mdtm ( FILE ),
           size ( FILE ), supported ( CMD ), hash ( [FILEHANDLE_GLOB_REF],[
           BYTES_PER_HASH_MARK] ), feature ( NAME ), nlst ( [ DIR ] ), list (
           [ DIR ] ), retr ( FILE ), stor ( FILE ), stou ( FILE ), appe ( FILE
           ), port ( [ PORT ] ), pasv (), pasv_xfer ( SRC_FILE, DEST_SERVER [,
           DEST_FILE ] ), pasv_xfer_unique ( SRC_FILE, DEST_SERVER [,
           DEST_FILE ] ), pasv_wait ( NON_PASV_SERVER ), abort (), quit ()

           Methods for the adventurous
               quot (CMD [,ARGS])

       THE dataconn CLASS
           read ( BUFFER, SIZE [, TIMEOUT ] ), write ( BUFFER, SIZE [, TIMEOUT
           ] ), bytes_read (), abort (), close ()

       UNIMPLEMENTED
           SMNT, HELP, MODE, SYST, STAT, STRU, REIN

       REPORTING BUGS
       AUTHOR
       SEE ALSO
       USE EXAMPLES
           http://www.csh.rit.edu/~adam/Progs/

       CREDITS
       COPYRIGHT

       Net::NNTP - NNTP Client class


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ HOST ] [, OPTIONS ])

       METHODS
           article ( [ MSGID|MSGNUM ], [FH] ), body ( [ MSGID|MSGNUM ], [FH]
           ), head ( [ MSGID|MSGNUM ], [FH] ), articlefh ( [ MSGID|MSGNUM ] ),
           bodyfh ( [ MSGID|MSGNUM ] ), headfh ( [ MSGID|MSGNUM ] ), nntpstat
           ( [ MSGID|MSGNUM ] ), group ( [ GROUP ] ), ihave ( MSGID [, MESSAGE
           ]), last (), date (), postok (), authinfo ( USER, PASS ), list (),
           newgroups ( SINCE [, DISTRIBUTIONS ]), newnews ( SINCE [, GROUPS [,
           DISTRIBUTIONS ]]), next (), post ( [ MESSAGE ] ), postfh (), slave
           (), quit ()

           Extension methods
               newsgroups ( [ PATTERN ] ), distributions (), subscriptions (),
               overview_fmt (), active_times (), active ( [ PATTERN ] ),
               xgtitle ( PATTERN ), xhdr ( HEADER, MESSAGE-SPEC ), xover (
               MESSAGE-SPEC ), xpath ( MESSAGE-ID ), xpat ( HEADER, PATTERN,
               MESSAGE-SPEC), xrover, listgroup ( [ GROUP ] ), reader

       UNSUPPORTED
       DEFINITIONS
           MESSAGE-SPEC, PATTERN, Examples, "[^]-]", *bdc, "[0-9a-zA-Z]",
           "a??d"

       SEE ALSO
       AUTHOR
       COPYRIGHT

       Net::POP3 - Post Office Protocol 3 Client class (RFC1939)


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
           new ( [ HOST ] [, OPTIONS ] 0

       METHODS
           auth ( USERNAME, PASSWORD ), user ( USER ), pass ( PASS ), login (
           [ USER [, PASS ]] ), apop ( [ USER [, PASS ]] ), banner (), capa
           (),  capabilities (), top ( MSGNUM [, NUMLINES ] ), list ( [ MSGNUM
           ] ), get ( MSGNUM [, FH ] ), getfh ( MSGNUM ), last (), popstat (),
           ping ( USER ), uidl ( [ MSGNUM ] ), delete ( MSGNUM ), reset (),
           quit ()

       NOTES
       SEE ALSO
       AUTHOR
       COPYRIGHT

       Net::Ping - check a remote host for reachability


       SYNOPSIS
       DESCRIPTION
           Functions
               Net::Ping->new([$proto [, $def_timeout [, $bytes [, $device [,
               $tos ]]]]]);, $p->ping($host [, $timeout]);, $p->source_verify(
               { 0 | 1 } );, $p->service_check( { 0 | 1 } );,
               $p->tcp_service_check( { 0 | 1 } );, $p->hires( { 0 | 1 } );,
               $p->bind($local_addr);, $p->open($host);, $p->ack( [ $host ]
               );, $p->nack( $failed_ack_host );, $p->close();,
               $p->port_number([$port_number]), pingecho($host [, $timeout]);

       NOTES
       INSTALL
       BUGS
       AUTHORS
       COPYRIGHT

       Net::SMTP - Simple Mail Transfer Protocol Client


       SYNOPSIS
       DESCRIPTION
       EXAMPLES
       CONSTRUCTOR
           new ( [ HOST ] [, OPTIONS ] )

       METHODS
           banner (), domain (), hello ( DOMAIN ), host (), etrn ( DOMAIN ),
           auth ( USERNAME, PASSWORD ), mail ( ADDRESS [, OPTIONS] ), send (
           ADDRESS ), send_or_mail ( ADDRESS ), send_and_mail ( ADDRESS ),
           reset (), recipient ( ADDRESS [, ADDRESS, [...]] [, OPTIONS ] ), to
           ( ADDRESS [, ADDRESS [...]]  ), cc ( ADDRESS [, ADDRESS [...]] ),
           bcc ( ADDRESS [, ADDRESS [...]] ), data ( [ DATA ] ), expand (
           ADDRESS ), verify ( ADDRESS ), help ( [ $subject ] ), quit ()

       ADDRESSES
       SEE ALSO
       AUTHOR
       COPYRIGHT

       Net::Time - time and daytime network client interface


       SYNOPSIS
       DESCRIPTION
           inet_time ( [HOST [, PROTOCOL [, TIMEOUT]]]), inet_daytime ( [HOST
           [, PROTOCOL [, TIMEOUT]]])

       AUTHOR
       COPYRIGHT

       Net::hostent - by-name interface to Perl's built-in gethost*()
       functions


       SYNOPSIS
       DESCRIPTION
       EXAMPLES
       NOTE
       AUTHOR

       Net::libnetFAQ, libnetFAQ - libnet Frequently Asked Questions


       DESCRIPTION
           Where to get this document
           How to contribute to this document
       Author and Copyright Information
           Disclaimer
       Obtaining and installing libnet
           What is libnet ?
           Which version of perl do I need ?
           What other modules do I need ?
           What machines support libnet ?
           Where can I get the latest libnet release
       Using Net::FTP
           How do I download files from an FTP server ?
           How do I transfer files in binary mode ?
           How can I get the size of a file on a remote FTP server ?
           How can I get the modification time of a file on a remote FTP
           server ?
           How can I change the permissions of a file on a remote server ?
           Can I do a reget operation like the ftp command ?
           How do I get a directory listing from an FTP server ?
           Changing directory to "" does not fail ?
           I am behind a SOCKS firewall, but the Firewall option does not work
           ?
           I am behind an FTP proxy firewall, but cannot access machines
           outside ?
           My ftp proxy firewall does not listen on port 21
           Is it possible to change the file permissions of a file on an FTP
           server ?
           I have seen scripts call a method message, but cannot find it
           documented ?
           Why does Net::FTP not implement mput and mget methods
       Using Net::SMTP
           Why can't the part of an Email address after the @ be used as the
           hostname ?
           Why does Net::SMTP not do DNS MX lookups ?
           The verify method always returns true ?
       Debugging scripts
           How can I debug my scripts that use Net::* modules ?
       AUTHOR AND COPYRIGHT

       Net::netent - by-name interface to Perl's built-in getnet*() functions


       SYNOPSIS
       DESCRIPTION
       EXAMPLES
       NOTE
       AUTHOR

       Net::protoent - by-name interface to Perl's built-in getproto*()
       functions


       SYNOPSIS
       DESCRIPTION
       NOTE
       AUTHOR

       Net::servent - by-name interface to Perl's built-in getserv*()
       functions


       SYNOPSIS
       DESCRIPTION
       EXAMPLES
       NOTE
       AUTHOR

       Netrc, Net::Netrc - OO interface to users netrc file


       SYNOPSIS
       DESCRIPTION
       THE .netrc FILE
           machine name, default, login name, password string, account string,
           macdef name

       CONSTRUCTOR
           lookup ( MACHINE [, LOGIN ])

       METHODS
           login (), password (), account (), lpa ()

       AUTHOR
       SEE ALSO
       COPYRIGHT

       O - Generic interface to Perl Compiler backends


       SYNOPSIS
       DESCRIPTION
       CONVENTIONS
       IMPLEMENTATION
       BUGS
       AUTHOR

       ODBM_File - Tied access to odbm files


       SYNOPSIS
       DESCRIPTION
           "O_RDONLY", "O_WRONLY", "O_RDWR"

       DIAGNOSTICS
           "odbm store returned -1, errno 22, key "..." at ..."
       BUGS AND WARNINGS

       Object::Accessor


       SYNOPSIS
       DESCRIPTION
       METHODS
           $object = Object::Accessor->new( [ARGS] );
       $bool = $object->mk_accessors( @ACCESSORS | \%ACCESSOR_MAP );
       @list = $self->ls_accessors;
       $ref = $self->ls_allow(KEY)
       $clone = $self->mk_clone;
       $bool = $self->mk_flush;
       $bool = $self->mk_verify;
       $bool = $self->register_callback( sub { ... } );
       $bool = $self->can( METHOD_NAME )
       $val = $self->___get( METHOD_NAME );
       $bool = $self->___set( METHOD_NAME => VALUE );
       LVALUE ACCESSORS
           CAVEATS
               Allow handlers, Callbacks

       GLOBAL VARIABLES
           $Object::Accessor::FATAL
           $Object::Accessor::DEBUG
       TODO
           Create read-only accessors
       CAVEATS
       AUTHOR
       COPYRIGHT

       Opcode - Disable named opcodes when compiling perl code


       SYNOPSIS
       DESCRIPTION
       NOTE
       WARNING
       Operator Names and Operator Lists
           an operator name (opname), an operator tag name (optag), a negated
           opname or optag, an operator set (opset)

       Opcode Functions
           opcodes, opset (OP, ...), opset_to_ops (OPSET), opset_to_hex
           (OPSET), full_opset, empty_opset, invert_opset (OPSET),
           verify_opset (OPSET, ...), define_optag (OPTAG, OPSET), opmask_add
           (OPSET), opmask, opdesc (OP, ...), opdump (PAT)

       Manipulating Opsets
       TO DO (maybe)
       Predefined Opcode Tags
           :base_core, :base_mem, :base_loop, :base_io, :base_orig,
           :base_math, :base_thread, :default, :filesys_read, :sys_db,
           :browse, :filesys_open, :filesys_write, :subprocess, :ownprocess,
           :others, :load, :still_to_be_decided, :dangerous

       SEE ALSO
       AUTHORS

       Opcode::Safe, Safe - Compile and execute code in restricted
       compartments


       SYNOPSIS
       DESCRIPTION
           a new namespace, an operator mask

       WARNING
           RECENT CHANGES
           Methods in class Safe
               permit (OP, ...), permit_only (OP, ...), deny (OP, ...),
               deny_only (OP, ...), trap (OP, ...), untrap (OP, ...), share
               (NAME, ...), share_from (PACKAGE, ARRAYREF), varglob (VARNAME),
               reval (STRING), rdo (FILENAME), root (NAMESPACE), mask (MASK)

           Some Safety Issues
               Memory, CPU, Snooping, Signals, State Changes

           AUTHOR

       Opcode::ops, ops - Perl pragma to restrict unsafe operations when
       compiling

       SYNOPSIS
       DESCRIPTION
       SEE ALSO

       POSIX - Perl interface to IEEE Std 1003.1


       SYNOPSIS
       DESCRIPTION
       NOTE
       CAVEATS
       FUNCTIONS
           _exit, abort, abs, access, acos, alarm, asctime, asin, assert,
           atan, atan2, atexit, atof, atoi, atol, bsearch, calloc, ceil,
           chdir, chmod, chown, clearerr, clock, close, closedir, cos, cosh,
           creat, ctermid, ctime, cuserid, difftime, div, dup, dup2, errno,
           execl, execle, execlp, execv, execve, execvp, exit, exp, fabs,
           fclose, fcntl, fdopen, feof, ferror, fflush, fgetc, fgetpos, fgets,
           fileno, floor, fmod, fopen, fork, fpathconf, fprintf, fputc, fputs,
           fread, free, freopen, frexp, fscanf, fseek, fsetpos, fstat, fsync,
           ftell, fwrite, getc, getchar, getcwd, getegid, getenv, geteuid,
           getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid,
           getppid, getpwnam, getpwuid, gets, getuid, gmtime, isalnum,
           isalpha, isatty, iscntrl, isdigit, isgraph, islower, isprint,
           ispunct, isspace, isupper, isxdigit, kill, labs, ldexp, ldiv, link,
           localeconv, localtime, log, log10, longjmp, lseek, malloc, mblen,
           mbstowcs, mbtowc, memchr, memcmp, memcpy, memmove, memset, mkdir,
           mkfifo, mktime, modf, nice, offsetof, open, opendir, pathconf,
           pause, perror, pipe, pow, printf, putc, putchar, puts, qsort,
           raise, rand, read, readdir, realloc, remove, rename, rewind,
           rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid,
           setsid, setuid, sigaction, siglongjmp, sigpending, sigprocmask,
           sigsetjmp, sigsuspend, sin, sinh, sleep, sprintf, sqrt, srand,
           sscanf, stat, strcat, strchr, strcmp, strcoll, strcpy, strcspn,
           strerror, strftime, strlen, strncat, strncmp, strncpy, strpbrk,
           strrchr, strspn, strstr, strtod, strtok, strtol, strtoul, strxfrm,
           sysconf, system, tan, tanh, tcdrain, tcflow, tcflush, tcgetpgrp,
           tcsendbreak, tcsetpgrp, time, times, tmpfile, tmpnam, tolower,
           toupper, ttyname, tzname, tzset, umask, uname, ungetc, unlink,
           utime, vfprintf, vprintf, vsprintf, wait, waitpid, wcstombs,
           wctomb, write

       CLASSES
           POSIX::SigAction
               new, handler, mask, flags, safe

           POSIX::SigRt
               %SIGRT, SIGRTMIN, SIGRTMAX

           POSIX::SigSet
               new, addset, delset, emptyset, fillset, ismember

           POSIX::Termios
               new, getattr, getcc, getcflag, getiflag, getispeed, getlflag,
               getoflag, getospeed, setattr, setcc, setcflag, setiflag,
               setispeed, setlflag, setoflag, setospeed, Baud rate values,
               Terminal interface values, c_cc field values, c_cflag field
               values, c_iflag field values, c_lflag field values, c_oflag
               field values

       PATHNAME CONSTANTS
           Constants

       POSIX CONSTANTS
           Constants

       SYSTEM CONFIGURATION
           Constants

       ERRNO
           Constants

       FCNTL
           Constants

       FLOAT
           Constants

       LIMITS
           Constants

       LOCALE
           Constants

       MATH
           Constants

       SIGNAL
           Constants

       STAT
           Constants, Macros

       STDLIB
           Constants

       STDIO
           Constants

       TIME
           Constants

       UNISTD
           Constants

       WAIT
           Constants, WNOHANG, WUNTRACED, Macros, WIFEXITED, WEXITSTATUS,
           WIFSIGNALED, WTERMSIG, WIFSTOPPED, WSTOPSIG

       Package::Constants - List all constants declared in a package


       SYNOPSIS
       DESCRIPTION
       CLASS METHODS
           @const = Package::Constants->list( PACKAGE_NAME );
       GLOBAL VARIABLES
           $Package::Constants::DEBUG
       AUTHOR
       COPYRIGHT

       Params::Check - A generic input parsing/checking mechanism.


       SYNOPSIS
       DESCRIPTION
       Template
           default, required, strict_type, defined, no_override, store, allow

       Functions
           check( \%tmpl, \%args, [$verbose] );
               Template, Arguments, Verbose

       allow( $test_me, \@criteria );
           string, regexp, subroutine, array ref

       last_error()
       Global Variables
           $Params::Check::VERBOSE
           $Params::Check::STRICT_TYPE
           $Params::Check::ALLOW_UNKNOWN
           $Params::Check::STRIP_LEADING_DASHES
           $Params::Check::NO_DUPLICATES
           $Params::Check::PRESERVE_CASE
           $Params::Check::ONLY_ALLOW_DEFINED
           $Params::Check::SANITY_CHECK_TEMPLATE
           $Params::Check::WARNINGS_FATAL
           $Params::Check::CALLER_DEPTH
       AUTHOR
       Acknowledgements
       COPYRIGHT

       PerlIO - On demand loader for PerlIO layers and root of PerlIO::* name
       space


       SYNOPSIS
       DESCRIPTION
           :unix, :stdio, :perlio, :crlf, :mmap, :utf8, :bytes, :raw, :pop,
           :win32

           Custom Layers
               :encoding, :via

           Alternatives to raw
           Defaults and how to override them
           Querying the layers of filehandles
       AUTHOR
       SEE ALSO

       PerlIO::encoding - encoding layer


       SYNOPSIS
       DESCRIPTION
       SEE ALSO

       PerlIO::scalar - in-memory IO, scalar IO


       SYNOPSIS
       DESCRIPTION
       IMPLEMENTATION NOTE

       PerlIO::via - Helper class for PerlIO layers implemented in perl


       SYNOPSIS
       DESCRIPTION
       EXPECTED METHODS
           $class->PUSHED([$mode[,$fh]]), $obj->POPPED([$fh]),
           $obj->UTF8($bellowFlag,[$fh]), $obj->OPEN($path,$mode[,$fh]),
           $obj->BINMODE([,$fh]), $obj->FDOPEN($fd[,$fh]),
           $obj->SYSOPEN($path,$imode,$perm,[,$fh]), $obj->FILENO($fh),
           $obj->READ($buffer,$len,$fh), $obj->WRITE($buffer,$fh),
           $obj->FILL($fh), $obj->CLOSE($fh), $obj->SEEK($posn,$whence,$fh),
           $obj->TELL($fh), $obj->UNREAD($buffer,$fh), $obj->FLUSH($fh),
           $obj->SETLINEBUF($fh), $obj->CLEARERR($fh), $obj->ERROR($fh),
           $obj->EOF($fh)

       EXAMPLES
           Example - a Hexadecimal Handle

       PerlIO::via::QuotedPrint - PerlIO layer for quoted-printable strings


       SYNOPSIS
       DESCRIPTION
       REQUIRED MODULES
       SEE ALSO
       ACKNOWLEDGEMENTS
       COPYRIGHT

       Pod::Checker, podchecker() - check pod documents for syntax errors


       SYNOPSIS
       OPTIONS/ARGUMENTS
           podchecker()
               -warnings => val

       DESCRIPTION
       DIAGNOSTICS
           Errors
               empty =headn, =over on line N without closing =back, =item
               without previous =over, =back without previous =over, No
               argument for =begin, =end without =begin, Nested =begin's, =for
               without formatter specification, unresolved internal link NAME,
               Unknown command "CMD", Unknown interior-sequence "SEQ", nested
               commands CMD<...CMD<...>...>, garbled entity STRING, Entity
               number out of range, malformed link L<>, nonempty Z<>, empty
               X<>, Spurious text after =pod / =cut, Spurious character(s)
               after =back

           Warnings
               multiple occurrence of link target name, line containing
               nothing but whitespace in paragraph, file does not start with
               =head, previous =item has no contents, preceding non-item
               paragraph(s), =item type mismatch (one vs. two), N unescaped
               "<>" in paragraph, Unknown entity, No items in =over, No
               argument for =item, empty section in previous paragraph,
               Verbatim paragraph in NAME section, =headn without preceding
               higher level

           Hyperlinks
               ignoring leading/trailing whitespace in link, (section) in
               '$page' deprecated, alternative text/node '%s' contains non-
               escaped | or /

       RETURN VALUE
       EXAMPLES
       INTERFACE

       "Pod::Checker->new( %options )"

       "$checker->poderror( @args )", "$checker->poderror( {%opts}, @args )"

       "$checker->num_errors()"

       "$checker->num_warnings()"

       "$checker->name()"

       "$checker->node()"

       "$checker->idx()"

       "$checker->hyperlink()"

       AUTHOR

       Pod::Escapes -- for resolving Pod E<...> sequences

       SYNOPSIS
       DESCRIPTION
       GOODIES
           e2char($e_content), e2charnum($e_content), $Name2character{name},
           $Name2character_number{name}, $Latin1Code_to_fallback{integer},
           $Latin1Char_to_fallback{character}, $Code2USASCII{integer}

       CAVEATS
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Find - find POD documents in directory trees


       SYNOPSIS
       DESCRIPTION
       "pod_find( { %opts } , @directories )"
           "-verbose => 1", "-perl => 1", "-script => 1", "-inc => 1"

       "simplify_name( $str )"
       "pod_where( { %opts }, $pod )"
           "-inc => 1", "-dirs => [ $dir1, $dir2, ... ]", "-verbose => 1"

       "contains_pod( $file , $verbose )"
       AUTHOR
       SEE ALSO

       Pod::Html - module to convert pod files to HTML


       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
           pod2html
               backlink, cachedir, css, flush, header, help, hiddendirs,
               htmldir, htmlroot, index, infile, libpods, netscape, outfile,
               podpath, podroot, quiet, recurse, title, verbose

           htmlify
           anchorify
       ENVIRONMENT
       AUTHOR
       SEE ALSO
       COPYRIGHT

       Pod::InputObjects - objects representing POD input paragraphs,
       commands, etc.


       SYNOPSIS
       REQUIRES
       EXPORTS
       DESCRIPTION
           package Pod::InputSource, package Pod::Paragraph, package
           Pod::InteriorSequence, package Pod::ParseTree

       Pod::InputSource
       new()
       name()
       handle()
       was_cutting()
       Pod::Paragraph
       Pod::Paragraph->new()
       $pod_para->cmd_name()
       $pod_para->text()
       $pod_para->raw_text()
       $pod_para->cmd_prefix()
       $pod_para->cmd_separator()
       $pod_para->parse_tree()
       $pod_para->file_line()
       Pod::InteriorSequence
       Pod::InteriorSequence->new()
       $pod_seq->cmd_name()
       $pod_seq->prepend()
       $pod_seq->append()
       $pod_seq->nested()
       $pod_seq->raw_text()
       $pod_seq->left_delimiter()
       $pod_seq->right_delimiter()
       $pod_seq->parse_tree()
       $pod_seq->file_line()
       Pod::InteriorSequence::DESTROY()
       Pod::ParseTree
       Pod::ParseTree->new()
       $ptree->top()
       $ptree->children()
       $ptree->prepend()
       $ptree->append()
       $ptree->raw_text()
       Pod::ParseTree::DESTROY()
       SEE ALSO
       AUTHOR

       Pod::LaTeX - Convert Pod data to formatted Latex


       SYNOPSIS
       DESCRIPTION
       OBJECT METHODS
           "initialize"

       Data Accessors
           AddPreamble

       AddPostamble

       Head1Level

       Label

       LevelNoNum

       MakeIndex

       ReplaceNAMEwithSection

       StartWithNewPage

       TableOfContents

       UniqueLabels

       UserPreamble

       UserPostamble

       Lists

       Subclassed methods

       begin_pod

       end_pod

       command

       verbatim

       textblock

       interior_sequence

       List Methods
           begin_list

       end_list

       add_item

       Methods for headings
           head

       Internal methods
           _output

       _replace_special_chars

       _replace_special_chars_late

       _create_label

       _create_index

       _clean_latex_commands

       _split_delimited

       NOTES
       SEE ALSO
       AUTHORS
       COPYRIGHT
       REVISION

       Pod::Man - Convert POD data to formatted *roff input


       SYNOPSIS
       DESCRIPTION
           center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, name,
           quotes, release, section

       DIAGNOSTICS
           roff font should be 1 or 2 chars, not "%s", Invalid quote
           specification "%s"

       BUGS
       CAVEATS
       AUTHOR
       COPYRIGHT AND LICENSE
       SEE ALSO

       Pod::ParseLink - Parse an L<> formatting code in POD text


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR
       COPYRIGHT AND LICENSE

       Pod::ParseUtils - helpers for POD parsing and conversion


       SYNOPSIS
       DESCRIPTION
       Pod::List
           Pod::List->new()

       $list->file()

       $list->start()

       $list->indent()

       $list->type()

       $list->rx()

       $list->item()

       $list->parent()

       $list->tag()

       Pod::Hyperlink
           Pod::Hyperlink->new()

       $link->parse($string)

       $link->markup($string)

       $link->text()

       $link->warning()

       $link->file(), $link->line()

       $link->page()

       $link->node()

       $link->alttext()

       $link->type()

       $link->link()

       Pod::Cache
           Pod::Cache->new()

       $cache->item()

       $cache->find_page($name)

       Pod::Cache::Item
           Pod::Cache::Item->new()

       $cacheitem->page()

       $cacheitem->description()

       $cacheitem->path()

       $cacheitem->file()

       $cacheitem->nodes()

       $cacheitem->find_node($name)

       $cacheitem->idx()

       AUTHOR
       SEE ALSO

       Pod::Parser - base class for creating POD filters and translators


       SYNOPSIS
       REQUIRES
       EXPORTS
       DESCRIPTION
       QUICK OVERVIEW
       PARSING OPTIONS
           -want_nonPODs (default: unset), -process_cut_cmd (default: unset),
           -warnings (default: unset)

       RECOMMENDED SUBROUTINE/METHOD OVERRIDES
       command()
           $cmd, $text, $line_num, $pod_para

       verbatim()
           $text, $line_num, $pod_para

       textblock()
           $text, $line_num, $pod_para

       interior_sequence()
       OPTIONAL SUBROUTINE/METHOD OVERRIDES
       new()
       initialize()
       begin_pod()
       begin_input()
       end_input()
       end_pod()
       preprocess_line()
       preprocess_paragraph()
       METHODS FOR PARSING AND PROCESSING
       parse_text()
           -expand_seq => code-ref|method-name, -expand_text => code-
           ref|method-name, -expand_ptree => code-ref|method-name

       interpolate()
       parse_paragraph()
       parse_from_filehandle()
       parse_from_file()
       ACCESSOR METHODS
       errorsub()
       cutting()
       parseopts()
       output_file()
       output_handle()
       input_file()
       input_handle()
       input_streams()
       top_stream()
       PRIVATE METHODS AND DATA
       _push_input_stream()
       _pop_input_stream()
       TREE-BASED PARSING
       CAVEATS
       SEE ALSO
       AUTHOR

       Pod::Perldoc::ToChecker - let Perldoc check Pod for errors


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Perldoc::ToMan - let Perldoc render Pod as man pages


       SYNOPSIS
       DESCRIPTION
       CAVEAT
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Perldoc::ToNroff - let Perldoc convert Pod to nroff


       SYNOPSIS
       DESCRIPTION
       CAVEAT
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Perldoc::ToPod - let Perldoc render Pod as ... Pod!


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Perldoc::ToRtf - let Perldoc render Pod as RTF


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Perldoc::ToText - let Perldoc render Pod as plaintext


       SYNOPSIS
       DESCRIPTION
       CAVEAT
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Perldoc::ToTk - let Perldoc use Tk::Pod to render Pod


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       AUTHOR

       Pod::Perldoc::ToXml - let Perldoc render Pod as XML


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::PlainText - Convert POD data to formatted ASCII text


       SYNOPSIS
       DESCRIPTION
           alt, indent, loose, sentence, width

       DIAGNOSTICS
           Bizarre space in item, Can't open %s for reading: %s, Unknown
           escape: %s, Unknown sequence: %s, Unmatched =back

       RESTRICTIONS
       NOTES
       SEE ALSO
       AUTHOR

       Pod::Plainer - Perl extension for converting Pod to old style Pod.


       SYNOPSIS
       DESCRIPTION
           EXPORT
       AUTHOR
       SEE ALSO

       Pod::Select, podselect() - extract selected sections of POD from input


       SYNOPSIS
       REQUIRES
       EXPORTS
       DESCRIPTION
       SECTION SPECIFICATIONS
       RANGE SPECIFICATIONS
       OBJECT METHODS
       curr_headings()
       select()
       add_selection()
       clear_selections()
       match_section()
       is_selected()
       EXPORTED FUNCTIONS
       podselect()
           -output, -sections, -ranges

       PRIVATE METHODS AND DATA
       _compile_section_spec()
       $self->{_SECTION_HEADINGS}
       $self->{_SELECTED_SECTIONS}
       SEE ALSO
       AUTHOR

       Pod::Simple - framework for parsing Pod


       SYNOPSIS
       DESCRIPTION
       MAIN METHODS
           "$parser = SomeClass->new();", "$parser->output_fh( *OUT );",
           "$parser->output_string( \$somestring );", "$parser->parse_file(
           $some_filename );", "$parser->parse_file( *INPUT_FH );",
           "$parser->parse_string_document( $all_content );",
           "$parser->parse_lines( ...@lines..., undef );",
           "$parser->content_seen", "SomeClass->filter( $filename );",
           "SomeClass->filter( *INPUT_FH );", "SomeClass->filter(
           \$document_content );"

       SECONDARY METHODS
           "$parser->no_whining( SOMEVALUE )", "$parser->no_errata_section(
           SOMEVALUE )", "$parser->complain_stderr( SOMEVALUE )",
           "$parser->source_filename", "$parser->doc_has_started",
           "$parser->source_dead"

       CAVEATS
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::Checker -- check the Pod syntax of a document


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::Debug -- put Pod::Simple into trace/debug mode


       SYNOPSIS
       DESCRIPTION
       CAVEATS
       GUTS
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::DumpAsText -- dump Pod-parsing events as text


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::DumpAsXML -- turn Pod into XML


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::HTML - convert Pod to HTML


       SYNOPSIS
       DESCRIPTION
       CALLING FROM THE COMMAND LINE
       CALLING FROM PERL
       METHODS
       SUBCLASSING
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::HTMLBatch - convert several Pod files to several HTML
       files


       SYNOPSIS
       DESCRIPTION
           FROM THE COMMAND LINE
       MAIN METHODS
           $batchconv = Pod::Simple::HTMLBatch->new;,
           $batchconv->batch_convert( indirs, outdir );,
           $batchconv->batch_convert( undef    , ...);,
           $batchconv->batch_convert( q{@INC}, ...);,
           $batchconv->batch_convert( \@dirs , ...);,
           $batchconv->batch_convert( "somedir" , ...);,
           $batchconv->batch_convert( 'somedir:someother:also' , ...);,
           $batchconv->batch_convert( ... , undef );,
           $batchconv->batch_convert( ... , 'somedir' );

           ACCESSOR METHODS
               $batchconv->verbose( nonnegative_integer );, $batchconv->index(
               true-or-false );, $batchconv->contents_file( filename );,
               $batchconv->contents_page_start( HTML_string );,
               $batchconv->contents_page_end( HTML_string );,
               $batchconv->add_css( $url );, $batchconv->add_javascript( $url
               );, $batchconv->css_flurry( true-or-false );,
               $batchconv->javascript_flurry( true-or-false );,
               $batchconv->no_contents_links( true-or-false );,
               $batchconv->html_render_class( classname );

       NOTES ON CUSTOMIZATION
       ASK ME!
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::LinkSection -- represent "section" attributes of L codes


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::Methody -- turn Pod::Simple events into method calls


       SYNOPSIS
       DESCRIPTION
       METHOD CALLING
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::PullParser -- a pull-parser interface to parsing Pod


       SYNOPSIS
       DESCRIPTION
       METHODS
           my $token = $parser->get_token, $parser->unget_token( $token ),
           $parser->unget_token( $token1, $token2, ... ), $parser->set_source(
           $filename ), $parser->set_source( $filehandle_object ),
           $parser->set_source( \$document_source ), $parser->set_source(
           \@document_lines ), $parser->parse_file(...),
           $parser->parse_string_document(...), $parser->filter(...),
           $parser->parse_from_file(...), my $title_string =
           $parser->get_title, my $title_string = $parser->get_short_title,
           $author_name  = $parser->get_author, $description_name =
           $parser->get_description, $version_block = $parser->get_version

       NOTE
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::PullParserEndToken -- end-tokens from
       Pod::Simple::PullParser


       SYNOPSIS
       DESCRIPTION
           $token->tagname, $token->tagname(somestring), $token->tag(...),
           $token->is_tag(somestring) or $token->is_tagname(somestring)

       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::PullParserStartToken -- start-tokens from
       Pod::Simple::PullParser


       SYNOPSIS
       DESCRIPTION
           $token->tagname, $token->tagname(somestring), $token->tag(...),
           $token->is_tag(somestring) or $token->is_tagname(somestring),
           $token->attr(attrname), $token->attr(attrname, newvalue),
           $token->attr_hash

       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::PullParserTextToken -- text-tokens from
       Pod::Simple::PullParser


       SYNOPSIS
       DESCRIPTION
           $token->text, $token->text(somestring), $token->text_r()

       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::PullParserToken -- tokens from Pod::Simple::PullParser


       SYNOPSIS
       DESCRIPTION
           $token->type, $token->is_start, $token->is_text, $token->is_end,
           $token->dump

       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::RTF -- format Pod as RTF


       SYNOPSIS
       DESCRIPTION
       FORMAT CONTROL ATTRIBUTES
           $parser->head1_halfpoint_size( halfpoint_integer );,
           $parser->head2_halfpoint_size( halfpoint_integer );,
           $parser->head3_halfpoint_size( halfpoint_integer );,
           $parser->head4_halfpoint_size( halfpoint_integer );,
           $parser->codeblock_halfpoint_size( halfpoint_integer );,
           $parser->header_halfpoint_size( halfpoint_integer );,
           $parser->normal_halfpoint_size( halfpoint_integer );,
           $parser->no_proofing_exemptions( true_or_false );,
           $parser->doc_lang( microsoft_decimal_language_code )

       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::Search - find POD documents in directory trees


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTOR
       ACCESSORS
           $search->inc( true-or-false );, $search->verbose( nonnegative-
           number );, $search->limit_glob( some-glob-string );,
           $search->callback( \&some_routine );, $search->laborious( true-or-
           false );, $search->shadows( true-or-false );, $search->limit_re(
           some-regxp );, $search->dir_prefix( some-string-value );,
           $search->progress( some-progress-object );, $name2path =
           $self->name2path;, $path2name = $self->path2name;

       MAIN SEARCH METHODS
           "$search->survey( @directories )"
               "name2path", "path2name"

           "$search->simplify_name( $str )"
           "$search->find( $pod )"
           "$search->find( $pod, @search_dirs )"
           "$self->contains_pod( $file )"
       AUTHOR
       SEE ALSO

       Pod::Simple::Subclassing -- write a formatter as a Pod::Simple subclass


       SYNOPSIS
       DESCRIPTION
       Events
           "$parser->_handle_element_start( element_name, attr_hashref )",
           "$parser->_handle_element_end( element_name  )",
           "$parser->_handle_text(    text_string    )", events with an
           element_name of Document, events with an element_name of Para,
           events with an element_name of B, C, F, or I, events with an
           element_name of S, events with an element_name of X, events with an
           element_name of L, events with an element_name of E or Z, events
           with an element_name of Verbatim, events with an element_name of
           head1 .. head4, events with an element_name of over-bullet, events
           with an element_name of over-number, events with an element_name of
           over-text, events with an element_name of over-block, events with
           an element_name of item-bullet, events with an element_name of
           item-number, events with an element_name of item-text, events with
           an element_name of for, events with an element_name of Data

       More Pod::Simple Methods
           "$parser->accept_targets( SOMEVALUE )",
           "$parser->accept_targets_as_text(  SOMEVALUE  )",
           "$parser->accept_codes( Codename, Codename...  )",
           "$parser->accept_directive_as_data( directive_name )",
           "$parser->accept_directive_as_verbatim( directive_name )",
           "$parser->accept_directive_as_processed( directive_name )",
           "$parser->nbsp_for_S( BOOLEAN );", "$parser->version_report()",
           "$parser->pod_para_count()", "$parser->line_count()",
           "$parser->nix_X_codes(  SOMEVALUE  )", "$parser->merge_text(
           SOMEVALUE  )", "$parser->code_handler(   CODE_REF  )",
           "$parser->cut_handler(  CODE_REF  )", "$parser->whine( linenumber,
           complaint string )", "$parser->scream( linenumber, complaint string
           )", "$parser->source_dead(1)", "$parser->hide_line_numbers(
           SOMEVALUE )", "$parser->no_whining( SOMEVALUE )",
           "$parser->no_errata_section( SOMEVALUE )",
           "$parser->complain_stderr( SOMEVALUE )", "$parser->bare_output(
           SOMEVALUE )", "$parser->preserve_whitespace( SOMEVALUE )"

       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::Text -- format Pod as plaintext


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::TextContent -- get the text content of Pod


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Simple::XMLOutStream -- turn Pod into XML


       SYNOPSIS
       DESCRIPTION
       SEE ALSO
       ABOUT EXTENDING POD
       ASK ME!
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::SimpleTree, Pod::Simple::SimpleTree -- parse Pod into a simple
       parse tree


       SYNOPSIS
       DESCRIPTION
       METHODS
       Tree Contents
       SEE ALSO
       COPYRIGHT AND DISCLAIMERS
       AUTHOR

       Pod::Text - Convert POD data to formatted ASCII text


       SYNOPSIS
       DESCRIPTION
           alt, code, indent, loose, margin, quotes, sentence, width

       DIAGNOSTICS
           Bizarre space in item, Item called without tag, Can't open %s for
           reading: %s, Invalid quote specification "%s"

       NOTES
       SEE ALSO
       AUTHOR
       COPYRIGHT AND LICENSE

       Pod::Text::Color - Convert POD data to formatted color ASCII text


       SYNOPSIS
       DESCRIPTION
       BUGS
       SEE ALSO
       AUTHOR
       COPYRIGHT AND LICENSE

       Pod::Text::Overstrike - Convert POD data to formatted overstrike text


       SYNOPSIS
       DESCRIPTION
       BUGS
       SEE ALSO
       AUTHOR
       COPYRIGHT AND LICENSE

       Pod::Text::Termcap - Convert POD data to ASCII text with format escapes


       SYNOPSIS
       DESCRIPTION
       NOTES
       SEE ALSO
       AUTHOR
       COPYRIGHT AND LICENSE

       Pod::Usage, pod2usage() - print a usage message from embedded pod
       documentation


       SYNOPSIS
       ARGUMENTS
           "-message", "-msg", "-exitval", "-verbose", "-sections", "-output",
           "-input", "-pathlist", "-noperldoc"

       DESCRIPTION
       EXAMPLES
           Recommended Use
       CAVEATS
       AUTHOR
       ACKNOWLEDGMENTS

       SDBM_File - Tied access to sdbm files


       SYNOPSIS
       DESCRIPTION
           "O_RDONLY", "O_WRONLY", "O_RDWR"

       DIAGNOSTICS
           "sdbm store returned -1, errno 22, key "..." at ..."
       BUGS AND WARNINGS

       Safe - Compile and execute code in restricted compartments


       SYNOPSIS
       DESCRIPTION
           a new namespace, an operator mask

       WARNING
           RECENT CHANGES
           Methods in class Safe
               permit (OP, ...), permit_only (OP, ...), deny (OP, ...),
               deny_only (OP, ...), trap (OP, ...), untrap (OP, ...), share
               (NAME, ...), share_from (PACKAGE, ARRAYREF), varglob (VARNAME),
               reval (STRING), rdo (FILENAME), root (NAMESPACE), mask (MASK)

           Some Safety Issues
               Memory, CPU, Snooping, Signals, State Changes

           AUTHOR

       Scalar::Util - A selection of general-utility scalar subroutines

       SYNOPSIS
       DESCRIPTION
           blessed EXPR, dualvar NUM, STRING, isvstring EXPR, isweak EXPR,
           looks_like_number EXPR, openhandle FH, refaddr EXPR, reftype EXPR,
           set_prototype CODEREF, PROTOTYPE, tainted EXPR, weaken REF

       KNOWN BUGS
       SEE ALSO
       COPYRIGHT
       BLATANT PLUG

       Search::Dict, look - search for key in dictionary file


       SYNOPSIS
       DESCRIPTION

       SelectSaver - save and restore selected file handle


       SYNOPSIS
       DESCRIPTION

       SelfLoader - load functions only on demand


       SYNOPSIS
       DESCRIPTION
           The __DATA__ token
           SelfLoader autoloading
           Autoloading and package lexicals
           SelfLoader and AutoLoader
           __DATA__, __END__, and the FOOBAR::DATA filehandle.
           Classes and inherited methods.
       Multiple packages and fully qualified subroutine names

       _make_cmd

       Shell - run shell commands transparently within perl


       SYNOPSIS
       DESCRIPTION
           Caveats
           Escaping Magic Characters
           Configuration
       BUGS
       AUTHOR

       Socket, sockaddr_in, sockaddr_un, inet_aton, inet_ntoa - load the C
       socket.h defines and structure manipulators


       SYNOPSIS
       DESCRIPTION
           inet_aton HOSTNAME, inet_ntoa IP_ADDRESS, INADDR_ANY,
           INADDR_BROADCAST, INADDR_LOOPBACK, INADDR_NONE, sockaddr_family
           SOCKADDR, sockaddr_in PORT, ADDRESS, sockaddr_in SOCKADDR_IN,
           pack_sockaddr_in PORT, IP_ADDRESS, unpack_sockaddr_in SOCKADDR_IN,
           sockaddr_un PATHNAME, sockaddr_un SOCKADDR_UN, pack_sockaddr_un
           PATH, unpack_sockaddr_un SOCKADDR_UN

       Storable - persistence for Perl data structures


       SYNOPSIS
       DESCRIPTION
       MEMORY STORE
       ADVISORY LOCKING
       SPEED
       CANONICAL REPRESENTATION
       CODE REFERENCES
       FORWARD COMPATIBILITY
           utf8 data, restricted hashes, files from future versions of
           Storable

       ERROR REPORTING
       WIZARDS ONLY
           Hooks
               "STORABLE_freeze" obj, cloning, "STORABLE_thaw" obj, cloning,
               serialized, .., "STORABLE_attach" class, cloning, serialized

           Predicates
               "Storable::last_op_in_netorder", "Storable::is_storing",
               "Storable::is_retrieving"

           Recursion
           Deep Cloning
       Storable magic
           $info = Storable::file_magic( $filename ), "version", "version_nv",
           "major", "minor", "hdrsize", "netorder", "byteorder", "intsize",
           "longsize", "ptrsize", "nvsize", "file", $info =
           Storable::read_magic( $buffer ), $info = Storable::read_magic(
           $buffer, $must_be_file )

       EXAMPLES
       WARNING
       BUGS
           64 bit data in perl 5.6.0 and 5.6.1
       CREDITS
       AUTHOR
       SEE ALSO

       Switch - A switch statement for Perl


       VERSION
       SYNOPSIS
       BACKGROUND
       DESCRIPTION
           Allowing fall-through
           Automating fall-through
           Alternative syntax
           Higher-order Operations
       DEPENDENCIES
       AUTHOR
       BUGS
       LIMITATIONS
       COPYRIGHT

       Symbol - manipulate Perl symbols and their names


       SYNOPSIS
       DESCRIPTION
       BUGS

       Sys::Hostname - Try every conceivable way to get hostname


       SYNOPSIS
       DESCRIPTION
       AUTHOR

       Syslog, Sys::Syslog - Perl interface to the UNIX syslog(3) calls


       VERSION
       SYNOPSIS
       DESCRIPTION
       EXPORTS
       FUNCTIONS
           openlog($ident, $logopt, $facility), syslog($priority, $message),
           syslog($priority, $format, @args), Note,
           setlogmask($mask_priority), setlogsock($sock_type),
           setlogsock($sock_type, $stream_location) (added in Perl 5.004_02),
           Note, closelog()

       THE RULES OF SYS::SYSLOG
       EXAMPLES
       CONSTANTS
           Facilities
           Levels
       DIAGNOSTICS
           "Invalid argument passed to setlogsock", "eventlog passed to
           setlogsock, but no Win32 API available", "no connection to syslog
           available", "stream passed to setlogsock, but %s is not writable",
           "stream passed to setlogsock, but could not find any device", "tcp
           passed to setlogsock, but tcp service unavailable", "syslog:
           expecting argument %s", "syslog: invalid level/facility: %s",
           "syslog: too many levels given: %s", "syslog: too many facilities
           given: %s", "syslog: level must be given", "udp passed to
           setlogsock, but udp service unavailable", "unix passed to
           setlogsock, but path not available"

       SEE ALSO
           Manual Pages
           RFCs
           Articles
           Event Log
       AUTHORS & ACKNOWLEDGEMENTS
       BUGS
       SUPPORT
           AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's
           request tracker, Search CPAN, Kobes' CPAN Search, Perl
           Documentation

       COPYRIGHT
       LICENSE

       Syslog::Syslog, Sys::Syslog - Perl interface to the UNIX syslog(3)
       calls


       VERSION
       SYNOPSIS
       DESCRIPTION
       EXPORTS
       FUNCTIONS
           openlog($ident, $logopt, $facility), syslog($priority, $message),
           syslog($priority, $format, @args), Note,
           setlogmask($mask_priority), setlogsock($sock_type),
           setlogsock($sock_type, $stream_location) (added in Perl 5.004_02),
           Note, closelog()

       THE RULES OF SYS::SYSLOG
       EXAMPLES
       CONSTANTS
           Facilities
           Levels
       DIAGNOSTICS
           "Invalid argument passed to setlogsock", "eventlog passed to
           setlogsock, but no Win32 API available", "no connection to syslog
           available", "stream passed to setlogsock, but %s is not writable",
           "stream passed to setlogsock, but could not find any device", "tcp
           passed to setlogsock, but tcp service unavailable", "syslog:
           expecting argument %s", "syslog: invalid level/facility: %s",
           "syslog: too many levels given: %s", "syslog: too many facilities
           given: %s", "syslog: level must be given", "udp passed to
           setlogsock, but udp service unavailable", "unix passed to
           setlogsock, but path not available"

       SEE ALSO
           Manual Pages
           RFCs
           Articles
           Event Log
       AUTHORS & ACKNOWLEDGEMENTS
       BUGS
       SUPPORT
           AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's
           request tracker, Search CPAN, Kobes' CPAN Search, Perl
           Documentation

       COPYRIGHT
       LICENSE

       Syslog::win32::Win32, Sys::Syslog::Win32 - Win32 support for
       Sys::Syslog


       DESCRIPTION
       SEE ALSO
       AUTHORS
       LICENSE

       Term::ANSIColor - Color screen output using ANSI escape sequences


       SYNOPSIS
       DESCRIPTION
       DIAGNOSTICS
           Bad escape sequence %s, Bareword "%s" not allowed while "strict
           subs" in use, Invalid attribute name %s, Name "%s" used only once:
           possible typo, No comma allowed after filehandle, No name for
           escape sequence %s

       ENVIRONMENT
           ANSI_COLORS_DISABLED

       RESTRICTIONS
       NOTES
       SEE ALSO
       AUTHORS
       COPYRIGHT AND LICENSE

       Term::Cap - Perl termcap interface


       SYNOPSIS
       DESCRIPTION
           METHODS

       Tgetent, OSPEED, TERM

       Tpad, $string, $cnt, $FH

       Tputs, $cap, $cnt, $FH

       Tgoto, $cap, $col, $row, $FH

       Trequire

       EXAMPLES
       COPYRIGHT AND LICENSE
       AUTHOR
       SEE ALSO

       Term::Complete - Perl word completion module


       SYNOPSIS
       DESCRIPTION
           <tab>, ^D, ^U, <del>, <bs>

       DIAGNOSTICS
       BUGS
       AUTHOR

       Term::ReadLine - Perl interface to various "readline" packages. If no
       real package is found, substitutes stubs instead of basic functions.


       SYNOPSIS
       DESCRIPTION
       Minimal set of supported functions
           "ReadLine", "new", "readline", "addhistory", "IN", "OUT",
           "MinLine", "findConsole", Attribs, "Features"

       Additional supported functions
           "tkRunning", "ornaments", "newTTY"

       EXPORTS
       ENVIRONMENT
       CAVEATS

       Term::UI - Term::ReadLine UI made easy


       SYNOPSIS
       DESCRIPTION
       HOW IT WORKS
       METHODS
           $reply = $term->get_reply( prompt => 'question?', [choices =>
           \@list, default => $list[0], multi => BOOL, print_me => "extra text
           to print & record", allow => $ref] );
       $bool = $term->ask_yn( prompt => "your question", [default =>
       (y|1,n|0), print_me => "extra text to print & record"] )
       ($opts, $munged) = $term->parse_options( STRING );
       $str = $term->history_as_string
       GLOBAL VARIABLES
           $Term::UI::VERBOSE
           $Term::UI::AUTOREPLY
           $Term::UI::INVALID
           $Term::UI::History::HISTORY_FH
       EXAMPLES
           Basic get_reply sample
           get_reply with choices
           get_reply with choices and default
           get_reply using print_me & multi
           get_reply & allow
           an elaborate ask_yn sample
       See Also
       BUG REPORTS
       AUTHOR
       COPYRIGHT

       Term::UI::History


       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
           history("message string" [,VERBOSE])
       GLOBAL VARIABLES
           $HISTORY_FH

       See Also
       AUTHOR
       COPYRIGHT

       Test - provides a simple framework for writing test scripts


       SYNOPSIS
       DESCRIPTION
       QUICK START GUIDE
           Functions
               "plan(...)", "tests => number", "todo => [1,5,14]", "onfail =>
               sub { ... }", "onfail => \&some_sub"

       _to_value

       "ok(...)"

       "skip(skip_if_true, args...)"

       TEST TYPES
           NORMAL TESTS, SKIPPED TESTS, TODO TESTS

       ONFAIL
       BUGS and CAVEATS
       ENVIRONMENT
       NOTE
       SEE ALSO
       AUTHOR

       Test::Builder - Backend for building test libraries


       SYNOPSIS
       DESCRIPTION
           Construction
               new

       create

       reset

       Setting up tests
           exported_to

       plan

       expected_tests

       no_plan

       has_plan

       skip_all

       Running tests
           ok

       is_eq, is_num

       isnt_eq, isnt_num

       like, unlike

       cmp_ok

       Other Testing Methods
           BAIL_OUT

       skip

       todo_skip

       skip_rest

       Test building utility methods
           maybe_regex

       _try

       is_fh

       Test style
           level

       use_numbers

       no_diag, no_ending, no_header

       Output
           diag

       _print

       _print_diag

       output, failure_output, todo_output

       carp, croak

       Test Status and Info
           current_test

       summary

       details

       todo

       caller

       _sanity_check

       _whoa

       _my_exit

       EXIT CODES
       THREADS
       EXAMPLES
       SEE ALSO
       AUTHORS
       COPYRIGHT

       Test::Builder::Module - Base class for test modules


       SYNOPSIS
       DESCRIPTION
           Importing
       Builder

       Test::Builder::Tester - test testsuites that have been built with
       Test::Builder


       SYNOPSIS
       DESCRIPTION
       Functions
           test_out, test_err

       test_fail

       test_diag

       test_test, title (synonym 'name', 'label'), skip_out, skip_err

       line_num

       color

       BUGS
       AUTHOR
       NOTES
       SEE ALSO

       Test::Builder::Tester::Color - turn on colour in Test::Builder::Tester


       SYNOPSIS
       DESCRIPTION
       AUTHOR
       BUGS
       SEE ALSO

       Test::Harness - Run Perl standard test scripts with statistics


       VERSION
       SYNOPSIS
       DESCRIPTION
           Taint mode
           Configuration variables.
               $Test::Harness::Verbose, $Test::Harness::switches,
               $Test::Harness::Timer

           Failure
               Failed Test, Stat, Wstat, Total, Fail, List of Failed

       FUNCTIONS
           runtests( @test_files )
       execute_tests( tests => \@test_files, out => \*FH )
       EXPORT
       DIAGNOSTICS
           "All tests successful.\nFiles=%d,  Tests=%d, %s", "FAILED tests
           %s\n\tFailed %d/%d tests, %.2f%% okay.", "Test returned status %d
           (wstat %d)", "Failed 1 test, %.2f%% okay. %s", "Failed %d/%d tests,
           %.2f%% okay.  %s", "FAILED--Further testing stopped: %s"

       ENVIRONMENT VARIABLES THAT TEST::HARNESS SETS
           "HARNESS_ACTIVE", "HARNESS_VERSION"

       ENVIRONMENT VARIABLES THAT AFFECT TEST::HARNESS
           "HARNESS_COLUMNS", "HARNESS_COMPILE_TEST", "HARNESS_DEBUG",
           "HARNESS_FILELEAK_IN_DIR", "HARNESS_NOTTY", "HARNESS_PERL",
           "HARNESS_PERL_SWITCHES", "HARNESS_TIMER", "HARNESS_VERBOSE",
           "HARNESS_STRAP_CLASS"

       EXAMPLE
       SEE ALSO
       TODO
       BUGS
       SUPPORT
           AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's
           request tracker, Search CPAN

       SOURCE CODE
       AUTHORS
       COPYRIGHT

       Test::Harness::Assert - simple assert


       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
           "assert()"
       AUTHOR
       SEE ALSO

       Test::Harness::Iterator - Internal Test::Harness Iterator


       SYNOPSIS
       DESCRIPTION
           new()
           next()

       Test::Harness::Point - object for tracking a single test point


       SYNOPSIS
       CONSTRUCTION
           new()
       from_test_line( $line )
       ACCESSORS
           ok, number

       Test::Harness::Results - object for tracking results from a single test
       file


       SYNOPSIS
       CONSTRUCTION
           new()
       ACCESSORS
           wait, exit

       Test::Harness::Straps - detailed analysis of test results


       SYNOPSIS
       DESCRIPTION
       CONSTRUCTION
           new()
       ANALYSIS
           $strap->analyze( $name, \@output_lines )
       $strap->analyze_file( $test_file )
       Parsing
       EXAMPLES
       AUTHOR
       SEE ALSO

       Test::Harness::TAP - Documentation for the TAP format


       SYNOPSIS
       TODO
       THE TAP FORMAT
       HARNESS BEHAVIOR
       TESTS LINES AND THE PLAN
           The plan
           The test line
               "ok" or "not ok", Test number, Description, Directive, ok/not
               ok (required), Test number (recommended), Description
               (recommended), Directive (only when necessary)

       DIRECTIVES
           TODO tests
           Skipping tests
       OTHER LINES
           Bail out!
           Diagnostics
           Anything else
       EXAMPLES
           Common with explanation
           Unknown amount and failures
           Giving up
           Skipping a few
           Skipping everything
           Got spare tuits?
           Creative liberties
       Non-Perl TAP
           C/C++
               Specify a test plan, Run tests, Skip tests in certain
               situations, Have TODO tests, Produce TAP compatible diagnostics

           Python
           JavaScript
           PHP phpt, PHPUnit, SimpleTest, Apache-Test

       AUTHORS
       ACKNOWLEDGEMENTS
       COPYRIGHT

       Test::Harness::Util - Utility functions for Test::Harness::*


       SYNOPSIS
       PUBLIC FUNCTIONS
           all_in( {parm => value, parm => value} )
               start, recurse

       shuffle( @list )
       blibdir()

       Test::More - yet another framework for writing test scripts


       SYNOPSIS
       DESCRIPTION
           I love it when a plan comes together
       Test names
       I'm ok, you're not ok.
           ok

       is, isnt

       like

       unlike

       cmp_ok

       can_ok

       isa_ok

       pass, fail

       Module tests
           use_ok

       require_ok

       Complex data structures
           is_deeply

       Diagnostics
           diag

       Conditional tests
           SKIP: BLOCK

       TODO: BLOCK, todo_skip

       When do I use SKIP vs. TODO?

       Test control
           BAIL_OUT

       Discouraged comparison functions
           eq_array

       eq_hash

       eq_set

       Extending and Embedding Test::More
           builder

       EXIT CODES
       CAVEATS and NOTES
           Backwards compatibility, Overloaded objects, Threads, Test::Harness
           upgrade

       HISTORY
       SEE ALSO
       AUTHORS
       BUGS
       COPYRIGHT

       Test::Simple - Basic utilities for writing tests.


       SYNOPSIS
       DESCRIPTION
           ok

       EXAMPLE
       CAVEATS
       NOTES
       HISTORY
       SEE ALSO
           Test::More, Test, Test::Unit, Test::Inline, SelfTest, Test::Harness

       AUTHORS
       COPYRIGHT

       Test::Tutorial - A tutorial about writing really basic tests


       DESCRIPTION
           Nuts and bolts of testing.
           Where to start?
           Names
           Test the manual
           Sometimes the tests are wrong
           Testing lots of values
           Informative names
           Skipping tests
           Todo tests
           Testing with taint mode.
       FOOTNOTES
       AUTHORS
       COPYRIGHT

       Text::Abbrev, abbrev - create an abbreviation table from a list


       SYNOPSIS
       DESCRIPTION
       EXAMPLE

       Text::Balanced - Extract delimited text sequences from strings.


       SYNOPSIS
       DESCRIPTION
           General behaviour in list contexts
               [0], [1], [2]

           General behaviour in scalar and void contexts
           A note about prefixes
           "extract_delimited"
           "extract_bracketed"
           "extract_variable"
               [0], [1], [2]

           "extract_tagged"
               "reject => $listref", "ignore => $listref", "fail => $str",
               [0], [1], [2], [3], [4], [5]

           "gen_extract_tagged"
           "extract_quotelike"
               [0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10]

           "extract_quotelike" and "here documents"
               [0], [1], [2], [3], [4], [5], [6], [7..10]

           "extract_codeblock"
           "extract_multiple"
           "gen_delimited_pat"
           "delimited_pat"
       DIAGNOSTICS
            C<Did not find a suitable bracket: "%s">,  C<Did not find prefix: /%s/>,
           C<Did not find opening bracket after prefix: "%s">,  C<No quotelike
           operator found after prefix: "%s">,  C<Unmatched closing bracket: "%c">,
           C<Unmatched opening bracket(s): "%s">, C<Unmatched embedded quote (%s)>,
           C<Did not find closing delimiter to match '%s'>,  C<Mismatched closing
           bracket: expected "%c" but found "%s">,  C<No block delimiter found after
           quotelike "%s">, C<Did not find leading dereferencer>, C<Bad identifier
           after dereferencer>, C<Did not find expected opening bracket at %s>,
           C<Improperly nested codeblock at %s>,  C<Missing second block for quotelike
           "%s">, C<No match found for opening bracket>, C<Did not find opening tag:
           /%s/>, C<Unable to construct closing tag to match: /%s/>, C<Found invalid
           nested tag: %s>, C<Found unbalanced nested tag: %s>, C<Did not find closing
           tag>

       AUTHOR
       BUGS AND IRRITATIONS
       COPYRIGHT

       Text::ParseWords - parse text into an array of tokens or array of
       arrays


       SYNOPSIS
       DESCRIPTION
       EXAMPLES
       AUTHORS

       Text::Soundex - Implementation of the soundex algorithm.


       SYNOPSIS
       DESCRIPTION
       EXAMPLES
       LIMITATIONS
       MAINTAINER
       HISTORY

       Text::Tabs -- expand and unexpand tabs per the unix expand(1) and
       unexpand(1)


       SYNOPSIS
       DESCRIPTION
       EXAMPLE
       LICENSE

       Text::Wrap - line wrapping to form simple paragraphs


       SYNOPSIS
       DESCRIPTION
       OVERRIDES
       EXAMPLES
       LICENSE

       Thread - Manipulate threads in Perl (for old code only)


       DEPRECATED
       HISTORY
       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
           $thread = Thread->new(\&start_sub), $thread =
           Thread->new(\&start_sub, LIST), lock VARIABLE, async BLOCK;,
           Thread->self, Thread->list, cond_wait VARIABLE, cond_signal
           VARIABLE, cond_broadcast VARIABLE, yield

       METHODS
           join, detach, equal, tid, done

       DEFUNCT
           lock(\&sub), eval, flags

       SEE ALSO

       Thread::Queue - thread-safe queues

       SYNOPSIS
       DESCRIPTION
       FUNCTIONS AND METHODS
           new, enqueue LIST, dequeue, dequeue_nb, pending

       SEE ALSO

       Thread::Semaphore - thread-safe semaphores

       SYNOPSIS
       DESCRIPTION
       FUNCTIONS AND METHODS
           new, new NUMBER, down, down NUMBER, up, up NUMBER

       Tie::Array - base class for tied arrays


       SYNOPSIS
       DESCRIPTION
           TIEARRAY classname, LIST, STORE this, index, value, FETCH this,
           index, FETCHSIZE this, STORESIZE this, count, EXTEND this, count,
           EXISTS this, key, DELETE this, key, CLEAR this, DESTROY this, PUSH
           this, LIST, POP this, SHIFT this, UNSHIFT this, LIST, SPLICE this,
           offset, length, LIST

       CAVEATS
       AUTHOR

       Tie::File - Access the lines of a disk file via a Perl array


       SYNOPSIS
       DESCRIPTION
           "recsep"
           "autochomp"
           "mode"
           "memory"
           "dw_size"
           Option Format
       Public Methods
           "flock"
           "autochomp"
           "defer", "flush", "discard", and "autodefer"
           "offset"
       Tying to an already-opened filehandle
       Deferred Writing
           Autodeferring
       CONCURRENT ACCESS TO FILES
       CAVEATS
       SUBCLASSING
       WHAT ABOUT "DB_File"?
       AUTHOR
       LICENSE
       WARRANTY
       THANKS
       TODO

       Tie::Handle - base class definitions for tied handles


       SYNOPSIS
       DESCRIPTION
           TIEHANDLE classname, LIST, WRITE this, scalar, length, offset,
           PRINT this, LIST, PRINTF this, format, LIST, READ this, scalar,
           length, offset, READLINE this, GETC this, CLOSE this, OPEN this,
           filename, BINMODE this, EOF this, TELL this, SEEK this, offset,
           whence, DESTROY this

       MORE INFORMATION
       COMPATIBILITY

       Tie::Hash, Tie::StdHash, Tie::ExtraHash - base class definitions for
       tied hashes


       SYNOPSIS
       DESCRIPTION
           TIEHASH classname, LIST, STORE this, key, value, FETCH this, key,
           FIRSTKEY this, NEXTKEY this, lastkey, EXISTS this, key, DELETE
           this, key, CLEAR this, SCALAR this

       Inheriting from Tie::StdHash
       Inheriting from Tie::ExtraHash
       "SCALAR", "UNTIE" and "DESTROY"
       MORE INFORMATION

       Tie::Hash::NamedCapture - Named regexp capture buffers


       SYNOPSIS
       DESCRIPTION
       SEE ALSO

       Tie::Memoize - add data to hash when needed


       SYNOPSIS
       DESCRIPTION
       Inheriting from Tie::Memoize
       EXAMPLE
       BUGS
       AUTHOR

       Tie::RefHash - use references as hash keys


       SYNOPSIS
       DESCRIPTION
       EXAMPLE
       THREAD SUPPORT
       STORABLE SUPPORT
       RELIC SUPPORT
       MAINTAINER
       AUTHOR
       SEE ALSO

       Tie::Scalar, Tie::StdScalar - base class definitions for tied scalars


       SYNOPSIS
       DESCRIPTION
           TIESCALAR classname, LIST, FETCH this, STORE this, value, DESTROY
           this

       MORE INFORMATION

       Tie::SubstrHash - Fixed-table-size, fixed-key-length hashing

       SYNOPSIS
       DESCRIPTION
       CAVEATS

       Time::HiRes - High resolution alarm, sleep, gettimeofday, interval
       timers


       SYNOPSIS
       DESCRIPTION
           gettimeofday (), usleep ( $useconds ), nanosleep ( $nanoseconds ),
           ualarm ( $useconds [, $interval_useconds ] ), tv_interval, time (),
           sleep ( $floating_seconds ), alarm ( $floating_seconds [,
           $interval_floating_seconds ] ), setitimer ( $which,
           $floating_seconds [, $interval_floating_seconds ] ), getitimer (
           $which ), clock_gettime ( $which ), clock_getres ( $which ),
           clock_nanosleep ( $which, $nanoseconds, $flags = 0), clock(), stat,
           stat FH, stat EXPR

       EXAMPLES
       C API
       DIAGNOSTICS
           useconds or interval more than ...
           negative time not invented yet
           internal error: useconds < 0 (unsigned ... signed ...)
       CAVEATS
       SEE ALSO
       AUTHORS
       COPYRIGHT AND LICENSE

       Time::Local - efficiently compute time from local and GMT time


       SYNOPSIS
       DESCRIPTION
       FUNCTIONS
           "timelocal()" and "timegm()"
           "timelocal_nocheck()" and "timegm_nocheck()"
           Year Value Interpretation
           Limits of time_t
           Ambiguous Local Times (DST)
           Non-Existent Local Times (DST)
           Negative Epoch Values
       IMPLEMENTATION
       BUGS
       SUPPORT
       COPYRIGHT
       AUTHOR

       Time::Piece - Object Oriented time objects


       SYNOPSIS
       DESCRIPTION
       USAGE
           Local Locales
           Date Calculations
           Date Comparisons
           Date Parsing
           YYYY-MM-DDThh:mm:ss
           Week Number
           Global Overriding
       AUTHOR
       License
       SEE ALSO
       BUGS

       Time::Piece::Seconds, Time::Seconds - a simple API to convert seconds
       to other date values


       SYNOPSIS
       DESCRIPTION
       METHODS
       AUTHOR
       LICENSE
       Bugs

       Time::Seconds - a simple API to convert seconds to other date values


       SYNOPSIS
       DESCRIPTION
       METHODS
       AUTHOR
       LICENSE
       Bugs

       Time::gmtime - by-name interface to Perl's built-in gmtime() function


       SYNOPSIS
       DESCRIPTION
       NOTE
       AUTHOR

       Time::localtime - by-name interface to Perl's built-in localtime()
       function


       SYNOPSIS
       DESCRIPTION
       NOTE
       AUTHOR

       Time::tm - internal object used by Time::gmtime and Time::localtime


       SYNOPSIS
       DESCRIPTION
       AUTHOR

       UNIVERSAL - base class for ALL classes (blessed references)


       SYNOPSIS
       DESCRIPTION
           "$obj->isa( TYPE )", "CLASS->isa( TYPE )", "eval { VAL->isa( TYPE )
           }", "TYPE", $obj, "CLASS", "VAL", "$obj->DOES( ROLE )",
           "CLASS->DOES( ROLE )", "$obj->can( METHOD )", "CLASS->can( METHOD
           )", "eval { VAL->can( METHOD ) }", "VERSION ( [ REQUIRE ] )"

       EXPORTS

       Unicode::Collate - Unicode Collation Algorithm

       SYNOPSIS
       DESCRIPTION
           Constructor and Tailoring
               UCA_Version, alternate, backwards, entry, hangul_terminator,
               ignoreChar, ignoreName, katakana_before_hiragana, level,
               normalization, overrideCJK, overrideHangul, preprocess,
               rearrange, table, undefChar, undefName, upper_before_lower,
               variable

           Methods for Collation
               "@sorted = $Collator->sort(@not_sorted)", "$result =
               $Collator->cmp($a, $b)", "$result = $Collator->eq($a, $b)",
               "$result = $Collator->ne($a, $b)", "$result = $Collator->lt($a,
               $b)", "$result = $Collator->le($a, $b)", "$result =
               $Collator->gt($a, $b)", "$result = $Collator->ge($a, $b)",
               "$sortKey = $Collator->getSortKey($string)", "$sortKeyForm =
               $Collator->viewSortKey($string)"

           Methods for Searching
               "$position = $Collator->index($string, $substring[,
               $position])", "($position, $length) = $Collator->index($string,
               $substring[, $position])", "$match_ref =
               $Collator->match($string, $substring)", "($match)   =
               $Collator->match($string, $substring)", "@match =
               $Collator->gmatch($string, $substring)", "$count =
               $Collator->subst($string, $substring, $replacement)", "$count =
               $Collator->gsubst($string, $substring, $replacement)"

           Other Methods
               "%old_tailoring = $Collator->change(%new_tailoring)", "$version
               = $Collator->version()", "UCA_Version()",
               "Base_Unicode_Version()"

       EXPORT
       INSTALL
       CAVEATS
           Normalization, Conformance Test

       AUTHOR, COPYRIGHT AND LICENSE
       SEE ALSO
           Unicode Collation Algorithm - UTS #10, The Default Unicode
           Collation Element Table (DUCET), The conformance test for the UCA,
           Hangul Syllable Type, Unicode Normalization Forms - UAX #15

       Unicode::Normalize - Unicode Normalization Forms


       SYNOPSIS
       DESCRIPTION
           Normalization Forms
               "$NFD_string = NFD($string)", "$NFC_string = NFC($string)",
               "$NFKD_string = NFKD($string)", "$NFKC_string = NFKC($string)",
               "$FCD_string = FCD($string)", "$FCC_string = FCC($string)",
               "$normalized_string = normalize($form_name, $string)"

           Decomposition and Composition
               "$decomposed_string = decompose($string [,
               $useCompatMapping])", "$reordered_string = reorder($string)",
               "$composed_string = compose($string)"

           Quick Check
               "$result = checkNFD($string)", "$result = checkNFC($string)",
               "$result = checkNFKD($string)", "$result = checkNFKC($string)",
               "$result = checkFCD($string)", "$result = checkFCC($string)",
               "$result = check($form_name, $string)"

           Character Data
               "$canonical_decomposition = getCanon($code_point)",
               "$compatibility_decomposition = getCompat($code_point)",
               "$code_point_composite = getComposite($code_point_here,
               $code_point_next)", "$combining_class =
               getCombinClass($code_point)", "$may_be_composed_with_prev_char
               = isComp2nd($code_point)", "$is_exclusion =
               isExclusion($code_point)", "$is_singleton =
               isSingleton($code_point)", "$is_non_starter_decomposition =
               isNonStDecomp($code_point)", "$is_Full_Composition_Exclusion =
               isComp_Ex($code_point)", "$NFD_is_NO = isNFD_NO($code_point)",
               "$NFC_is_NO = isNFC_NO($code_point)", "$NFC_is_MAYBE =
               isNFC_MAYBE($code_point)", "$NFKD_is_NO =
               isNFKD_NO($code_point)", "$NFKC_is_NO =
               isNFKC_NO($code_point)", "$NFKC_is_MAYBE =
               isNFKC_MAYBE($code_point)"

       EXPORT
       CAVEATS
           Perl's version vs. Unicode version, Correction of decomposition
           mapping, Revised definition of canonical composition

       AUTHOR
       SEE ALSO
           http://www.unicode.org/reports/tr15/,
           http://www.unicode.org/Public/UNIDATA/CompositionExclusions.txt,
           http://www.unicode.org/Public/UNIDATA/DerivedNormalizationProps.txt,
           http://www.unicode.org/Public/UNIDATA/NormalizationCorrections.txt,
           http://www.unicode.org/review/pr-29.html,
           http://www.unicode.org/notes/tn5/

       Unicode::UCD - Unicode character database


       SYNOPSIS
       DESCRIPTION
       charinfo
       charblock
       charscript
       charblocks
       charscripts
       Blocks versus Scripts
       Matching Scripts and Blocks
       Code Point Arguments
       charinrange
       general_categories
       bidi_types
       compexcl
       casefold
       casespec
       namedseq()
       Unicode::UCD::UnicodeVersion
       Implementation Note
       BUGS
       AUTHOR

       User::grent - by-name interface to Perl's built-in getgr*() functions


       SYNOPSIS
       DESCRIPTION
       NOTE
       AUTHOR

       User::pwent - by-name interface to Perl's built-in getpw*() functions


       SYNOPSIS
       DESCRIPTION
           System Specifics
       NOTE
       AUTHOR
       HISTORY
           March 18th, 2000

       Win32 - Interfaces to some Win32 API Functions


       DESCRIPTION
           Alphabetical Listing of Win32 Functions
               Win32::AbortSystemShutdown(MACHINE), Win32::BuildNumber(),
               Win32::CopyFile(FROM, TO, OVERWRITE),
               Win32::CreateDirectory(DIRECTORY), Win32::CreateFile(FILE),
               Win32::DomainName(), Win32::ExpandEnvironmentStrings(STRING),
               Win32::FormatMessage(ERRORCODE), Win32::FsType(),
               Win32::FreeLibrary(HANDLE), Win32::GetANSIPathName(FILENAME),
               Win32::GetArchName(), Win32::GetChipName(), Win32::GetCwd(),
               Win32::GetCurrentThreadId(), Win32::GetFileVersion(FILENAME),
               Win32::GetFolderPath(FOLDER [, CREATE]),
               Win32::GetFullPathName(FILENAME), Win32::GetLastError(),
               Win32::GetLongPathName(PATHNAME), Win32::GetNextAvailDrive(),
               Win32::GetOSVersion(), Win32::GetOSName(),
               Win32::GetShortPathName(PATHNAME),
               Win32::GetProcAddress(INSTANCE, PROCNAME),
               Win32::GetTickCount(), Win32::GuidGen(), Win32::IsAdminUser(),
               Win32::IsWinNT(), Win32::IsWin95(),
               Win32::LoadLibrary(LIBNAME), Win32::LoginName(),
               Win32::LookupAccountName(SYSTEM, ACCOUNT, DOMAIN, SID,
               SIDTYPE), Win32::LookupAccountSID(SYSTEM, SID, ACCOUNT, DOMAIN,
               SIDTYPE), Win32::MsgBox(MESSAGE [, FLAGS [, TITLE]]),
               Win32::NodeName(), Win32::OutputDebugString(STRING),
               Win32::RegisterServer(LIBRARYNAME),
               Win32::SetChildShowWindow(SHOWWINDOW),
               Win32::SetCwd(NEWDIRECTORY), Win32::SetLastError(ERROR),
               Win32::Sleep(TIME), Win32::Spawn(COMMAND, ARGS, PID),
               Win32::UnregisterServer(LIBRARYNAME)

       Win32API::File - Low-level access to Win32 system API calls for
       files/dirs.


       SYNOPSIS
       DESCRIPTION
           Object Oriented/Tied Handle Interface
           Exports
               ":Func", attrLetsToBits, "$uBits= attrLetsToBits(
               $sAttributeLetters )", "a", "c", "h", "o", "r", "s", "t",
               createFile, "$hObject= createFile( $sPath )", "$hObject=
               createFile( $sPath, $rvhvOptions )", "$hObject= createFile(
               $sPath, $svAccess )", "$hObject= createFile( $sPath, $svAccess,
               $rvhvOptions )", "$hObject= createFile( $sPath, $svAccess,
               $svShare )", "$hObject= createFile( $sPath, $svAccess,
               $svShare, $rvhvOptions )", "q", "r", "w", "k", "t", "n", "c",
               "e", "kc", "ke", "tc", "te", "nc", "ne", Flags => $uFlags,
               Attributes => $sAttributes, Security => $pSecurityAttributes,
               Model => $hModelFile, Access => $sAccess, Access => $uAccess,
               Create => $sCreate, Create => $uCreate, Share => $sShare, Share
               => $uShare, getLogicalDrives, "@roots= getLogicalDrives()",
               CloseHandle, "CloseHandle( $hObject )", CopyFile, "CopyFile(
               $sOldFileName, $sNewFileName, $bFailIfExists )", CreateFile,
               "$hObject= CreateFile( $sPath, $uAccess, $uShare, $pSecAttr,
               $uCreate, $uFlags, $hModel )", "//./PhysicalDrive0", "//./C:",
               "//./A:", "//./PIPE/PipeName", DefineDosDevice,
               "DefineDosDevice( $uFlags, $sDosDeviceName, $sTargetPath )",
               "DDD_RAW_TARGET_PATH", "DDD_REMOVE_DEFINITION",
               "DDD_EXACT_MATCH_ON_REMOVE", DeleteFile, "DeleteFile(
               $sFileName )", DeviceIoControl, "DeviceIoControl( $hDevice,
               $uIoControlCode, $pInBuf, $lInBuf, $opOutBuf, $lOutBuf,
               $olRetBytes, $pOverlapped )", FdGetOsFHandle, "$hNativeHandle=
               FdGetOsFHandle( $ivFd )", fileConstant, "$value= fileConstant(
               $sConstantName )", fileLastError, "$svError= fileLastError();",
               "fileLastError( $uError );", GetDriveType, "$uDriveType=
               GetDriveType( $sRootPath )", "DRIVE_UNKNOWN",
               "DRIVE_NO_ROOT_DIR", "DRIVE_REMOVABLE", "DRIVE_FIXED",
               "DRIVE_REMOTE", "DRIVE_CDROM", "DRIVE_RAMDISK",
               GetFileAttributes, "$uAttrs = GetFileAttributes( $sPath )",
               "FILE_ATTRIBUTE_ARCHIVE", "FILE_ATTRIBUTE_COMPRESSED",
               "FILE_ATTRIBUTE_DEVICE", "FILE_ATTRIBUTE_DIRECTORY",
               "FILE_ATTRIBUTE_ENCRYPTED", "FILE_ATTRIBUTE_HIDDEN",
               "FILE_ATTRIBUTE_NORMAL", "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED",
               "FILE_ATTRIBUTE_OFFLINE", "FILE_ATTRIBUTE_READONLY",
               "FILE_ATTRIBUTE_REPARSE_POINT", "FILE_ATTRIBUTE_SPARSE_FILE",
               "FILE_ATTRIBUTE_SYSTEM", "FILE_ATTRIBUTE_TEMPORARY",
               GetFileType, "$uFileType= GetFileType( $hFile )",
               "FILE_TYPE_UNKNOWN", "FILE_TYPE_DISK", "FILE_TYPE_CHAR",
               "FILE_TYPE_PIPE", getFileSize, "$size= getFileSize( $hFile )",
               GetFileSize, "$iSizeLow= GetFileSize($win32Handle,
               $iSizeHigh)", GetOverlappedResult, "$bRetval=
               GetOverlappedResult( $win32Handle, $pOverlapped,
               $numBytesTransferred, $bWait )", GetLogicalDrives,
               "$uDriveBits= GetLogicalDrives()", GetLogicalDriveStrings,
               "$olOutLength= GetLogicalDriveStrings( $lBufSize, $osBuffer )",
               GetHandleInformation, "GetHandleInformation( $hObject, $ouFlags
               )", GetOsFHandle, "$hNativeHandle= GetOsFHandle( FILE )",
               GetVolumeInformation, "GetVolumeInformation( $sRootPath,
               $osVolName, $lVolName, $ouSerialNum, $ouMaxNameLen, $ouFsFlags,
               $osFsType, $lFsType )", "FS_CASE_IS_PRESERVED",
               "FS_CASE_SENSITIVE", "FS_UNICODE_STORED_ON_DISK",
               "FS_PERSISTENT_ACLS", "FS_FILE_COMPRESSION",
               "FS_VOL_IS_COMPRESSED", IsRecognizedPartition,
               "IsRecognizedPartition( $ivPartitionType )",
               IsContainerPartition, "IsContainerPartition( $ivPartitionType
               )", MoveFile, "MoveFile( $sOldName, $sNewName )", MoveFileEx,
               "MoveFileEx( $sOldName, $sNewName, $uFlags )",
               "MOVEFILE_REPLACE_EXISTING", "MOVEFILE_COPY_ALLOWED",
               "MOVEFILE_DELAY_UNTIL_REBOOT", "MOVEFILE_WRITE_THROUGH",
               OsFHandleOpen, "OsFHandleOpen( FILE, $hNativeHandle, $sMode )",
               OsFHandleOpenFd, "$ivFD= OsFHandleOpenFd( $hNativeHandle,
               $uMode )", QueryDosDevice, "$olTargetLen= QueryDosDevice(
               $sDosDeviceName, $osTargetPath, $lTargetBuf )", ReadFile,
               "ReadFile( $hFile, $opBuffer, $lBytes, $olBytesRead,
               $pOverlapped )", SetErrorMode, "$uOldMode= SetErrorMode(
               $uNewMode )", "SEM_FAILCRITICALERRORS",
               "SEM_NOALIGNMENTFAULTEXCEPT", "SEM_NOGPFAULTERRORBOX",
               "SEM_NOOPENFILEERRORBOX", setFilePointer, "$uNewPos =
               setFilePointer( $hFile, $ivOffset, $uFromWhere )",
               SetFilePointer, "$uNewPos = SetFilePointer( $hFile, $ivOffset,
               $ioivOffsetHigh, $uFromWhere )", SetHandleInformation,
               "SetHandleInformation( $hObject, $uMask, $uFlags )", WriteFile,
               "WriteFile( $hFile, $pBuffer, $lBytes, $ouBytesWritten,
               $pOverlapped )", ":FuncA", ":FuncW", CopyFileW, "CopyFileW(
               $swOldFileName, $swNewFileName, $bFailIfExists )", CreateFileW,
               "$hObject= CreateFileW( $swPath, $uAccess, $uShare, $pSecAttr,
               $uCreate, $uFlags, $hModel )", DefineDosDeviceW,
               "DefineDosDeviceW( $uFlags, $swDosDeviceName, $swTargetPath )",
               DeleteFileW, "DeleteFileW( $swFileName )", GetDriveTypeW,
               "$uDriveType= GetDriveTypeW( $swRootPath )",
               GetFileAttributesW, "$uAttrs= GetFileAttributesW( $swPath )",
               GetLogicalDriveStringsW, "$olwOutLength=
               GetLogicalDriveStringsW( $lwBufSize, $oswBuffer )",
               GetVolumeInformationW, "GetVolumeInformationW( $swRootPath,
               $oswVolName, $lwVolName, $ouSerialNum, $ouMaxNameLen,
               $ouFsFlags, $oswFsType, $lwFsType )", MoveFileW, "MoveFileW(
               $swOldName, $swNewName )", MoveFileExW, "MoveFileExW(
               $swOldName, $swNewName, $uFlags )", QueryDosDeviceW,
               "$olwTargetLen= QueryDosDeviceW( $swDeviceName, $oswTargetPath,
               $lwTargetBuf )", ":Misc", ":DDD_", ":DRIVE_", ":FILE_",
               ":FILE_ATTRIBUTE_", ":FILE_FLAG_", ":FILE_SHARE_",
               ":FILE_TYPE_", ":FS_", ":HANDLE_FLAG_", HANDLE_FLAG_INHERIT,
               HANDLE_FLAG_PROTECT_FROM_CLOSE, ":IOCTL_STORAGE_",
               "IOCTL_STORAGE_CHECK_VERIFY", "IOCTL_STORAGE_MEDIA_REMOVAL",
               "IOCTL_STORAGE_EJECT_MEDIA", "IOCTL_STORAGE_LOAD_MEDIA",
               "IOCTL_STORAGE_RESERVE", "IOCTL_STORAGE_RELEASE",
               "IOCTL_STORAGE_FIND_NEW_DEVICES",
               "IOCTL_STORAGE_GET_MEDIA_TYPES", $ucCylsLow[$i],
               $ivcCylsHigh[$i], $uMediaType[$i], $uTracksPerCyl[$i],
               $uSectsPerTrack[$i], $uBytesPerSect[$i], ":IOCTL_DISK_",
               "IOCTL_DISK_GET_DRIVE_GEOMETRY", $ucCylsLow, $ivcCylsHigh,
               $uMediaType, $uTracksPerCyl, $uSectsPerTrack, $uBytesPerSect,
               "IOCTL_DISK_GET_PARTITION_INFO", $uStartLow and $ivStartHigh,
               $ucHiddenSects, $uPartitionSeqNumber, $uPartitionType,
               $bActive, $bRecognized, $bToRewrite,
               "IOCTL_DISK_SET_PARTITION_INFO", "IOCTL_DISK_GET_DRIVE_LAYOUT",
               $cPartitions, $uDiskSignature, "IOCTL_DISK_GET_MEDIA_TYPES",
               "IOCTL_DISK_SET_DRIVE_LAYOUT", "IOCTL_DISK_VERIFY",
               $uStartOffsetLow and $ivStartOffsetHigh, $uLength,
               "IOCTL_DISK_FORMAT_TRACKS", "IOCTL_DISK_REASSIGN_BLOCKS",
               "IOCTL_DISK_PERFORMANCE", "IOCTL_DISK_IS_WRITABLE",
               "IOCTL_DISK_LOGGING", DISK_LOGGING_START, DISK_LOGGING_STOP,
               DISK_LOGGING_DUMP, DISK_LOGGING_BINNING,
               "IOCTL_DISK_FORMAT_TRACKS_EX",
               "IOCTL_DISK_HISTOGRAM_STRUCTURE", "IOCTL_DISK_HISTOGRAM_DATA",
               "IOCTL_DISK_HISTOGRAM_RESET", "IOCTL_DISK_REQUEST_STRUCTURE",
               "IOCTL_DISK_REQUEST_DATA", ":FSCTL_",
               "FSCTL_SET_REPARSE_POINT", "FSCTL_GET_REPARSE_POINT",
               "FSCTL_DELETE_REPARSE_POINT", ":GENERIC_", ":MEDIA_TYPE",
               "Unknown", "F5_1Pt2_512", "F3_1Pt44_512", "F3_2Pt88_512",
               "F3_20Pt8_512", "F3_720_512", "F5_360_512", "F5_320_512",
               "F5_320_1024", "F5_180_512", "F5_160_512", "RemovableMedia",
               "FixedMedia", "F3_120M_512", ":MOVEFILE_", ":SECURITY_",
               ":SEM_", ":PARTITION_", ":ALL"

       BUGS
       AUTHOR
       SEE ALSO

       Win32CORE - Win32 CORE function stubs


       DESCRIPTION
       HISTORY

       XSLoader - Dynamically load C libraries into Perl code


       VERSION
       SYNOPSIS
       DESCRIPTION
           Migration from "DynaLoader"
           Backward compatible boilerplate
       Order of initialization: early load()
           The most hairy case
       DIAGNOSTICS
           "Can't find '%s' symbol in %s", "Can't load '%s' for module %s:
           %s", "Undefined symbols present after loading %s: %s",
           "XSLoader::load('Your::Module', $Your::Module::VERSION)"

       LIMITATIONS
       BUGS
       SEE ALSO
       AUTHORS
       COPYRIGHT

AUXILIARY DOCUMENTATION
       Here should be listed all the extra programs' documentation, but they
       don't all have manual pages yet:

       a2p
       c2ph
       dprofpp
       h2ph
       h2xs
       perlbug
       perldoc
       pl2pm
       pod2html
       pod2man
       s2p
       splain
       xsubpp

AUTHOR
       Larry Wall <larry@wall.org>, with the help of oodles of other folks.



perl v5.10.0                      2007-12-18                        PERLTOC(1)
