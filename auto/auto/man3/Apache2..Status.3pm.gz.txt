apache_modpperl-103~96::modCperl-2.0.4::docs::api::Apache2::Status(3)Status(3)



NAME
       Apache2::Status - Embedded interpreter status information

Synopsis
         <Location /perl-status>
             SetHandler modperl
             PerlOptions +GlobalRequest
             PerlResponseHandler Apache2::Status
         </Location>

         or

         <Location /perl-status>
             SetHandler perl-script
             PerlResponseHandler Apache2::Status
         </Location>

Description
       The "Apache2::Status" module provides some information about the status
       of the Perl interpreter embedded in the server.

       Configure like so:

         <Location /perl-status>
             SetHandler modperl
             PerlOptions +GlobalRequest
             PerlResponseHandler Apache2::Status
         </Location>

       Notice that under the "modperl" core handler the Environment menu
       option will show only the environment under that handler. To see the
       environment seen by handlers running under the "perl-script" core
       handler, configure "Apache2::Status" as:

         <Location /perl-status>
             SetHandler perl-script
             PerlResponseHandler Apache2::Status
         </Location>

       Other modules can "plugin" a menu item like so:

         require Apache2::Module;
         Apache2::Status->menu_item(
             'DBI' => "DBI connections", #item for Apache::DBI module
             sub {
                 my ($r, $q) = @_; #request and CGI objects
                 my (@strings);
                 push @strings,  "blobs of html";
                 return \@strings;     #return an array ref
             }
         ) if Apache2::Module::loaded('Apache2::Status');

       WARNING: "Apache2::Status" must be loaded before these modules via the
       "PerlModule" or "PerlRequire" directives (or from startup.pl).

       A very common setup might be:
         Perl Module B::TerseSize

         <Location /perl-status>
             SetHandler perl-script
             PerlResponseHandler Apache2::Status
             PerlSetVar StatusOptionsAll On
             PerlSetVar StatusDeparseOptions "-p -sC"
         </Location>

       due to the implementation of Apache2::Status::noh_fileline in
       B::TerseSize, you must load B::TerseSize first.

Options
       "StatusOptionsAll"

       This single directive will enable all of the options described below.

         PerlSetVar StatusOptionsAll On

       "StatusDumper"

       When browsing symbol tables, the values of arrays, hashes and scalars
       can be viewed via "Data::Dumper" if this configuration variable is set
       to "On":

         PerlSetVar StatusDumper On

       "StatusPeek"

       With this option "On" and the "Apache::Peek" module installed,
       functions and variables can be viewed ala "Devel::Peek" style:

         PerlSetVar StatusPeek On

       "StatusLexInfo"

       With this option "On" and the "B::LexInfo" module installed, subroutine
       lexical variable information can be viewed.

         PerlSetVar StatusLexInfo On

       "StatusDeparse"

       With this option "On" subroutines can be "deparsed".

         PerlSetVar StatusDeparse On

       Options can be passed to "B::Deparse::new" like so:

         PerlSetVar StatusDeparseOptions "-p -sC"

       See the "B::Deparse" manpage for details.

       "StatusTerse"

       With this option "On", text-based op tree graphs of subroutines can be
       displayed, thanks to "B::Terse".

         PerlSetVar StatusTerse On

       "StatusTerseSize"

       With this option "On" and the "B::TerseSize" module installed, text-
       based op tree graphs of subroutines and their size can be displayed.
       See the "B::TerseSize" docs for more info.

         PerlSetVar StatusTerseSize On

       "StatusTerseSizeMainSummary"

       With this option "On" and the "B::TerseSize" module installed, a
       "Memory Usage" will be added to the "Apache2::Status" main menu.  This
       option is disabled by default, as it can be rather cpu intensive to
       summarize memory usage for the entire server.  It is strongly suggested
       that this option only be used with a development server running in "-X"
       mode, as the results will be cached.

         PerlSetVar StatusTerseSizeMainSummary On

       "StatusGraph"

       When "StatusDumper" is enabled, another link "OP Tree Graph" will be
       present with the dump if this configuration variable is set to "On":

         PerlSetVar StatusGraph

       This requires the B module (part of the Perl compiler kit) and
       "B::Graph" (version 0.03 or higher) module to be installed along with
       the "dot" program.

       Dot is part of the graph visualization toolkit from AT&T:
       http://www.graphviz.org/.

       WARNING: Some graphs may produce very large images, some graphs may
       produce no image if "B::Graph"'s output is incorrect.

       "Dot"

       Location of the dot program for "StatusGraph", if other than /usr/bin
       or /usr/local/bin

       "GraphDir"

       Directory where "StatusGraph" should write it's temporary image files.
       Default is "$ServerRoot/logs/b_graphs".

Prerequisites
       The "Devel::Symdump" module, version 2.00 or higher.

       Other optional functionality requirements: "B::Deparse" - 0.59,
       "B::Fathom" - 0.05, ""B::Graph"" - 0.03.

Copyright
       mod_perl 2.0 and its core modules are copyrighted under The Apache
       Software License, Version 2.0.

See Also
       perl(1), Apache(3), Devel::Symdump(3), Data::Dumper(3), B(3),
       "B::Graph"(3), mod_perl 2.0 documentation.

Authors
       Doug MacEachern with contributions from Stas Bekman



perl v5.10.0che_mod_perl-103~96::m2007-11-110.4::docs::api::Apache2::Status(3)
